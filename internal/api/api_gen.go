// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package api

import (
	"bytes"
	"context"
	"encoding/json"
	"fmt"
	"io"
	"net/http"
	"net/url"
	"strings"
	"time"

	"github.com/oapi-codegen/nullable"
	"github.com/oapi-codegen/runtime"
)

const (
	BearerAuthScopes = "bearerAuth.Scopes"
)

// Defines values for ApplicationBuildPack.
const (
	ApplicationBuildPackDockercompose ApplicationBuildPack = "dockercompose"
	ApplicationBuildPackDockerfile    ApplicationBuildPack = "dockerfile"
	ApplicationBuildPackNixpacks      ApplicationBuildPack = "nixpacks"
	ApplicationBuildPackStatic        ApplicationBuildPack = "static"
)

// Defines values for ApplicationRedirect.
const (
	ApplicationRedirectBoth   ApplicationRedirect = "both"
	ApplicationRedirectNonWww ApplicationRedirect = "non-www"
	ApplicationRedirectWww    ApplicationRedirect = "www"
)

// Defines values for N2b433ad6f5d259eb7f4f3b5af9913708JSONBodyBuildPack.
const (
	N2b433ad6f5d259eb7f4f3b5af9913708JSONBodyBuildPackDockercompose N2b433ad6f5d259eb7f4f3b5af9913708JSONBodyBuildPack = "dockercompose"
	N2b433ad6f5d259eb7f4f3b5af9913708JSONBodyBuildPackDockerfile    N2b433ad6f5d259eb7f4f3b5af9913708JSONBodyBuildPack = "dockerfile"
	N2b433ad6f5d259eb7f4f3b5af9913708JSONBodyBuildPackNixpacks      N2b433ad6f5d259eb7f4f3b5af9913708JSONBodyBuildPack = "nixpacks"
	N2b433ad6f5d259eb7f4f3b5af9913708JSONBodyBuildPackStatic        N2b433ad6f5d259eb7f4f3b5af9913708JSONBodyBuildPack = "static"
)

// Defines values for N2b433ad6f5d259eb7f4f3b5af9913708JSONBodyRedirect.
const (
	N2b433ad6f5d259eb7f4f3b5af9913708JSONBodyRedirectBoth   N2b433ad6f5d259eb7f4f3b5af9913708JSONBodyRedirect = "both"
	N2b433ad6f5d259eb7f4f3b5af9913708JSONBodyRedirectNonWww N2b433ad6f5d259eb7f4f3b5af9913708JSONBodyRedirect = "non-www"
	N2b433ad6f5d259eb7f4f3b5af9913708JSONBodyRedirectWww    N2b433ad6f5d259eb7f4f3b5af9913708JSONBodyRedirect = "www"
)

// Defines values for E9a2d6dd9404acf880dc3053f09477fcJSONBodyRedirect.
const (
	E9a2d6dd9404acf880dc3053f09477fcJSONBodyRedirectBoth   E9a2d6dd9404acf880dc3053f09477fcJSONBodyRedirect = "both"
	E9a2d6dd9404acf880dc3053f09477fcJSONBodyRedirectNonWww E9a2d6dd9404acf880dc3053f09477fcJSONBodyRedirect = "non-www"
	E9a2d6dd9404acf880dc3053f09477fcJSONBodyRedirectWww    E9a2d6dd9404acf880dc3053f09477fcJSONBodyRedirect = "www"
)

// Defines values for E3eaa989ffb05366247a00cdfd551efaJSONBodyBuildPack.
const (
	E3eaa989ffb05366247a00cdfd551efaJSONBodyBuildPackDockercompose E3eaa989ffb05366247a00cdfd551efaJSONBodyBuildPack = "dockercompose"
	E3eaa989ffb05366247a00cdfd551efaJSONBodyBuildPackDockerfile    E3eaa989ffb05366247a00cdfd551efaJSONBodyBuildPack = "dockerfile"
	E3eaa989ffb05366247a00cdfd551efaJSONBodyBuildPackNixpacks      E3eaa989ffb05366247a00cdfd551efaJSONBodyBuildPack = "nixpacks"
	E3eaa989ffb05366247a00cdfd551efaJSONBodyBuildPackStatic        E3eaa989ffb05366247a00cdfd551efaJSONBodyBuildPack = "static"
)

// Defines values for E3eaa989ffb05366247a00cdfd551efaJSONBodyRedirect.
const (
	E3eaa989ffb05366247a00cdfd551efaJSONBodyRedirectBoth   E3eaa989ffb05366247a00cdfd551efaJSONBodyRedirect = "both"
	E3eaa989ffb05366247a00cdfd551efaJSONBodyRedirectNonWww E3eaa989ffb05366247a00cdfd551efaJSONBodyRedirect = "non-www"
	E3eaa989ffb05366247a00cdfd551efaJSONBodyRedirectWww    E3eaa989ffb05366247a00cdfd551efaJSONBodyRedirect = "www"
)

// Defines values for N4d46c84bda4f1a411f6dda15fce4061fJSONBodyBuildPack.
const (
	N4d46c84bda4f1a411f6dda15fce4061fJSONBodyBuildPackDockercompose N4d46c84bda4f1a411f6dda15fce4061fJSONBodyBuildPack = "dockercompose"
	N4d46c84bda4f1a411f6dda15fce4061fJSONBodyBuildPackDockerfile    N4d46c84bda4f1a411f6dda15fce4061fJSONBodyBuildPack = "dockerfile"
	N4d46c84bda4f1a411f6dda15fce4061fJSONBodyBuildPackNixpacks      N4d46c84bda4f1a411f6dda15fce4061fJSONBodyBuildPack = "nixpacks"
	N4d46c84bda4f1a411f6dda15fce4061fJSONBodyBuildPackStatic        N4d46c84bda4f1a411f6dda15fce4061fJSONBodyBuildPack = "static"
)

// Defines values for N4d46c84bda4f1a411f6dda15fce4061fJSONBodyRedirect.
const (
	N4d46c84bda4f1a411f6dda15fce4061fJSONBodyRedirectBoth   N4d46c84bda4f1a411f6dda15fce4061fJSONBodyRedirect = "both"
	N4d46c84bda4f1a411f6dda15fce4061fJSONBodyRedirectNonWww N4d46c84bda4f1a411f6dda15fce4061fJSONBodyRedirect = "non-www"
	N4d46c84bda4f1a411f6dda15fce4061fJSONBodyRedirectWww    N4d46c84bda4f1a411f6dda15fce4061fJSONBodyRedirect = "www"
)

// Defines values for Cb56324ad19693469b4461d3f6065a5bJSONBodyBuildPack.
const (
	Cb56324ad19693469b4461d3f6065a5bJSONBodyBuildPackDockercompose Cb56324ad19693469b4461d3f6065a5bJSONBodyBuildPack = "dockercompose"
	Cb56324ad19693469b4461d3f6065a5bJSONBodyBuildPackDockerfile    Cb56324ad19693469b4461d3f6065a5bJSONBodyBuildPack = "dockerfile"
	Cb56324ad19693469b4461d3f6065a5bJSONBodyBuildPackNixpacks      Cb56324ad19693469b4461d3f6065a5bJSONBodyBuildPack = "nixpacks"
	Cb56324ad19693469b4461d3f6065a5bJSONBodyBuildPackStatic        Cb56324ad19693469b4461d3f6065a5bJSONBodyBuildPack = "static"
)

// Defines values for Cb56324ad19693469b4461d3f6065a5bJSONBodyRedirect.
const (
	Cb56324ad19693469b4461d3f6065a5bJSONBodyRedirectBoth   Cb56324ad19693469b4461d3f6065a5bJSONBodyRedirect = "both"
	Cb56324ad19693469b4461d3f6065a5bJSONBodyRedirectNonWww Cb56324ad19693469b4461d3f6065a5bJSONBodyRedirect = "non-www"
	Cb56324ad19693469b4461d3f6065a5bJSONBodyRedirectWww    Cb56324ad19693469b4461d3f6065a5bJSONBodyRedirect = "www"
)

// Defines values for N62a3b1775e8cba5d39a236ebb69830b7JSONBodyBuildPack.
const (
	N62a3b1775e8cba5d39a236ebb69830b7JSONBodyBuildPackDockercompose N62a3b1775e8cba5d39a236ebb69830b7JSONBodyBuildPack = "dockercompose"
	N62a3b1775e8cba5d39a236ebb69830b7JSONBodyBuildPackDockerfile    N62a3b1775e8cba5d39a236ebb69830b7JSONBodyBuildPack = "dockerfile"
	N62a3b1775e8cba5d39a236ebb69830b7JSONBodyBuildPackNixpacks      N62a3b1775e8cba5d39a236ebb69830b7JSONBodyBuildPack = "nixpacks"
	N62a3b1775e8cba5d39a236ebb69830b7JSONBodyBuildPackStatic        N62a3b1775e8cba5d39a236ebb69830b7JSONBodyBuildPack = "static"
)

// Defines values for N62a3b1775e8cba5d39a236ebb69830b7JSONBodyRedirect.
const (
	Both   N62a3b1775e8cba5d39a236ebb69830b7JSONBodyRedirect = "both"
	NonWww N62a3b1775e8cba5d39a236ebb69830b7JSONBodyRedirect = "non-www"
	Www    N62a3b1775e8cba5d39a236ebb69830b7JSONBodyRedirect = "www"
)

// Defines values for N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType.
const (
	Activepieces                N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "activepieces"
	Appsmith                    N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "appsmith"
	Appwrite                    N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "appwrite"
	Authentik                   N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "authentik"
	Babybuddy                   N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "babybuddy"
	Budge                       N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "budge"
	Changedetection             N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "changedetection"
	Chatwoot                    N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "chatwoot"
	ClassicpressWithMariadb     N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "classicpress-with-mariadb"
	ClassicpressWithMysql       N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "classicpress-with-mysql"
	ClassicpressWithoutDatabase N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "classicpress-without-database"
	Cloudflared                 N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "cloudflared"
	CodeServer                  N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "code-server"
	Dashboard                   N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "dashboard"
	Directus                    N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "directus"
	DirectusWithPostgresql      N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "directus-with-postgresql"
	DockerRegistry              N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "docker-registry"
	Docuseal                    N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "docuseal"
	DocusealWithPostgres        N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "docuseal-with-postgres"
	Dokuwiki                    N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "dokuwiki"
	Duplicati                   N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "duplicati"
	Emby                        N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "emby"
	Embystat                    N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "embystat"
	Fider                       N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "fider"
	Filebrowser                 N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "filebrowser"
	Firefly                     N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "firefly"
	Formbricks                  N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "formbricks"
	Ghost                       N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "ghost"
	Gitea                       N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "gitea"
	GiteaWithMariadb            N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "gitea-with-mariadb"
	GiteaWithMysql              N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "gitea-with-mysql"
	GiteaWithPostgresql         N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "gitea-with-postgresql"
	Glance                      N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "glance"
	Glances                     N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "glances"
	Glitchtip                   N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "glitchtip"
	Grafana                     N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "grafana"
	GrafanaWithPostgresql       N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "grafana-with-postgresql"
	Grocy                       N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "grocy"
	Heimdall                    N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "heimdall"
	Homepage                    N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "homepage"
	Jellyfin                    N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "jellyfin"
	Kuzzle                      N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "kuzzle"
	Listmonk                    N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "listmonk"
	Logto                       N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "logto"
	Mediawiki                   N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "mediawiki"
	Meilisearch                 N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "meilisearch"
	Metabase                    N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "metabase"
	Metube                      N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "metube"
	Minio                       N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "minio"
	Moodle                      N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "moodle"
	N8n                         N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "n8n"
	N8nWithPostgresql           N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "n8n-with-postgresql"
	NextImageTransformation     N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "next-image-transformation"
	Nextcloud                   N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "nextcloud"
	Nocodb                      N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "nocodb"
	Odoo                        N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "odoo"
	Openblocks                  N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "openblocks"
	Pairdrop                    N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "pairdrop"
	Penpot                      N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "penpot"
	Phpmyadmin                  N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "phpmyadmin"
	Pocketbase                  N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "pocketbase"
	Posthog                     N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "posthog"
	ReactiveResume              N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "reactive-resume"
	Rocketchat                  N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "rocketchat"
	Shlink                      N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "shlink"
	Slash                       N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "slash"
	Snapdrop                    N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "snapdrop"
	Statusnook                  N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "statusnook"
	StirlingPdf                 N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "stirling-pdf"
	Supabase                    N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "supabase"
	Syncthing                   N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "syncthing"
	Tolgee                      N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "tolgee"
	Trigger                     N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "trigger"
	TriggerWithExternalDatabase N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "trigger-with-external-database"
	Twenty                      N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "twenty"
	Umami                       N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "umami"
	UnleashWithPostgresql       N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "unleash-with-postgresql"
	UnleashWithoutDatabase      N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "unleash-without-database"
	UptimeKuma                  N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "uptime-kuma"
	Vaultwarden                 N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "vaultwarden"
	Vikunja                     N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "vikunja"
	Weblate                     N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "weblate"
	Whoogle                     N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "whoogle"
	WordpressWithMariadb        N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "wordpress-with-mariadb"
	WordpressWithMysql          N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "wordpress-with-mysql"
	WordpressWithoutDatabase    N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType = "wordpress-without-database"
)

// Application Application model
type Application struct {
	// BaseDirectory Base directory for all commands.
	BaseDirectory *string `json:"base_directory,omitempty"`

	// BuildCommand Build command.
	BuildCommand *string `json:"build_command,omitempty"`

	// BuildPack Build pack.
	BuildPack *ApplicationBuildPack `json:"build_pack,omitempty"`

	// ComposeParsingVersion How Coolify parse the compose file.
	ComposeParsingVersion *string `json:"compose_parsing_version,omitempty"`

	// ConfigHash Configuration hash.
	ConfigHash *string `json:"config_hash,omitempty"`

	// CreatedAt The date and time when the application was created.
	CreatedAt *time.Time `json:"created_at,omitempty"`

	// CustomDockerRunOptions Custom docker run options.
	CustomDockerRunOptions nullable.Nullable[string] `json:"custom_docker_run_options,omitempty"`

	// CustomHealthcheckFound Custom healthcheck found.
	CustomHealthcheckFound *bool `json:"custom_healthcheck_found,omitempty"`

	// CustomLabels Custom labels.
	CustomLabels nullable.Nullable[string] `json:"custom_labels,omitempty"`

	// DeletedAt The date and time when the application was deleted.
	DeletedAt nullable.Nullable[time.Time] `json:"deleted_at,omitempty"`

	// Description The application description.
	Description nullable.Nullable[string] `json:"description,omitempty"`

	// DestinationId Destination identifier.
	DestinationId *int `json:"destination_id,omitempty"`

	// DestinationType Destination type.
	DestinationType *string `json:"destination_type,omitempty"`

	// DockerCompose Docker compose content. Used for docker compose build pack.
	DockerCompose nullable.Nullable[string] `json:"docker_compose,omitempty"`

	// DockerComposeCustomBuildCommand Docker compose custom build command.
	DockerComposeCustomBuildCommand nullable.Nullable[string] `json:"docker_compose_custom_build_command,omitempty"`

	// DockerComposeCustomStartCommand Docker compose custom start command.
	DockerComposeCustomStartCommand nullable.Nullable[string] `json:"docker_compose_custom_start_command,omitempty"`

	// DockerComposeDomains Docker compose domains.
	DockerComposeDomains nullable.Nullable[string] `json:"docker_compose_domains,omitempty"`

	// DockerComposeLocation Docker compose location.
	DockerComposeLocation *string `json:"docker_compose_location,omitempty"`

	// DockerComposeRaw Docker compose raw content.
	DockerComposeRaw nullable.Nullable[string] `json:"docker_compose_raw,omitempty"`

	// DockerRegistryImageName Docker registry image name.
	DockerRegistryImageName nullable.Nullable[string] `json:"docker_registry_image_name,omitempty"`

	// DockerRegistryImageTag Docker registry image tag.
	DockerRegistryImageTag nullable.Nullable[string] `json:"docker_registry_image_tag,omitempty"`

	// Dockerfile Dockerfile content. Used for dockerfile build pack.
	Dockerfile nullable.Nullable[string] `json:"dockerfile,omitempty"`

	// DockerfileLocation Dockerfile location.
	DockerfileLocation *string `json:"dockerfile_location,omitempty"`

	// DockerfileTargetBuild Dockerfile target build.
	DockerfileTargetBuild nullable.Nullable[string] `json:"dockerfile_target_build,omitempty"`

	// EnvironmentId Environment identifier.
	EnvironmentId *int `json:"environment_id,omitempty"`

	// Fqdn The application domains.
	Fqdn nullable.Nullable[string] `json:"fqdn,omitempty"`

	// GitBranch Git branch.
	GitBranch *string `json:"git_branch,omitempty"`

	// GitCommitSha Git commit SHA.
	GitCommitSha *string `json:"git_commit_sha,omitempty"`

	// GitFullUrl Git full URL.
	GitFullUrl nullable.Nullable[string] `json:"git_full_url,omitempty"`

	// GitRepository Git repository URL.
	GitRepository *string `json:"git_repository,omitempty"`

	// HealthCheckEnabled Health check enabled.
	HealthCheckEnabled *bool `json:"health_check_enabled,omitempty"`

	// HealthCheckHost Health check host.
	HealthCheckHost nullable.Nullable[string] `json:"health_check_host,omitempty"`

	// HealthCheckInterval Health check interval in seconds.
	HealthCheckInterval *int `json:"health_check_interval,omitempty"`

	// HealthCheckMethod Health check method.
	HealthCheckMethod *string `json:"health_check_method,omitempty"`

	// HealthCheckPath Health check path.
	HealthCheckPath *string `json:"health_check_path,omitempty"`

	// HealthCheckPort Health check port.
	HealthCheckPort nullable.Nullable[string] `json:"health_check_port,omitempty"`

	// HealthCheckResponseText Health check response text.
	HealthCheckResponseText nullable.Nullable[string] `json:"health_check_response_text,omitempty"`

	// HealthCheckRetries Health check retries count.
	HealthCheckRetries *int `json:"health_check_retries,omitempty"`

	// HealthCheckReturnCode Health check return code.
	HealthCheckReturnCode *int `json:"health_check_return_code,omitempty"`

	// HealthCheckScheme Health check scheme.
	HealthCheckScheme *string `json:"health_check_scheme,omitempty"`

	// HealthCheckStartPeriod Health check start period in seconds.
	HealthCheckStartPeriod *int `json:"health_check_start_period,omitempty"`

	// HealthCheckTimeout Health check timeout in seconds.
	HealthCheckTimeout *int `json:"health_check_timeout,omitempty"`

	// Id The application identifier in the database.
	Id *int `json:"id,omitempty"`

	// InstallCommand Install command.
	InstallCommand *string `json:"install_command,omitempty"`

	// LimitsCpuShares CPU shares.
	LimitsCpuShares *int `json:"limits_cpu_shares,omitempty"`

	// LimitsCpus CPU limit.
	LimitsCpus *string `json:"limits_cpus,omitempty"`

	// LimitsCpuset CPU set.
	LimitsCpuset nullable.Nullable[string] `json:"limits_cpuset,omitempty"`

	// LimitsMemory Memory limit.
	LimitsMemory *string `json:"limits_memory,omitempty"`

	// LimitsMemoryReservation Memory reservation.
	LimitsMemoryReservation *string `json:"limits_memory_reservation,omitempty"`

	// LimitsMemorySwap Memory swap limit.
	LimitsMemorySwap *string `json:"limits_memory_swap,omitempty"`

	// LimitsMemorySwappiness Memory swappiness.
	LimitsMemorySwappiness *int `json:"limits_memory_swappiness,omitempty"`

	// ManualWebhookSecretBitbucket Manual webhook secret for Bitbucket.
	ManualWebhookSecretBitbucket nullable.Nullable[string] `json:"manual_webhook_secret_bitbucket,omitempty"`

	// ManualWebhookSecretGitea Manual webhook secret for Gitea.
	ManualWebhookSecretGitea nullable.Nullable[string] `json:"manual_webhook_secret_gitea,omitempty"`

	// ManualWebhookSecretGithub Manual webhook secret for GitHub.
	ManualWebhookSecretGithub nullable.Nullable[string] `json:"manual_webhook_secret_github,omitempty"`

	// ManualWebhookSecretGitlab Manual webhook secret for GitLab.
	ManualWebhookSecretGitlab nullable.Nullable[string] `json:"manual_webhook_secret_gitlab,omitempty"`

	// Name The application name.
	Name *string `json:"name,omitempty"`

	// PortsExposes Ports exposes.
	PortsExposes *string `json:"ports_exposes,omitempty"`

	// PortsMappings Ports mappings.
	PortsMappings nullable.Nullable[string] `json:"ports_mappings,omitempty"`

	// PostDeploymentCommand Post deployment command.
	PostDeploymentCommand nullable.Nullable[string] `json:"post_deployment_command,omitempty"`

	// PostDeploymentCommandContainer Post deployment command container.
	PostDeploymentCommandContainer nullable.Nullable[string] `json:"post_deployment_command_container,omitempty"`

	// PreDeploymentCommand Pre deployment command.
	PreDeploymentCommand nullable.Nullable[string] `json:"pre_deployment_command,omitempty"`

	// PreDeploymentCommandContainer Pre deployment command container.
	PreDeploymentCommandContainer nullable.Nullable[string] `json:"pre_deployment_command_container,omitempty"`

	// PreviewUrlTemplate Preview URL template.
	PreviewUrlTemplate *string `json:"preview_url_template,omitempty"`

	// PrivateKeyId Private key identifier.
	PrivateKeyId nullable.Nullable[int] `json:"private_key_id,omitempty"`

	// PublishDirectory Publish directory.
	PublishDirectory *string `json:"publish_directory,omitempty"`

	// Redirect How to set redirect with Traefik / Caddy. www<->non-www.
	Redirect nullable.Nullable[ApplicationRedirect] `json:"redirect,omitempty"`

	// RepositoryProjectId The repository project identifier.
	RepositoryProjectId nullable.Nullable[int] `json:"repository_project_id,omitempty"`

	// SourceId Source identifier.
	SourceId nullable.Nullable[int] `json:"source_id,omitempty"`

	// StartCommand Start command.
	StartCommand *string `json:"start_command,omitempty"`

	// StaticImage Static image used when static site is deployed.
	StaticImage *string `json:"static_image,omitempty"`

	// Status Application status.
	Status *string `json:"status,omitempty"`

	// SwarmPlacementConstraints Swarm placement constraints. Only used for swarm deployments.
	SwarmPlacementConstraints nullable.Nullable[string] `json:"swarm_placement_constraints,omitempty"`

	// SwarmReplicas Swarm replicas. Only used for swarm deployments.
	SwarmReplicas nullable.Nullable[int] `json:"swarm_replicas,omitempty"`

	// UpdatedAt The date and time when the application was last updated.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`

	// Uuid The application UUID.
	Uuid *string `json:"uuid,omitempty"`

	// WatchPaths Watch paths.
	WatchPaths nullable.Nullable[string] `json:"watch_paths,omitempty"`
}

// ApplicationBuildPack Build pack.
type ApplicationBuildPack string

// ApplicationRedirect How to set redirect with Traefik / Caddy. www<->non-www.
type ApplicationRedirect string

// ApplicationDeploymentQueue Project model
type ApplicationDeploymentQueue struct {
	ApplicationId    *string `json:"application_id,omitempty"`
	ApplicationName  *string `json:"application_name,omitempty"`
	Commit           *string `json:"commit,omitempty"`
	CommitMessage    *string `json:"commit_message,omitempty"`
	CreatedAt        *string `json:"created_at,omitempty"`
	CurrentProcessId *string `json:"current_process_id,omitempty"`
	DeploymentUrl    *string `json:"deployment_url,omitempty"`
	DeploymentUuid   *string `json:"deployment_uuid,omitempty"`
	DestinationId    *string `json:"destination_id,omitempty"`
	ForceRebuild     *bool   `json:"force_rebuild,omitempty"`
	GitType          *string `json:"git_type,omitempty"`
	Id               *int    `json:"id,omitempty"`
	IsApi            *bool   `json:"is_api,omitempty"`
	IsWebhook        *bool   `json:"is_webhook,omitempty"`
	Logs             *string `json:"logs,omitempty"`
	OnlyThisServer   *bool   `json:"only_this_server,omitempty"`
	PullRequestId    *int    `json:"pull_request_id,omitempty"`
	RestartOnly      *bool   `json:"restart_only,omitempty"`
	Rollback         *bool   `json:"rollback,omitempty"`
	ServerId         *int    `json:"server_id,omitempty"`
	ServerName       *string `json:"server_name,omitempty"`
	Status           *string `json:"status,omitempty"`
	UpdatedAt        *string `json:"updated_at,omitempty"`
}

// Environment Environment model
type Environment struct {
	CreatedAt   *string `json:"created_at,omitempty"`
	Description *string `json:"description,omitempty"`
	Id          *int    `json:"id,omitempty"`
	Name        *string `json:"name,omitempty"`
	ProjectId   *int    `json:"project_id,omitempty"`
	UpdatedAt   *string `json:"updated_at,omitempty"`
}

// EnvironmentVariable Environment Variable model
type EnvironmentVariable struct {
	ApplicationId *int    `json:"application_id,omitempty"`
	CreatedAt     *string `json:"created_at,omitempty"`
	DatabaseId    *int    `json:"database_id,omitempty"`
	Id            *int    `json:"id,omitempty"`
	IsBuildTime   *bool   `json:"is_build_time,omitempty"`
	IsLiteral     *bool   `json:"is_literal,omitempty"`
	IsMultiline   *bool   `json:"is_multiline,omitempty"`
	IsPreview     *bool   `json:"is_preview,omitempty"`
	IsShared      *bool   `json:"is_shared,omitempty"`
	IsShownOnce   *bool   `json:"is_shown_once,omitempty"`
	Key           *string `json:"key,omitempty"`
	RealValue     *string `json:"real_value,omitempty"`
	ServiceId     *int    `json:"service_id,omitempty"`
	UpdatedAt     *string `json:"updated_at,omitempty"`
	Uuid          *string `json:"uuid,omitempty"`
	Value         *string `json:"value,omitempty"`
	Version       *string `json:"version,omitempty"`
}

// PrivateKey Private Key model
type PrivateKey struct {
	CreatedAt    *string `json:"created_at,omitempty"`
	Description  *string `json:"description,omitempty"`
	Id           *int    `json:"id,omitempty"`
	IsGitRelated *bool   `json:"is_git_related,omitempty"`
	Name         *string `json:"name,omitempty"`
	PrivateKey   *string `json:"private_key,omitempty"`
	TeamId       *int    `json:"team_id,omitempty"`
	UpdatedAt    *string `json:"updated_at,omitempty"`
	Uuid         *string `json:"uuid,omitempty"`
}

// Project Project model
type Project struct {
	Description *string `json:"description,omitempty"`

	// Environments The environments of the project.
	Environments *[]Environment `json:"environments,omitempty"`
	Id           *int           `json:"id,omitempty"`
	Name         *string        `json:"name,omitempty"`
	Uuid         *string        `json:"uuid,omitempty"`
}

// Server Server model
type Server struct {
	Description                   *string                 `json:"description,omitempty"`
	HighDiskUsageNotificationSent *bool                   `json:"high_disk_usage_notification_sent,omitempty"`
	Id                            *int                    `json:"id,omitempty"`
	Ip                            *string                 `json:"ip,omitempty"`
	LogDrainNotificationSent      *bool                   `json:"log_drain_notification_sent,omitempty"`
	Name                          *string                 `json:"name,omitempty"`
	Port                          *int                    `json:"port,omitempty"`
	Proxy                         *map[string]interface{} `json:"proxy,omitempty"`

	// Settings Server Settings model
	Settings                    *ServerSetting `json:"settings,omitempty"`
	SwarmCluster                *string        `json:"swarm_cluster,omitempty"`
	UnreachableCount            *int           `json:"unreachable_count,omitempty"`
	UnreachableNotificationSent *bool          `json:"unreachable_notification_sent,omitempty"`
	User                        *string        `json:"user,omitempty"`
	Uuid                        *string        `json:"uuid,omitempty"`
	ValidationLogs              *string        `json:"validation_logs,omitempty"`
}

// ServerSetting Server Settings model
type ServerSetting struct {
	CleanupAfterPercentage     *int    `json:"cleanup_after_percentage,omitempty"`
	ConcurrentBuilds           *int    `json:"concurrent_builds,omitempty"`
	CreatedAt                  *string `json:"created_at,omitempty"`
	DynamicTimeout             *int    `json:"dynamic_timeout,omitempty"`
	ForceDisabled              *bool   `json:"force_disabled,omitempty"`
	Id                         *int    `json:"id,omitempty"`
	IsBuildServer              *bool   `json:"is_build_server,omitempty"`
	IsCloudflareTunnel         *bool   `json:"is_cloudflare_tunnel,omitempty"`
	IsJumpServer               *bool   `json:"is_jump_server,omitempty"`
	IsLogdrainAxiomEnabled     *bool   `json:"is_logdrain_axiom_enabled,omitempty"`
	IsLogdrainCustomEnabled    *bool   `json:"is_logdrain_custom_enabled,omitempty"`
	IsLogdrainHighlightEnabled *bool   `json:"is_logdrain_highlight_enabled,omitempty"`
	IsLogdrainNewrelicEnabled  *bool   `json:"is_logdrain_newrelic_enabled,omitempty"`
	IsMetricsEnabled           *bool   `json:"is_metrics_enabled,omitempty"`
	IsReachable                *bool   `json:"is_reachable,omitempty"`
	IsServerApiEnabled         *bool   `json:"is_server_api_enabled,omitempty"`
	IsSwarmManager             *bool   `json:"is_swarm_manager,omitempty"`
	IsSwarmWorker              *bool   `json:"is_swarm_worker,omitempty"`
	IsUsable                   *bool   `json:"is_usable,omitempty"`
	LogdrainAxiomApiKey        *string `json:"logdrain_axiom_api_key,omitempty"`
	LogdrainAxiomDatasetName   *string `json:"logdrain_axiom_dataset_name,omitempty"`
	LogdrainCustomConfig       *string `json:"logdrain_custom_config,omitempty"`
	LogdrainCustomConfigParser *string `json:"logdrain_custom_config_parser,omitempty"`
	LogdrainHighlightProjectId *string `json:"logdrain_highlight_project_id,omitempty"`
	LogdrainNewrelicBaseUri    *string `json:"logdrain_newrelic_base_uri,omitempty"`
	LogdrainNewrelicLicenseKey *string `json:"logdrain_newrelic_license_key,omitempty"`
	MetricsHistoryDays         *int    `json:"metrics_history_days,omitempty"`
	MetricsRefreshRateSeconds  *int    `json:"metrics_refresh_rate_seconds,omitempty"`
	MetricsToken               *string `json:"metrics_token,omitempty"`
	ServerId                   *int    `json:"server_id,omitempty"`
	UpdatedAt                  *string `json:"updated_at,omitempty"`
	WildcardDomain             *string `json:"wildcard_domain,omitempty"`
}

// Service Service model
type Service struct {
	// ConfigHash The hash of the service configuration.
	ConfigHash *string `json:"config_hash,omitempty"`

	// ConnectToDockerNetwork The flag to connect the service to the predefined Docker network.
	ConnectToDockerNetwork *bool `json:"connect_to_docker_network,omitempty"`

	// CreatedAt The date and time when the service was created.
	CreatedAt *string `json:"created_at,omitempty"`

	// DeletedAt The date and time when the service was deleted.
	DeletedAt *string `json:"deleted_at,omitempty"`

	// Description The description of the service.
	Description *string `json:"description,omitempty"`

	// DestinationId The unique identifier of the destination where the service is running.
	DestinationId *int `json:"destination_id,omitempty"`

	// DockerCompose The docker-compose.yml file that is parsed and modified by Coolify.
	DockerCompose *string `json:"docker_compose,omitempty"`

	// DockerComposeRaw The raw docker-compose.yml file of the service.
	DockerComposeRaw *string `json:"docker_compose_raw,omitempty"`

	// EnvironmentId The unique identifier of the environment where the service is attached to.
	EnvironmentId *int `json:"environment_id,omitempty"`

	// Id The unique identifier of the service. Only used for database identification.
	Id *int `json:"id,omitempty"`

	// IsContainerLabelEscapeEnabled The flag to enable the container label escape.
	IsContainerLabelEscapeEnabled *bool `json:"is_container_label_escape_enabled,omitempty"`

	// IsContainerLabelReadonlyEnabled The flag to enable the container label readonly.
	IsContainerLabelReadonlyEnabled *bool `json:"is_container_label_readonly_enabled,omitempty"`

	// Name The name of the service.
	Name *string `json:"name,omitempty"`

	// ServerId The unique identifier of the server where the service is running.
	ServerId *int `json:"server_id,omitempty"`

	// ServiceType The type of the service.
	ServiceType *string `json:"service_type,omitempty"`

	// UpdatedAt The date and time when the service was last updated.
	UpdatedAt *string `json:"updated_at,omitempty"`

	// Uuid The unique identifier of the service.
	Uuid *string `json:"uuid,omitempty"`
}

// Team Team model
type Team struct {
	// CreatedAt The date and time the team was created.
	CreatedAt *string `json:"created_at,omitempty"`

	// CustomServerLimit The custom server limit.
	CustomServerLimit *string `json:"custom_server_limit,omitempty"`

	// Description The description of the team.
	Description *string `json:"description,omitempty"`

	// DiscordEnabled Whether Discord is enabled or not.
	DiscordEnabled *bool `json:"discord_enabled,omitempty"`

	// DiscordNotificationsDatabaseBackups Whether to send database backup notifications via Discord.
	DiscordNotificationsDatabaseBackups *bool `json:"discord_notifications_database_backups,omitempty"`

	// DiscordNotificationsDeployments Whether to send deployment notifications via Discord.
	DiscordNotificationsDeployments *bool `json:"discord_notifications_deployments,omitempty"`

	// DiscordNotificationsScheduledTasks Whether to send scheduled task notifications via Discord.
	DiscordNotificationsScheduledTasks *bool `json:"discord_notifications_scheduled_tasks,omitempty"`

	// DiscordNotificationsStatusChanges Whether to send status change notifications via Discord.
	DiscordNotificationsStatusChanges *bool `json:"discord_notifications_status_changes,omitempty"`

	// DiscordNotificationsTest Whether to send test notifications via Discord.
	DiscordNotificationsTest *bool `json:"discord_notifications_test,omitempty"`

	// DiscordWebhookUrl The Discord webhook URL.
	DiscordWebhookUrl *string `json:"discord_webhook_url,omitempty"`

	// Id The unique identifier of the team.
	Id *int `json:"id,omitempty"`

	// Members The members of the team.
	Members *[]User `json:"members,omitempty"`

	// Name The name of the team.
	Name *string `json:"name,omitempty"`

	// PersonalTeam Whether the team is personal or not.
	PersonalTeam *bool `json:"personal_team,omitempty"`

	// ResendApiKey The resending API key.
	ResendApiKey *string `json:"resend_api_key,omitempty"`

	// ResendEnabled Whether to enable resending or not.
	ResendEnabled *bool `json:"resend_enabled,omitempty"`

	// ShowBoarding Whether to show the boarding screen or not.
	ShowBoarding *bool `json:"show_boarding,omitempty"`

	// SmtpEnabled Whether SMTP is enabled or not.
	SmtpEnabled *bool `json:"smtp_enabled,omitempty"`

	// SmtpEncryption The SMTP encryption.
	SmtpEncryption *string `json:"smtp_encryption,omitempty"`

	// SmtpFromAddress The email address to send emails from.
	SmtpFromAddress *string `json:"smtp_from_address,omitempty"`

	// SmtpFromName The name to send emails from.
	SmtpFromName *string `json:"smtp_from_name,omitempty"`

	// SmtpHost The SMTP host.
	SmtpHost *string `json:"smtp_host,omitempty"`

	// SmtpNotificationsDatabaseBackups Whether to send database backup notifications via SMTP.
	SmtpNotificationsDatabaseBackups *bool `json:"smtp_notifications_database_backups,omitempty"`

	// SmtpNotificationsDeployments Whether to send deployment notifications via SMTP.
	SmtpNotificationsDeployments *bool `json:"smtp_notifications_deployments,omitempty"`

	// SmtpNotificationsScheduledTasks Whether to send scheduled task notifications via SMTP.
	SmtpNotificationsScheduledTasks *bool `json:"smtp_notifications_scheduled_tasks,omitempty"`

	// SmtpNotificationsStatusChanges Whether to send status change notifications via SMTP.
	SmtpNotificationsStatusChanges *bool `json:"smtp_notifications_status_changes,omitempty"`

	// SmtpNotificationsTest Whether to send test notifications via SMTP.
	SmtpNotificationsTest *bool `json:"smtp_notifications_test,omitempty"`

	// SmtpPassword The SMTP password.
	SmtpPassword *string `json:"smtp_password,omitempty"`

	// SmtpPort The SMTP port.
	SmtpPort *string `json:"smtp_port,omitempty"`

	// SmtpRecipients The email addresses to send emails to.
	SmtpRecipients *string `json:"smtp_recipients,omitempty"`

	// SmtpTimeout The SMTP timeout.
	SmtpTimeout *string `json:"smtp_timeout,omitempty"`

	// SmtpUsername The SMTP username.
	SmtpUsername *string `json:"smtp_username,omitempty"`

	// TelegramChatId The Telegram chat ID.
	TelegramChatId *string `json:"telegram_chat_id,omitempty"`

	// TelegramEnabled Whether Telegram is enabled or not.
	TelegramEnabled *bool `json:"telegram_enabled,omitempty"`

	// TelegramNotificationsDatabaseBackups Whether to send database backup notifications via Telegram.
	TelegramNotificationsDatabaseBackups *bool `json:"telegram_notifications_database_backups,omitempty"`

	// TelegramNotificationsDatabaseBackupsMessageThreadId The Telegram database backup message thread ID.
	TelegramNotificationsDatabaseBackupsMessageThreadId *string `json:"telegram_notifications_database_backups_message_thread_id,omitempty"`

	// TelegramNotificationsDeployments Whether to send deployment notifications via Telegram.
	TelegramNotificationsDeployments *bool `json:"telegram_notifications_deployments,omitempty"`

	// TelegramNotificationsDeploymentsMessageThreadId The Telegram deployment message thread ID.
	TelegramNotificationsDeploymentsMessageThreadId *string `json:"telegram_notifications_deployments_message_thread_id,omitempty"`

	// TelegramNotificationsScheduledTasks Whether to send scheduled task notifications via Telegram.
	TelegramNotificationsScheduledTasks *bool `json:"telegram_notifications_scheduled_tasks,omitempty"`

	// TelegramNotificationsScheduledTasksThreadId The Telegram scheduled task message thread ID.
	TelegramNotificationsScheduledTasksThreadId *string `json:"telegram_notifications_scheduled_tasks_thread_id,omitempty"`

	// TelegramNotificationsStatusChanges Whether to send status change notifications via Telegram.
	TelegramNotificationsStatusChanges *bool `json:"telegram_notifications_status_changes,omitempty"`

	// TelegramNotificationsStatusChangesMessageThreadId The Telegram status change message thread ID.
	TelegramNotificationsStatusChangesMessageThreadId *string `json:"telegram_notifications_status_changes_message_thread_id,omitempty"`

	// TelegramNotificationsTest Whether to send test notifications via Telegram.
	TelegramNotificationsTest *bool `json:"telegram_notifications_test,omitempty"`

	// TelegramNotificationsTestMessageThreadId The Telegram test message thread ID.
	TelegramNotificationsTestMessageThreadId *string `json:"telegram_notifications_test_message_thread_id,omitempty"`

	// TelegramToken The Telegram token.
	TelegramToken *string `json:"telegram_token,omitempty"`

	// UpdatedAt The date and time the team was last updated.
	UpdatedAt *string `json:"updated_at,omitempty"`

	// UseInstanceEmailSettings Whether to use instance email settings or not.
	UseInstanceEmailSettings *bool `json:"use_instance_email_settings,omitempty"`
}

// User User model
type User struct {
	// CreatedAt The date when the user was created.
	CreatedAt *string `json:"created_at,omitempty"`

	// Email The user email.
	Email *string `json:"email,omitempty"`

	// EmailVerifiedAt The date when the user email was verified.
	EmailVerifiedAt *string `json:"email_verified_at,omitempty"`

	// ForcePasswordReset The flag to force the user to reset the password.
	ForcePasswordReset *bool `json:"force_password_reset,omitempty"`

	// Id The user identifier in the database.
	Id *int `json:"id,omitempty"`

	// MarketingEmails The flag to receive marketing emails.
	MarketingEmails *bool `json:"marketing_emails,omitempty"`

	// Name The user name.
	Name *string `json:"name,omitempty"`

	// TwoFactorConfirmedAt The date when the user two factor was confirmed.
	TwoFactorConfirmedAt *string `json:"two_factor_confirmed_at,omitempty"`

	// UpdatedAt The date when the user was updated.
	UpdatedAt *string `json:"updated_at,omitempty"`
}

// N400 defines model for 400.
type N400 struct {
	Message *string `json:"message,omitempty"`
}

// N401 defines model for 401.
type N401 struct {
	Message *string `json:"message,omitempty"`
}

// N404 defines model for 404.
type N404 struct {
	Message *string `json:"message,omitempty"`
}

// N3731add8226c2d664455978cac46c242JSONBody defines parameters for N3731add8226c2d664455978cac46c242.
type N3731add8226c2d664455978cac46c242JSONBody struct {
	// Description The application description.
	Description *string `json:"description,omitempty"`

	// DestinationUuid The destination UUID if the server has more than one destinations.
	DestinationUuid *string `json:"destination_uuid,omitempty"`

	// DockerComposeRaw The Docker Compose raw content.
	DockerComposeRaw string `json:"docker_compose_raw"`

	// EnvironmentName The environment name.
	EnvironmentName string `json:"environment_name"`

	// InstantDeploy The flag to indicate if the application should be deployed instantly.
	InstantDeploy *bool `json:"instant_deploy,omitempty"`

	// Name The application name.
	Name *string `json:"name,omitempty"`

	// ProjectUuid The project UUID.
	ProjectUuid string `json:"project_uuid"`

	// ServerUuid The server UUID.
	ServerUuid string `json:"server_uuid"`
}

// N2b433ad6f5d259eb7f4f3b5af9913708JSONBody defines parameters for N2b433ad6f5d259eb7f4f3b5af9913708.
type N2b433ad6f5d259eb7f4f3b5af9913708JSONBody struct {
	// BaseDirectory The base directory for all commands.
	BaseDirectory *string `json:"base_directory,omitempty"`

	// BuildPack The build pack type.
	BuildPack *N2b433ad6f5d259eb7f4f3b5af9913708JSONBodyBuildPack `json:"build_pack,omitempty"`

	// CustomDockerRunOptions Custom docker run options.
	CustomDockerRunOptions *string `json:"custom_docker_run_options,omitempty"`

	// CustomLabels Custom labels.
	CustomLabels *string `json:"custom_labels,omitempty"`

	// Description The application description.
	Description *string `json:"description,omitempty"`

	// DestinationUuid The destination UUID.
	DestinationUuid *string `json:"destination_uuid,omitempty"`

	// DockerRegistryImageName The docker registry image name.
	DockerRegistryImageName *string `json:"docker_registry_image_name,omitempty"`

	// DockerRegistryImageTag The docker registry image tag.
	DockerRegistryImageTag *string `json:"docker_registry_image_tag,omitempty"`

	// Dockerfile The Dockerfile content.
	Dockerfile string `json:"dockerfile"`

	// Domains The application domains.
	Domains *string `json:"domains,omitempty"`

	// EnvironmentName The environment name.
	EnvironmentName string `json:"environment_name"`

	// HealthCheckEnabled Health check enabled.
	HealthCheckEnabled *bool `json:"health_check_enabled,omitempty"`

	// HealthCheckHost Health check host.
	HealthCheckHost nullable.Nullable[string] `json:"health_check_host,omitempty"`

	// HealthCheckInterval Health check interval in seconds.
	HealthCheckInterval *int `json:"health_check_interval,omitempty"`

	// HealthCheckMethod Health check method.
	HealthCheckMethod *string `json:"health_check_method,omitempty"`

	// HealthCheckPath Health check path.
	HealthCheckPath *string `json:"health_check_path,omitempty"`

	// HealthCheckPort Health check port.
	HealthCheckPort nullable.Nullable[string] `json:"health_check_port,omitempty"`

	// HealthCheckResponseText Health check response text.
	HealthCheckResponseText nullable.Nullable[string] `json:"health_check_response_text,omitempty"`

	// HealthCheckRetries Health check retries count.
	HealthCheckRetries *int `json:"health_check_retries,omitempty"`

	// HealthCheckReturnCode Health check return code.
	HealthCheckReturnCode *int `json:"health_check_return_code,omitempty"`

	// HealthCheckScheme Health check scheme.
	HealthCheckScheme *string `json:"health_check_scheme,omitempty"`

	// HealthCheckStartPeriod Health check start period in seconds.
	HealthCheckStartPeriod *int `json:"health_check_start_period,omitempty"`

	// HealthCheckTimeout Health check timeout in seconds.
	HealthCheckTimeout *int `json:"health_check_timeout,omitempty"`

	// InstantDeploy The flag to indicate if the application should be deployed instantly.
	InstantDeploy *bool `json:"instant_deploy,omitempty"`

	// LimitsCpuShares CPU shares.
	LimitsCpuShares *int `json:"limits_cpu_shares,omitempty"`

	// LimitsCpus CPU limit.
	LimitsCpus *string `json:"limits_cpus,omitempty"`

	// LimitsCpuset CPU set.
	LimitsCpuset nullable.Nullable[string] `json:"limits_cpuset,omitempty"`

	// LimitsMemory Memory limit.
	LimitsMemory *string `json:"limits_memory,omitempty"`

	// LimitsMemoryReservation Memory reservation.
	LimitsMemoryReservation *string `json:"limits_memory_reservation,omitempty"`

	// LimitsMemorySwap Memory swap limit.
	LimitsMemorySwap *string `json:"limits_memory_swap,omitempty"`

	// LimitsMemorySwappiness Memory swappiness.
	LimitsMemorySwappiness *int `json:"limits_memory_swappiness,omitempty"`

	// ManualWebhookSecretBitbucket Manual webhook secret for Bitbucket.
	ManualWebhookSecretBitbucket *string `json:"manual_webhook_secret_bitbucket,omitempty"`

	// ManualWebhookSecretGitea Manual webhook secret for Gitea.
	ManualWebhookSecretGitea *string `json:"manual_webhook_secret_gitea,omitempty"`

	// ManualWebhookSecretGithub Manual webhook secret for Github.
	ManualWebhookSecretGithub *string `json:"manual_webhook_secret_github,omitempty"`

	// ManualWebhookSecretGitlab Manual webhook secret for Gitlab.
	ManualWebhookSecretGitlab *string `json:"manual_webhook_secret_gitlab,omitempty"`

	// Name The application name.
	Name *string `json:"name,omitempty"`

	// PortsExposes The ports to expose.
	PortsExposes *string `json:"ports_exposes,omitempty"`

	// PortsMappings The ports mappings.
	PortsMappings *string `json:"ports_mappings,omitempty"`

	// PostDeploymentCommand Post deployment command.
	PostDeploymentCommand *string `json:"post_deployment_command,omitempty"`

	// PostDeploymentCommandContainer Post deployment command container.
	PostDeploymentCommandContainer *string `json:"post_deployment_command_container,omitempty"`

	// PreDeploymentCommand Pre deployment command.
	PreDeploymentCommand *string `json:"pre_deployment_command,omitempty"`

	// PreDeploymentCommandContainer Pre deployment command container.
	PreDeploymentCommandContainer *string `json:"pre_deployment_command_container,omitempty"`

	// ProjectUuid The project UUID.
	ProjectUuid string `json:"project_uuid"`

	// Redirect How to set redirect with Traefik / Caddy. www<->non-www.
	Redirect nullable.Nullable[N2b433ad6f5d259eb7f4f3b5af9913708JSONBodyRedirect] `json:"redirect,omitempty"`

	// ServerUuid The server UUID.
	ServerUuid string `json:"server_uuid"`
}

// N2b433ad6f5d259eb7f4f3b5af9913708JSONBodyBuildPack defines parameters for N2b433ad6f5d259eb7f4f3b5af9913708.
type N2b433ad6f5d259eb7f4f3b5af9913708JSONBodyBuildPack string

// N2b433ad6f5d259eb7f4f3b5af9913708JSONBodyRedirect defines parameters for N2b433ad6f5d259eb7f4f3b5af9913708.
type N2b433ad6f5d259eb7f4f3b5af9913708JSONBodyRedirect string

// E9a2d6dd9404acf880dc3053f09477fcJSONBody defines parameters for E9a2d6dd9404acf880dc3053f09477fc.
type E9a2d6dd9404acf880dc3053f09477fcJSONBody struct {
	// CustomDockerRunOptions Custom docker run options.
	CustomDockerRunOptions *string `json:"custom_docker_run_options,omitempty"`

	// CustomLabels Custom labels.
	CustomLabels *string `json:"custom_labels,omitempty"`

	// Description The application description.
	Description *string `json:"description,omitempty"`

	// DestinationUuid The destination UUID.
	DestinationUuid *string `json:"destination_uuid,omitempty"`

	// DockerRegistryImageName The docker registry image name.
	DockerRegistryImageName string `json:"docker_registry_image_name"`

	// DockerRegistryImageTag The docker registry image tag.
	DockerRegistryImageTag *string `json:"docker_registry_image_tag,omitempty"`

	// Domains The application domains.
	Domains *string `json:"domains,omitempty"`

	// EnvironmentName The environment name.
	EnvironmentName string `json:"environment_name"`

	// HealthCheckEnabled Health check enabled.
	HealthCheckEnabled *bool `json:"health_check_enabled,omitempty"`

	// HealthCheckHost Health check host.
	HealthCheckHost nullable.Nullable[string] `json:"health_check_host,omitempty"`

	// HealthCheckInterval Health check interval in seconds.
	HealthCheckInterval *int `json:"health_check_interval,omitempty"`

	// HealthCheckMethod Health check method.
	HealthCheckMethod *string `json:"health_check_method,omitempty"`

	// HealthCheckPath Health check path.
	HealthCheckPath *string `json:"health_check_path,omitempty"`

	// HealthCheckPort Health check port.
	HealthCheckPort nullable.Nullable[string] `json:"health_check_port,omitempty"`

	// HealthCheckResponseText Health check response text.
	HealthCheckResponseText nullable.Nullable[string] `json:"health_check_response_text,omitempty"`

	// HealthCheckRetries Health check retries count.
	HealthCheckRetries *int `json:"health_check_retries,omitempty"`

	// HealthCheckReturnCode Health check return code.
	HealthCheckReturnCode *int `json:"health_check_return_code,omitempty"`

	// HealthCheckScheme Health check scheme.
	HealthCheckScheme *string `json:"health_check_scheme,omitempty"`

	// HealthCheckStartPeriod Health check start period in seconds.
	HealthCheckStartPeriod *int `json:"health_check_start_period,omitempty"`

	// HealthCheckTimeout Health check timeout in seconds.
	HealthCheckTimeout *int `json:"health_check_timeout,omitempty"`

	// InstantDeploy The flag to indicate if the application should be deployed instantly.
	InstantDeploy *bool `json:"instant_deploy,omitempty"`

	// LimitsCpuShares CPU shares.
	LimitsCpuShares *int `json:"limits_cpu_shares,omitempty"`

	// LimitsCpus CPU limit.
	LimitsCpus *string `json:"limits_cpus,omitempty"`

	// LimitsCpuset CPU set.
	LimitsCpuset nullable.Nullable[string] `json:"limits_cpuset,omitempty"`

	// LimitsMemory Memory limit.
	LimitsMemory *string `json:"limits_memory,omitempty"`

	// LimitsMemoryReservation Memory reservation.
	LimitsMemoryReservation *string `json:"limits_memory_reservation,omitempty"`

	// LimitsMemorySwap Memory swap limit.
	LimitsMemorySwap *string `json:"limits_memory_swap,omitempty"`

	// LimitsMemorySwappiness Memory swappiness.
	LimitsMemorySwappiness *int `json:"limits_memory_swappiness,omitempty"`

	// ManualWebhookSecretBitbucket Manual webhook secret for Bitbucket.
	ManualWebhookSecretBitbucket *string `json:"manual_webhook_secret_bitbucket,omitempty"`

	// ManualWebhookSecretGitea Manual webhook secret for Gitea.
	ManualWebhookSecretGitea *string `json:"manual_webhook_secret_gitea,omitempty"`

	// ManualWebhookSecretGithub Manual webhook secret for Github.
	ManualWebhookSecretGithub *string `json:"manual_webhook_secret_github,omitempty"`

	// ManualWebhookSecretGitlab Manual webhook secret for Gitlab.
	ManualWebhookSecretGitlab *string `json:"manual_webhook_secret_gitlab,omitempty"`

	// Name The application name.
	Name *string `json:"name,omitempty"`

	// PortsExposes The ports to expose.
	PortsExposes string `json:"ports_exposes"`

	// PortsMappings The ports mappings.
	PortsMappings *string `json:"ports_mappings,omitempty"`

	// PostDeploymentCommand Post deployment command.
	PostDeploymentCommand *string `json:"post_deployment_command,omitempty"`

	// PostDeploymentCommandContainer Post deployment command container.
	PostDeploymentCommandContainer *string `json:"post_deployment_command_container,omitempty"`

	// PreDeploymentCommand Pre deployment command.
	PreDeploymentCommand *string `json:"pre_deployment_command,omitempty"`

	// PreDeploymentCommandContainer Pre deployment command container.
	PreDeploymentCommandContainer *string `json:"pre_deployment_command_container,omitempty"`

	// ProjectUuid The project UUID.
	ProjectUuid string `json:"project_uuid"`

	// Redirect How to set redirect with Traefik / Caddy. www<->non-www.
	Redirect nullable.Nullable[E9a2d6dd9404acf880dc3053f09477fcJSONBodyRedirect] `json:"redirect,omitempty"`

	// ServerUuid The server UUID.
	ServerUuid string `json:"server_uuid"`
}

// E9a2d6dd9404acf880dc3053f09477fcJSONBodyRedirect defines parameters for E9a2d6dd9404acf880dc3053f09477fc.
type E9a2d6dd9404acf880dc3053f09477fcJSONBodyRedirect string

// E3eaa989ffb05366247a00cdfd551efaJSONBody defines parameters for E3eaa989ffb05366247a00cdfd551efa.
type E3eaa989ffb05366247a00cdfd551efaJSONBody struct {
	// BaseDirectory The base directory for all commands.
	BaseDirectory *string `json:"base_directory,omitempty"`

	// BuildCommand The build command.
	BuildCommand *string `json:"build_command,omitempty"`

	// BuildPack The build pack type.
	BuildPack E3eaa989ffb05366247a00cdfd551efaJSONBodyBuildPack `json:"build_pack"`

	// CustomDockerRunOptions Custom docker run options.
	CustomDockerRunOptions *string `json:"custom_docker_run_options,omitempty"`

	// CustomLabels Custom labels.
	CustomLabels *string `json:"custom_labels,omitempty"`

	// Description The application description.
	Description *string `json:"description,omitempty"`

	// DestinationUuid The destination UUID.
	DestinationUuid *string `json:"destination_uuid,omitempty"`

	// DockerComposeCustomBuildCommand The Docker Compose custom build command.
	DockerComposeCustomBuildCommand *string `json:"docker_compose_custom_build_command,omitempty"`

	// DockerComposeCustomStartCommand The Docker Compose custom start command.
	DockerComposeCustomStartCommand *string `json:"docker_compose_custom_start_command,omitempty"`

	// DockerComposeDomains The Docker Compose domains.
	DockerComposeDomains *[]interface{} `json:"docker_compose_domains,omitempty"`

	// DockerComposeLocation The Docker Compose location.
	DockerComposeLocation *string `json:"docker_compose_location,omitempty"`

	// DockerComposeRaw The Docker Compose raw content.
	DockerComposeRaw *string `json:"docker_compose_raw,omitempty"`

	// DockerRegistryImageName The docker registry image name.
	DockerRegistryImageName *string `json:"docker_registry_image_name,omitempty"`

	// DockerRegistryImageTag The docker registry image tag.
	DockerRegistryImageTag *string `json:"docker_registry_image_tag,omitempty"`

	// Dockerfile The Dockerfile content.
	Dockerfile *string `json:"dockerfile,omitempty"`

	// Domains The application domains.
	Domains *string `json:"domains,omitempty"`

	// EnvironmentName The environment name.
	EnvironmentName string `json:"environment_name"`

	// GitBranch The git branch.
	GitBranch string `json:"git_branch"`

	// GitCommitSha The git commit SHA.
	GitCommitSha *string `json:"git_commit_sha,omitempty"`

	// GitRepository The git repository URL.
	GitRepository string `json:"git_repository"`

	// HealthCheckEnabled Health check enabled.
	HealthCheckEnabled *bool `json:"health_check_enabled,omitempty"`

	// HealthCheckHost Health check host.
	HealthCheckHost nullable.Nullable[string] `json:"health_check_host,omitempty"`

	// HealthCheckInterval Health check interval in seconds.
	HealthCheckInterval *int `json:"health_check_interval,omitempty"`

	// HealthCheckMethod Health check method.
	HealthCheckMethod *string `json:"health_check_method,omitempty"`

	// HealthCheckPath Health check path.
	HealthCheckPath *string `json:"health_check_path,omitempty"`

	// HealthCheckPort Health check port.
	HealthCheckPort nullable.Nullable[string] `json:"health_check_port,omitempty"`

	// HealthCheckResponseText Health check response text.
	HealthCheckResponseText nullable.Nullable[string] `json:"health_check_response_text,omitempty"`

	// HealthCheckRetries Health check retries count.
	HealthCheckRetries *int `json:"health_check_retries,omitempty"`

	// HealthCheckReturnCode Health check return code.
	HealthCheckReturnCode *int `json:"health_check_return_code,omitempty"`

	// HealthCheckScheme Health check scheme.
	HealthCheckScheme *string `json:"health_check_scheme,omitempty"`

	// HealthCheckStartPeriod Health check start period in seconds.
	HealthCheckStartPeriod *int `json:"health_check_start_period,omitempty"`

	// HealthCheckTimeout Health check timeout in seconds.
	HealthCheckTimeout *int `json:"health_check_timeout,omitempty"`

	// InstallCommand The install command.
	InstallCommand *string `json:"install_command,omitempty"`

	// InstantDeploy The flag to indicate if the application should be deployed instantly.
	InstantDeploy *bool `json:"instant_deploy,omitempty"`

	// IsStatic The flag to indicate if the application is static.
	IsStatic *bool `json:"is_static,omitempty"`

	// LimitsCpuShares CPU shares.
	LimitsCpuShares *int `json:"limits_cpu_shares,omitempty"`

	// LimitsCpus CPU limit.
	LimitsCpus *string `json:"limits_cpus,omitempty"`

	// LimitsCpuset CPU set.
	LimitsCpuset nullable.Nullable[string] `json:"limits_cpuset,omitempty"`

	// LimitsMemory Memory limit.
	LimitsMemory *string `json:"limits_memory,omitempty"`

	// LimitsMemoryReservation Memory reservation.
	LimitsMemoryReservation *string `json:"limits_memory_reservation,omitempty"`

	// LimitsMemorySwap Memory swap limit.
	LimitsMemorySwap *string `json:"limits_memory_swap,omitempty"`

	// LimitsMemorySwappiness Memory swappiness.
	LimitsMemorySwappiness *int `json:"limits_memory_swappiness,omitempty"`

	// ManualWebhookSecretBitbucket Manual webhook secret for Bitbucket.
	ManualWebhookSecretBitbucket *string `json:"manual_webhook_secret_bitbucket,omitempty"`

	// ManualWebhookSecretGitea Manual webhook secret for Gitea.
	ManualWebhookSecretGitea *string `json:"manual_webhook_secret_gitea,omitempty"`

	// ManualWebhookSecretGithub Manual webhook secret for Github.
	ManualWebhookSecretGithub *string `json:"manual_webhook_secret_github,omitempty"`

	// ManualWebhookSecretGitlab Manual webhook secret for Gitlab.
	ManualWebhookSecretGitlab *string `json:"manual_webhook_secret_gitlab,omitempty"`

	// Name The application name.
	Name *string `json:"name,omitempty"`

	// PortsExposes The ports to expose.
	PortsExposes string `json:"ports_exposes"`

	// PortsMappings The ports mappings.
	PortsMappings *string `json:"ports_mappings,omitempty"`

	// PostDeploymentCommand Post deployment command.
	PostDeploymentCommand *string `json:"post_deployment_command,omitempty"`

	// PostDeploymentCommandContainer Post deployment command container.
	PostDeploymentCommandContainer *string `json:"post_deployment_command_container,omitempty"`

	// PreDeploymentCommand Pre deployment command.
	PreDeploymentCommand *string `json:"pre_deployment_command,omitempty"`

	// PreDeploymentCommandContainer Pre deployment command container.
	PreDeploymentCommandContainer *string `json:"pre_deployment_command_container,omitempty"`

	// PrivateKeyUuid The private key UUID.
	PrivateKeyUuid string `json:"private_key_uuid"`

	// ProjectUuid The project UUID.
	ProjectUuid string `json:"project_uuid"`

	// PublishDirectory The publish directory.
	PublishDirectory *string `json:"publish_directory,omitempty"`

	// Redirect How to set redirect with Traefik / Caddy. www<->non-www.
	Redirect nullable.Nullable[E3eaa989ffb05366247a00cdfd551efaJSONBodyRedirect] `json:"redirect,omitempty"`

	// ServerUuid The server UUID.
	ServerUuid string `json:"server_uuid"`

	// StartCommand The start command.
	StartCommand *string `json:"start_command,omitempty"`

	// WatchPaths The watch paths.
	WatchPaths *string `json:"watch_paths,omitempty"`
}

// E3eaa989ffb05366247a00cdfd551efaJSONBodyBuildPack defines parameters for E3eaa989ffb05366247a00cdfd551efa.
type E3eaa989ffb05366247a00cdfd551efaJSONBodyBuildPack string

// E3eaa989ffb05366247a00cdfd551efaJSONBodyRedirect defines parameters for E3eaa989ffb05366247a00cdfd551efa.
type E3eaa989ffb05366247a00cdfd551efaJSONBodyRedirect string

// N4d46c84bda4f1a411f6dda15fce4061fJSONBody defines parameters for N4d46c84bda4f1a411f6dda15fce4061f.
type N4d46c84bda4f1a411f6dda15fce4061fJSONBody struct {
	// BaseDirectory The base directory for all commands.
	BaseDirectory *string `json:"base_directory,omitempty"`

	// BuildCommand The build command.
	BuildCommand *string `json:"build_command,omitempty"`

	// BuildPack The build pack type.
	BuildPack N4d46c84bda4f1a411f6dda15fce4061fJSONBodyBuildPack `json:"build_pack"`

	// CustomDockerRunOptions Custom docker run options.
	CustomDockerRunOptions *string `json:"custom_docker_run_options,omitempty"`

	// CustomLabels Custom labels.
	CustomLabels *string `json:"custom_labels,omitempty"`

	// Description The application description.
	Description *string `json:"description,omitempty"`

	// DestinationUuid The destination UUID.
	DestinationUuid *string `json:"destination_uuid,omitempty"`

	// DockerComposeCustomBuildCommand The Docker Compose custom build command.
	DockerComposeCustomBuildCommand *string `json:"docker_compose_custom_build_command,omitempty"`

	// DockerComposeCustomStartCommand The Docker Compose custom start command.
	DockerComposeCustomStartCommand *string `json:"docker_compose_custom_start_command,omitempty"`

	// DockerComposeDomains The Docker Compose domains.
	DockerComposeDomains *[]interface{} `json:"docker_compose_domains,omitempty"`

	// DockerComposeLocation The Docker Compose location.
	DockerComposeLocation *string `json:"docker_compose_location,omitempty"`

	// DockerComposeRaw The Docker Compose raw content.
	DockerComposeRaw *string `json:"docker_compose_raw,omitempty"`

	// DockerRegistryImageName The docker registry image name.
	DockerRegistryImageName *string `json:"docker_registry_image_name,omitempty"`

	// DockerRegistryImageTag The docker registry image tag.
	DockerRegistryImageTag *string `json:"docker_registry_image_tag,omitempty"`

	// Dockerfile The Dockerfile content.
	Dockerfile *string `json:"dockerfile,omitempty"`

	// Domains The application domains.
	Domains *string `json:"domains,omitempty"`

	// EnvironmentName The environment name.
	EnvironmentName string `json:"environment_name"`

	// GitBranch The git branch.
	GitBranch string `json:"git_branch"`

	// GitCommitSha The git commit SHA.
	GitCommitSha *string `json:"git_commit_sha,omitempty"`

	// GitRepository The git repository URL.
	GitRepository string `json:"git_repository"`

	// GithubAppUuid The Github App UUID.
	GithubAppUuid string `json:"github_app_uuid"`

	// HealthCheckEnabled Health check enabled.
	HealthCheckEnabled *bool `json:"health_check_enabled,omitempty"`

	// HealthCheckHost Health check host.
	HealthCheckHost nullable.Nullable[string] `json:"health_check_host,omitempty"`

	// HealthCheckInterval Health check interval in seconds.
	HealthCheckInterval *int `json:"health_check_interval,omitempty"`

	// HealthCheckMethod Health check method.
	HealthCheckMethod *string `json:"health_check_method,omitempty"`

	// HealthCheckPath Health check path.
	HealthCheckPath *string `json:"health_check_path,omitempty"`

	// HealthCheckPort Health check port.
	HealthCheckPort nullable.Nullable[string] `json:"health_check_port,omitempty"`

	// HealthCheckResponseText Health check response text.
	HealthCheckResponseText nullable.Nullable[string] `json:"health_check_response_text,omitempty"`

	// HealthCheckRetries Health check retries count.
	HealthCheckRetries *int `json:"health_check_retries,omitempty"`

	// HealthCheckReturnCode Health check return code.
	HealthCheckReturnCode *int `json:"health_check_return_code,omitempty"`

	// HealthCheckScheme Health check scheme.
	HealthCheckScheme *string `json:"health_check_scheme,omitempty"`

	// HealthCheckStartPeriod Health check start period in seconds.
	HealthCheckStartPeriod *int `json:"health_check_start_period,omitempty"`

	// HealthCheckTimeout Health check timeout in seconds.
	HealthCheckTimeout *int `json:"health_check_timeout,omitempty"`

	// InstallCommand The install command.
	InstallCommand *string `json:"install_command,omitempty"`

	// InstantDeploy The flag to indicate if the application should be deployed instantly.
	InstantDeploy *bool `json:"instant_deploy,omitempty"`

	// IsStatic The flag to indicate if the application is static.
	IsStatic *bool `json:"is_static,omitempty"`

	// LimitsCpuShares CPU shares.
	LimitsCpuShares *int `json:"limits_cpu_shares,omitempty"`

	// LimitsCpus CPU limit.
	LimitsCpus *string `json:"limits_cpus,omitempty"`

	// LimitsCpuset CPU set.
	LimitsCpuset nullable.Nullable[string] `json:"limits_cpuset,omitempty"`

	// LimitsMemory Memory limit.
	LimitsMemory *string `json:"limits_memory,omitempty"`

	// LimitsMemoryReservation Memory reservation.
	LimitsMemoryReservation *string `json:"limits_memory_reservation,omitempty"`

	// LimitsMemorySwap Memory swap limit.
	LimitsMemorySwap *string `json:"limits_memory_swap,omitempty"`

	// LimitsMemorySwappiness Memory swappiness.
	LimitsMemorySwappiness *int `json:"limits_memory_swappiness,omitempty"`

	// ManualWebhookSecretBitbucket Manual webhook secret for Bitbucket.
	ManualWebhookSecretBitbucket *string `json:"manual_webhook_secret_bitbucket,omitempty"`

	// ManualWebhookSecretGitea Manual webhook secret for Gitea.
	ManualWebhookSecretGitea *string `json:"manual_webhook_secret_gitea,omitempty"`

	// ManualWebhookSecretGithub Manual webhook secret for Github.
	ManualWebhookSecretGithub *string `json:"manual_webhook_secret_github,omitempty"`

	// ManualWebhookSecretGitlab Manual webhook secret for Gitlab.
	ManualWebhookSecretGitlab *string `json:"manual_webhook_secret_gitlab,omitempty"`

	// Name The application name.
	Name *string `json:"name,omitempty"`

	// PortsExposes The ports to expose.
	PortsExposes string `json:"ports_exposes"`

	// PortsMappings The ports mappings.
	PortsMappings *string `json:"ports_mappings,omitempty"`

	// PostDeploymentCommand Post deployment command.
	PostDeploymentCommand *string `json:"post_deployment_command,omitempty"`

	// PostDeploymentCommandContainer Post deployment command container.
	PostDeploymentCommandContainer *string `json:"post_deployment_command_container,omitempty"`

	// PreDeploymentCommand Pre deployment command.
	PreDeploymentCommand *string `json:"pre_deployment_command,omitempty"`

	// PreDeploymentCommandContainer Pre deployment command container.
	PreDeploymentCommandContainer *string `json:"pre_deployment_command_container,omitempty"`

	// ProjectUuid The project UUID.
	ProjectUuid string `json:"project_uuid"`

	// PublishDirectory The publish directory.
	PublishDirectory *string `json:"publish_directory,omitempty"`

	// Redirect How to set redirect with Traefik / Caddy. www<->non-www.
	Redirect nullable.Nullable[N4d46c84bda4f1a411f6dda15fce4061fJSONBodyRedirect] `json:"redirect,omitempty"`

	// ServerUuid The server UUID.
	ServerUuid string `json:"server_uuid"`

	// StartCommand The start command.
	StartCommand *string `json:"start_command,omitempty"`

	// WatchPaths The watch paths.
	WatchPaths *string `json:"watch_paths,omitempty"`
}

// N4d46c84bda4f1a411f6dda15fce4061fJSONBodyBuildPack defines parameters for N4d46c84bda4f1a411f6dda15fce4061f.
type N4d46c84bda4f1a411f6dda15fce4061fJSONBodyBuildPack string

// N4d46c84bda4f1a411f6dda15fce4061fJSONBodyRedirect defines parameters for N4d46c84bda4f1a411f6dda15fce4061f.
type N4d46c84bda4f1a411f6dda15fce4061fJSONBodyRedirect string

// Cb56324ad19693469b4461d3f6065a5bJSONBody defines parameters for Cb56324ad19693469b4461d3f6065a5b.
type Cb56324ad19693469b4461d3f6065a5bJSONBody struct {
	// BaseDirectory The base directory for all commands.
	BaseDirectory *string `json:"base_directory,omitempty"`

	// BuildCommand The build command.
	BuildCommand *string `json:"build_command,omitempty"`

	// BuildPack The build pack type.
	BuildPack Cb56324ad19693469b4461d3f6065a5bJSONBodyBuildPack `json:"build_pack"`

	// CustomDockerRunOptions Custom docker run options.
	CustomDockerRunOptions *string `json:"custom_docker_run_options,omitempty"`

	// CustomLabels Custom labels.
	CustomLabels *string `json:"custom_labels,omitempty"`

	// Description The application description.
	Description *string `json:"description,omitempty"`

	// DestinationUuid The destination UUID.
	DestinationUuid *string `json:"destination_uuid,omitempty"`

	// DockerComposeCustomBuildCommand The Docker Compose custom build command.
	DockerComposeCustomBuildCommand *string `json:"docker_compose_custom_build_command,omitempty"`

	// DockerComposeCustomStartCommand The Docker Compose custom start command.
	DockerComposeCustomStartCommand *string `json:"docker_compose_custom_start_command,omitempty"`

	// DockerComposeDomains The Docker Compose domains.
	DockerComposeDomains *[]interface{} `json:"docker_compose_domains,omitempty"`

	// DockerComposeLocation The Docker Compose location.
	DockerComposeLocation *string `json:"docker_compose_location,omitempty"`

	// DockerComposeRaw The Docker Compose raw content.
	DockerComposeRaw *string `json:"docker_compose_raw,omitempty"`

	// DockerRegistryImageName The docker registry image name.
	DockerRegistryImageName *string `json:"docker_registry_image_name,omitempty"`

	// DockerRegistryImageTag The docker registry image tag.
	DockerRegistryImageTag *string `json:"docker_registry_image_tag,omitempty"`

	// Dockerfile The Dockerfile content.
	Dockerfile *string `json:"dockerfile,omitempty"`

	// Domains The application domains.
	Domains *string `json:"domains,omitempty"`

	// EnvironmentName The environment name.
	EnvironmentName string `json:"environment_name"`

	// GitBranch The git branch.
	GitBranch string `json:"git_branch"`

	// GitCommitSha The git commit SHA.
	GitCommitSha *string `json:"git_commit_sha,omitempty"`

	// GitRepository The git repository URL.
	GitRepository string `json:"git_repository"`

	// HealthCheckEnabled Health check enabled.
	HealthCheckEnabled *bool `json:"health_check_enabled,omitempty"`

	// HealthCheckHost Health check host.
	HealthCheckHost nullable.Nullable[string] `json:"health_check_host,omitempty"`

	// HealthCheckInterval Health check interval in seconds.
	HealthCheckInterval *int `json:"health_check_interval,omitempty"`

	// HealthCheckMethod Health check method.
	HealthCheckMethod *string `json:"health_check_method,omitempty"`

	// HealthCheckPath Health check path.
	HealthCheckPath *string `json:"health_check_path,omitempty"`

	// HealthCheckPort Health check port.
	HealthCheckPort nullable.Nullable[string] `json:"health_check_port,omitempty"`

	// HealthCheckResponseText Health check response text.
	HealthCheckResponseText nullable.Nullable[string] `json:"health_check_response_text,omitempty"`

	// HealthCheckRetries Health check retries count.
	HealthCheckRetries *int `json:"health_check_retries,omitempty"`

	// HealthCheckReturnCode Health check return code.
	HealthCheckReturnCode *int `json:"health_check_return_code,omitempty"`

	// HealthCheckScheme Health check scheme.
	HealthCheckScheme *string `json:"health_check_scheme,omitempty"`

	// HealthCheckStartPeriod Health check start period in seconds.
	HealthCheckStartPeriod *int `json:"health_check_start_period,omitempty"`

	// HealthCheckTimeout Health check timeout in seconds.
	HealthCheckTimeout *int `json:"health_check_timeout,omitempty"`

	// InstallCommand The install command.
	InstallCommand *string `json:"install_command,omitempty"`

	// InstantDeploy The flag to indicate if the application should be deployed instantly.
	InstantDeploy *bool `json:"instant_deploy,omitempty"`

	// IsStatic The flag to indicate if the application is static.
	IsStatic *bool `json:"is_static,omitempty"`

	// LimitsCpuShares CPU shares.
	LimitsCpuShares *int `json:"limits_cpu_shares,omitempty"`

	// LimitsCpus CPU limit.
	LimitsCpus *string `json:"limits_cpus,omitempty"`

	// LimitsCpuset CPU set.
	LimitsCpuset nullable.Nullable[string] `json:"limits_cpuset,omitempty"`

	// LimitsMemory Memory limit.
	LimitsMemory *string `json:"limits_memory,omitempty"`

	// LimitsMemoryReservation Memory reservation.
	LimitsMemoryReservation *string `json:"limits_memory_reservation,omitempty"`

	// LimitsMemorySwap Memory swap limit.
	LimitsMemorySwap *string `json:"limits_memory_swap,omitempty"`

	// LimitsMemorySwappiness Memory swappiness.
	LimitsMemorySwappiness *int `json:"limits_memory_swappiness,omitempty"`

	// ManualWebhookSecretBitbucket Manual webhook secret for Bitbucket.
	ManualWebhookSecretBitbucket *string `json:"manual_webhook_secret_bitbucket,omitempty"`

	// ManualWebhookSecretGitea Manual webhook secret for Gitea.
	ManualWebhookSecretGitea *string `json:"manual_webhook_secret_gitea,omitempty"`

	// ManualWebhookSecretGithub Manual webhook secret for Github.
	ManualWebhookSecretGithub *string `json:"manual_webhook_secret_github,omitempty"`

	// ManualWebhookSecretGitlab Manual webhook secret for Gitlab.
	ManualWebhookSecretGitlab *string `json:"manual_webhook_secret_gitlab,omitempty"`

	// Name The application name.
	Name *string `json:"name,omitempty"`

	// PortsExposes The ports to expose.
	PortsExposes string `json:"ports_exposes"`

	// PortsMappings The ports mappings.
	PortsMappings *string `json:"ports_mappings,omitempty"`

	// PostDeploymentCommand Post deployment command.
	PostDeploymentCommand *string `json:"post_deployment_command,omitempty"`

	// PostDeploymentCommandContainer Post deployment command container.
	PostDeploymentCommandContainer *string `json:"post_deployment_command_container,omitempty"`

	// PreDeploymentCommand Pre deployment command.
	PreDeploymentCommand *string `json:"pre_deployment_command,omitempty"`

	// PreDeploymentCommandContainer Pre deployment command container.
	PreDeploymentCommandContainer *string `json:"pre_deployment_command_container,omitempty"`

	// ProjectUuid The project UUID.
	ProjectUuid string `json:"project_uuid"`

	// PublishDirectory The publish directory.
	PublishDirectory *string `json:"publish_directory,omitempty"`

	// Redirect How to set redirect with Traefik / Caddy. www<->non-www.
	Redirect nullable.Nullable[Cb56324ad19693469b4461d3f6065a5bJSONBodyRedirect] `json:"redirect,omitempty"`

	// ServerUuid The server UUID.
	ServerUuid string `json:"server_uuid"`

	// StartCommand The start command.
	StartCommand *string `json:"start_command,omitempty"`

	// WatchPaths The watch paths.
	WatchPaths *string `json:"watch_paths,omitempty"`
}

// Cb56324ad19693469b4461d3f6065a5bJSONBodyBuildPack defines parameters for Cb56324ad19693469b4461d3f6065a5b.
type Cb56324ad19693469b4461d3f6065a5bJSONBodyBuildPack string

// Cb56324ad19693469b4461d3f6065a5bJSONBodyRedirect defines parameters for Cb56324ad19693469b4461d3f6065a5b.
type Cb56324ad19693469b4461d3f6065a5bJSONBodyRedirect string

// N1e110b190a1045d34f3e1c61608a8702Params defines parameters for N1e110b190a1045d34f3e1c61608a8702.
type N1e110b190a1045d34f3e1c61608a8702Params struct {
	// Cleanup Delete configurations and volumes.
	Cleanup *bool `form:"cleanup,omitempty" json:"cleanup,omitempty"`
}

// N62a3b1775e8cba5d39a236ebb69830b7JSONBody defines parameters for N62a3b1775e8cba5d39a236ebb69830b7.
type N62a3b1775e8cba5d39a236ebb69830b7JSONBody struct {
	// BaseDirectory The base directory for all commands.
	BaseDirectory *string `json:"base_directory,omitempty"`

	// BuildCommand The build command.
	BuildCommand *string `json:"build_command,omitempty"`

	// BuildPack The build pack type.
	BuildPack *N62a3b1775e8cba5d39a236ebb69830b7JSONBodyBuildPack `json:"build_pack,omitempty"`

	// CustomDockerRunOptions Custom docker run options.
	CustomDockerRunOptions *string `json:"custom_docker_run_options,omitempty"`

	// CustomLabels Custom labels.
	CustomLabels *string `json:"custom_labels,omitempty"`

	// Description The application description.
	Description *string `json:"description,omitempty"`

	// DestinationUuid The destination UUID.
	DestinationUuid *string `json:"destination_uuid,omitempty"`

	// DockerComposeCustomBuildCommand The Docker Compose custom build command.
	DockerComposeCustomBuildCommand *string `json:"docker_compose_custom_build_command,omitempty"`

	// DockerComposeCustomStartCommand The Docker Compose custom start command.
	DockerComposeCustomStartCommand *string `json:"docker_compose_custom_start_command,omitempty"`

	// DockerComposeDomains The Docker Compose domains.
	DockerComposeDomains *[]interface{} `json:"docker_compose_domains,omitempty"`

	// DockerComposeLocation The Docker Compose location.
	DockerComposeLocation *string `json:"docker_compose_location,omitempty"`

	// DockerComposeRaw The Docker Compose raw content.
	DockerComposeRaw *string `json:"docker_compose_raw,omitempty"`

	// DockerRegistryImageName The docker registry image name.
	DockerRegistryImageName *string `json:"docker_registry_image_name,omitempty"`

	// DockerRegistryImageTag The docker registry image tag.
	DockerRegistryImageTag *string `json:"docker_registry_image_tag,omitempty"`

	// Dockerfile The Dockerfile content.
	Dockerfile *string `json:"dockerfile,omitempty"`

	// Domains The application domains.
	Domains *string `json:"domains,omitempty"`

	// EnvironmentName The environment name.
	EnvironmentName *string `json:"environment_name,omitempty"`

	// GitBranch The git branch.
	GitBranch *string `json:"git_branch,omitempty"`

	// GitCommitSha The git commit SHA.
	GitCommitSha *string `json:"git_commit_sha,omitempty"`

	// GitRepository The git repository URL.
	GitRepository *string `json:"git_repository,omitempty"`

	// GithubAppUuid The Github App UUID.
	GithubAppUuid *string `json:"github_app_uuid,omitempty"`

	// HealthCheckEnabled Health check enabled.
	HealthCheckEnabled *bool `json:"health_check_enabled,omitempty"`

	// HealthCheckHost Health check host.
	HealthCheckHost nullable.Nullable[string] `json:"health_check_host,omitempty"`

	// HealthCheckInterval Health check interval in seconds.
	HealthCheckInterval *int `json:"health_check_interval,omitempty"`

	// HealthCheckMethod Health check method.
	HealthCheckMethod *string `json:"health_check_method,omitempty"`

	// HealthCheckPath Health check path.
	HealthCheckPath *string `json:"health_check_path,omitempty"`

	// HealthCheckPort Health check port.
	HealthCheckPort nullable.Nullable[string] `json:"health_check_port,omitempty"`

	// HealthCheckResponseText Health check response text.
	HealthCheckResponseText nullable.Nullable[string] `json:"health_check_response_text,omitempty"`

	// HealthCheckRetries Health check retries count.
	HealthCheckRetries *int `json:"health_check_retries,omitempty"`

	// HealthCheckReturnCode Health check return code.
	HealthCheckReturnCode *int `json:"health_check_return_code,omitempty"`

	// HealthCheckScheme Health check scheme.
	HealthCheckScheme *string `json:"health_check_scheme,omitempty"`

	// HealthCheckStartPeriod Health check start period in seconds.
	HealthCheckStartPeriod *int `json:"health_check_start_period,omitempty"`

	// HealthCheckTimeout Health check timeout in seconds.
	HealthCheckTimeout *int `json:"health_check_timeout,omitempty"`

	// InstallCommand The install command.
	InstallCommand *string `json:"install_command,omitempty"`

	// InstantDeploy The flag to indicate if the application should be deployed instantly.
	InstantDeploy *bool `json:"instant_deploy,omitempty"`

	// IsStatic The flag to indicate if the application is static.
	IsStatic *bool `json:"is_static,omitempty"`

	// LimitsCpuShares CPU shares.
	LimitsCpuShares *int `json:"limits_cpu_shares,omitempty"`

	// LimitsCpus CPU limit.
	LimitsCpus *string `json:"limits_cpus,omitempty"`

	// LimitsCpuset CPU set.
	LimitsCpuset nullable.Nullable[string] `json:"limits_cpuset,omitempty"`

	// LimitsMemory Memory limit.
	LimitsMemory *string `json:"limits_memory,omitempty"`

	// LimitsMemoryReservation Memory reservation.
	LimitsMemoryReservation *string `json:"limits_memory_reservation,omitempty"`

	// LimitsMemorySwap Memory swap limit.
	LimitsMemorySwap *string `json:"limits_memory_swap,omitempty"`

	// LimitsMemorySwappiness Memory swappiness.
	LimitsMemorySwappiness *int `json:"limits_memory_swappiness,omitempty"`

	// ManualWebhookSecretBitbucket Manual webhook secret for Bitbucket.
	ManualWebhookSecretBitbucket *string `json:"manual_webhook_secret_bitbucket,omitempty"`

	// ManualWebhookSecretGitea Manual webhook secret for Gitea.
	ManualWebhookSecretGitea *string `json:"manual_webhook_secret_gitea,omitempty"`

	// ManualWebhookSecretGithub Manual webhook secret for Github.
	ManualWebhookSecretGithub *string `json:"manual_webhook_secret_github,omitempty"`

	// ManualWebhookSecretGitlab Manual webhook secret for Gitlab.
	ManualWebhookSecretGitlab *string `json:"manual_webhook_secret_gitlab,omitempty"`

	// Name The application name.
	Name *string `json:"name,omitempty"`

	// PortsExposes The ports to expose.
	PortsExposes *string `json:"ports_exposes,omitempty"`

	// PortsMappings The ports mappings.
	PortsMappings *string `json:"ports_mappings,omitempty"`

	// PostDeploymentCommand Post deployment command.
	PostDeploymentCommand *string `json:"post_deployment_command,omitempty"`

	// PostDeploymentCommandContainer Post deployment command container.
	PostDeploymentCommandContainer *string `json:"post_deployment_command_container,omitempty"`

	// PreDeploymentCommand Pre deployment command.
	PreDeploymentCommand *string `json:"pre_deployment_command,omitempty"`

	// PreDeploymentCommandContainer Pre deployment command container.
	PreDeploymentCommandContainer *string `json:"pre_deployment_command_container,omitempty"`

	// ProjectUuid The project UUID.
	ProjectUuid *string `json:"project_uuid,omitempty"`

	// PublishDirectory The publish directory.
	PublishDirectory *string `json:"publish_directory,omitempty"`

	// Redirect How to set redirect with Traefik / Caddy. www<->non-www.
	Redirect nullable.Nullable[N62a3b1775e8cba5d39a236ebb69830b7JSONBodyRedirect] `json:"redirect,omitempty"`

	// ServerUuid The server UUID.
	ServerUuid *string `json:"server_uuid,omitempty"`

	// StartCommand The start command.
	StartCommand *string `json:"start_command,omitempty"`

	// WatchPaths The watch paths.
	WatchPaths *string `json:"watch_paths,omitempty"`
}

// N62a3b1775e8cba5d39a236ebb69830b7JSONBodyBuildPack defines parameters for N62a3b1775e8cba5d39a236ebb69830b7.
type N62a3b1775e8cba5d39a236ebb69830b7JSONBodyBuildPack string

// N62a3b1775e8cba5d39a236ebb69830b7JSONBodyRedirect defines parameters for N62a3b1775e8cba5d39a236ebb69830b7.
type N62a3b1775e8cba5d39a236ebb69830b7JSONBodyRedirect string

// N3d70a2d569f395be220b3f09ad36674bJSONBody defines parameters for N3d70a2d569f395be220b3f09ad36674b.
type N3d70a2d569f395be220b3f09ad36674bJSONBody struct {
	// IsBuildTime The flag to indicate if the environment variable is used in build time.
	IsBuildTime *bool `json:"is_build_time,omitempty"`

	// IsLiteral The flag to indicate if the environment variable is a literal, nothing espaced.
	IsLiteral *bool `json:"is_literal,omitempty"`

	// IsMultiline The flag to indicate if the environment variable is multiline.
	IsMultiline *bool `json:"is_multiline,omitempty"`

	// IsPreview The flag to indicate if the environment variable is used in preview deployments.
	IsPreview *bool `json:"is_preview,omitempty"`

	// IsShownOnce The flag to indicate if the environment variable's value is shown on the UI.
	IsShownOnce *bool `json:"is_shown_once,omitempty"`

	// Key The key of the environment variable.
	Key string `json:"key"`

	// Value The value of the environment variable.
	Value string `json:"value"`
}

// N4699ffbb7d6e58581fd0b0a14f36ffc2JSONBody defines parameters for N4699ffbb7d6e58581fd0b0a14f36ffc2.
type N4699ffbb7d6e58581fd0b0a14f36ffc2JSONBody struct {
	// IsBuildTime The flag to indicate if the environment variable is used in build time.
	IsBuildTime *bool `json:"is_build_time,omitempty"`

	// IsLiteral The flag to indicate if the environment variable is a literal, nothing espaced.
	IsLiteral *bool `json:"is_literal,omitempty"`

	// IsMultiline The flag to indicate if the environment variable is multiline.
	IsMultiline *bool `json:"is_multiline,omitempty"`

	// IsPreview The flag to indicate if the environment variable is used in preview deployments.
	IsPreview *bool `json:"is_preview,omitempty"`

	// IsShownOnce The flag to indicate if the environment variable's value is shown on the UI.
	IsShownOnce *bool `json:"is_shown_once,omitempty"`

	// Key The key of the environment variable.
	Key *string `json:"key,omitempty"`

	// Value The value of the environment variable.
	Value *string `json:"value,omitempty"`
}

// Ae96f0f585ed158b2abd2d9ba40f3cf9JSONBody defines parameters for Ae96f0f585ed158b2abd2d9ba40f3cf9.
type Ae96f0f585ed158b2abd2d9ba40f3cf9JSONBody struct {
	Data []struct {
		// IsBuildTime The flag to indicate if the environment variable is used in build time.
		IsBuildTime *bool `json:"is_build_time,omitempty"`

		// IsLiteral The flag to indicate if the environment variable is a literal, nothing espaced.
		IsLiteral *bool `json:"is_literal,omitempty"`

		// IsMultiline The flag to indicate if the environment variable is multiline.
		IsMultiline *bool `json:"is_multiline,omitempty"`

		// IsPreview The flag to indicate if the environment variable is used in preview deployments.
		IsPreview *bool `json:"is_preview,omitempty"`

		// IsShownOnce The flag to indicate if the environment variable's value is shown on the UI.
		IsShownOnce *bool `json:"is_shown_once,omitempty"`

		// Key The key of the environment variable.
		Key *string `json:"key,omitempty"`

		// Value The value of the environment variable.
		Value *string `json:"value,omitempty"`
	} `json:"data"`
}

// Dc87c2061ab303757a0e061f87900c4cParams defines parameters for Dc87c2061ab303757a0e061f87900c4c.
type Dc87c2061ab303757a0e061f87900c4cParams struct {
	// Force Force rebuild.
	Force *bool `form:"force,omitempty" json:"force,omitempty"`

	// InstantDeploy Instant deploy (skip queuing).
	InstantDeploy *bool `form:"instant_deploy,omitempty" json:"instant_deploy,omitempty"`
}

// A1189fa7f956f238f0e95c9150ff57f6JSONBody defines parameters for A1189fa7f956f238f0e95c9150ff57f6.
type A1189fa7f956f238f0e95c9150ff57f6JSONBody struct {
	// ClickhouseAdminPassword Clickhouse admin password
	ClickhouseAdminPassword *string `json:"clickhouse_admin_password,omitempty"`

	// ClickhouseAdminUser Clickhouse admin user
	ClickhouseAdminUser *string `json:"clickhouse_admin_user,omitempty"`

	// Description Description of the database
	Description *string `json:"description,omitempty"`

	// DestinationUuid UUID of the destination if the server has multiple destinations
	DestinationUuid *string `json:"destination_uuid,omitempty"`

	// EnvironmentName Name of the environment
	EnvironmentName string `json:"environment_name"`

	// Image Docker Image of the database
	Image *string `json:"image,omitempty"`

	// InstantDeploy Instant deploy the database
	InstantDeploy *bool `json:"instant_deploy,omitempty"`

	// IsPublic Is the database public?
	IsPublic *bool `json:"is_public,omitempty"`

	// LimitsCpuShares CPU shares of the database
	LimitsCpuShares *int `json:"limits_cpu_shares,omitempty"`

	// LimitsCpus CPU limit of the database
	LimitsCpus *string `json:"limits_cpus,omitempty"`

	// LimitsCpuset CPU set of the database
	LimitsCpuset *string `json:"limits_cpuset,omitempty"`

	// LimitsMemory Memory limit of the database
	LimitsMemory *string `json:"limits_memory,omitempty"`

	// LimitsMemoryReservation Memory reservation of the database
	LimitsMemoryReservation *string `json:"limits_memory_reservation,omitempty"`

	// LimitsMemorySwap Memory swap limit of the database
	LimitsMemorySwap *string `json:"limits_memory_swap,omitempty"`

	// LimitsMemorySwappiness Memory swappiness of the database
	LimitsMemorySwappiness *int `json:"limits_memory_swappiness,omitempty"`

	// Name Name of the database
	Name *string `json:"name,omitempty"`

	// ProjectUuid UUID of the project
	ProjectUuid string `json:"project_uuid"`

	// PublicPort Public port of the database
	PublicPort *int `json:"public_port,omitempty"`

	// ServerUuid UUID of the server
	ServerUuid string `json:"server_uuid"`
}

// E73f7de1c8eee4219e5ec98c4b9b7efeJSONBody defines parameters for E73f7de1c8eee4219e5ec98c4b9b7efe.
type E73f7de1c8eee4219e5ec98c4b9b7efeJSONBody struct {
	// Description Description of the database
	Description *string `json:"description,omitempty"`

	// DestinationUuid UUID of the destination if the server has multiple destinations
	DestinationUuid *string `json:"destination_uuid,omitempty"`

	// DragonflyPassword DragonFly password
	DragonflyPassword *string `json:"dragonfly_password,omitempty"`

	// EnvironmentName Name of the environment
	EnvironmentName string `json:"environment_name"`

	// Image Docker Image of the database
	Image *string `json:"image,omitempty"`

	// InstantDeploy Instant deploy the database
	InstantDeploy *bool `json:"instant_deploy,omitempty"`

	// IsPublic Is the database public?
	IsPublic *bool `json:"is_public,omitempty"`

	// LimitsCpuShares CPU shares of the database
	LimitsCpuShares *int `json:"limits_cpu_shares,omitempty"`

	// LimitsCpus CPU limit of the database
	LimitsCpus *string `json:"limits_cpus,omitempty"`

	// LimitsCpuset CPU set of the database
	LimitsCpuset *string `json:"limits_cpuset,omitempty"`

	// LimitsMemory Memory limit of the database
	LimitsMemory *string `json:"limits_memory,omitempty"`

	// LimitsMemoryReservation Memory reservation of the database
	LimitsMemoryReservation *string `json:"limits_memory_reservation,omitempty"`

	// LimitsMemorySwap Memory swap limit of the database
	LimitsMemorySwap *string `json:"limits_memory_swap,omitempty"`

	// LimitsMemorySwappiness Memory swappiness of the database
	LimitsMemorySwappiness *int `json:"limits_memory_swappiness,omitempty"`

	// Name Name of the database
	Name *string `json:"name,omitempty"`

	// ProjectUuid UUID of the project
	ProjectUuid string `json:"project_uuid"`

	// PublicPort Public port of the database
	PublicPort *int `json:"public_port,omitempty"`

	// ServerUuid UUID of the server
	ServerUuid string `json:"server_uuid"`
}

// B908f3929c371c217d489638e0a21ff6JSONBody defines parameters for B908f3929c371c217d489638e0a21ff6.
type B908f3929c371c217d489638e0a21ff6JSONBody struct {
	// Description Description of the database
	Description *string `json:"description,omitempty"`

	// DestinationUuid UUID of the destination if the server has multiple destinations
	DestinationUuid *string `json:"destination_uuid,omitempty"`

	// EnvironmentName Name of the environment
	EnvironmentName string `json:"environment_name"`

	// Image Docker Image of the database
	Image *string `json:"image,omitempty"`

	// InstantDeploy Instant deploy the database
	InstantDeploy *bool `json:"instant_deploy,omitempty"`

	// IsPublic Is the database public?
	IsPublic *bool `json:"is_public,omitempty"`

	// KeydbConf KeyDB conf
	KeydbConf *string `json:"keydb_conf,omitempty"`

	// KeydbPassword KeyDB password
	KeydbPassword *string `json:"keydb_password,omitempty"`

	// LimitsCpuShares CPU shares of the database
	LimitsCpuShares *int `json:"limits_cpu_shares,omitempty"`

	// LimitsCpus CPU limit of the database
	LimitsCpus *string `json:"limits_cpus,omitempty"`

	// LimitsCpuset CPU set of the database
	LimitsCpuset *string `json:"limits_cpuset,omitempty"`

	// LimitsMemory Memory limit of the database
	LimitsMemory *string `json:"limits_memory,omitempty"`

	// LimitsMemoryReservation Memory reservation of the database
	LimitsMemoryReservation *string `json:"limits_memory_reservation,omitempty"`

	// LimitsMemorySwap Memory swap limit of the database
	LimitsMemorySwap *string `json:"limits_memory_swap,omitempty"`

	// LimitsMemorySwappiness Memory swappiness of the database
	LimitsMemorySwappiness *int `json:"limits_memory_swappiness,omitempty"`

	// Name Name of the database
	Name *string `json:"name,omitempty"`

	// ProjectUuid UUID of the project
	ProjectUuid string `json:"project_uuid"`

	// PublicPort Public port of the database
	PublicPort *int `json:"public_port,omitempty"`

	// ServerUuid UUID of the server
	ServerUuid string `json:"server_uuid"`
}

// N6bea521ddcd738dcbb5f3783a7308acfJSONBody defines parameters for N6bea521ddcd738dcbb5f3783a7308acf.
type N6bea521ddcd738dcbb5f3783a7308acfJSONBody struct {
	// Description Description of the database
	Description *string `json:"description,omitempty"`

	// DestinationUuid UUID of the destination if the server has multiple destinations
	DestinationUuid *string `json:"destination_uuid,omitempty"`

	// EnvironmentName Name of the environment
	EnvironmentName string `json:"environment_name"`

	// Image Docker Image of the database
	Image *string `json:"image,omitempty"`

	// InstantDeploy Instant deploy the database
	InstantDeploy *bool `json:"instant_deploy,omitempty"`

	// IsPublic Is the database public?
	IsPublic *bool `json:"is_public,omitempty"`

	// LimitsCpuShares CPU shares of the database
	LimitsCpuShares *int `json:"limits_cpu_shares,omitempty"`

	// LimitsCpus CPU limit of the database
	LimitsCpus *string `json:"limits_cpus,omitempty"`

	// LimitsCpuset CPU set of the database
	LimitsCpuset *string `json:"limits_cpuset,omitempty"`

	// LimitsMemory Memory limit of the database
	LimitsMemory *string `json:"limits_memory,omitempty"`

	// LimitsMemoryReservation Memory reservation of the database
	LimitsMemoryReservation *string `json:"limits_memory_reservation,omitempty"`

	// LimitsMemorySwap Memory swap limit of the database
	LimitsMemorySwap *string `json:"limits_memory_swap,omitempty"`

	// LimitsMemorySwappiness Memory swappiness of the database
	LimitsMemorySwappiness *int `json:"limits_memory_swappiness,omitempty"`

	// MariadbConf MariaDB conf
	MariadbConf *string `json:"mariadb_conf,omitempty"`

	// MariadbDatabase MariaDB database
	MariadbDatabase *string `json:"mariadb_database,omitempty"`

	// MariadbPassword MariaDB password
	MariadbPassword *string `json:"mariadb_password,omitempty"`

	// MariadbRootPassword MariaDB root password
	MariadbRootPassword *string `json:"mariadb_root_password,omitempty"`

	// MariadbUser MariaDB user
	MariadbUser *string `json:"mariadb_user,omitempty"`

	// Name Name of the database
	Name *string `json:"name,omitempty"`

	// ProjectUuid UUID of the project
	ProjectUuid string `json:"project_uuid"`

	// PublicPort Public port of the database
	PublicPort *int `json:"public_port,omitempty"`

	// ServerUuid UUID of the server
	ServerUuid string `json:"server_uuid"`
}

// Fdba3de84d02519bb37599fea34b115dJSONBody defines parameters for Fdba3de84d02519bb37599fea34b115d.
type Fdba3de84d02519bb37599fea34b115dJSONBody struct {
	// Description Description of the database
	Description *string `json:"description,omitempty"`

	// DestinationUuid UUID of the destination if the server has multiple destinations
	DestinationUuid *string `json:"destination_uuid,omitempty"`

	// EnvironmentName Name of the environment
	EnvironmentName string `json:"environment_name"`

	// Image Docker Image of the database
	Image *string `json:"image,omitempty"`

	// InstantDeploy Instant deploy the database
	InstantDeploy *bool `json:"instant_deploy,omitempty"`

	// IsPublic Is the database public?
	IsPublic *bool `json:"is_public,omitempty"`

	// LimitsCpuShares CPU shares of the database
	LimitsCpuShares *int `json:"limits_cpu_shares,omitempty"`

	// LimitsCpus CPU limit of the database
	LimitsCpus *string `json:"limits_cpus,omitempty"`

	// LimitsCpuset CPU set of the database
	LimitsCpuset *string `json:"limits_cpuset,omitempty"`

	// LimitsMemory Memory limit of the database
	LimitsMemory *string `json:"limits_memory,omitempty"`

	// LimitsMemoryReservation Memory reservation of the database
	LimitsMemoryReservation *string `json:"limits_memory_reservation,omitempty"`

	// LimitsMemorySwap Memory swap limit of the database
	LimitsMemorySwap *string `json:"limits_memory_swap,omitempty"`

	// LimitsMemorySwappiness Memory swappiness of the database
	LimitsMemorySwappiness *int `json:"limits_memory_swappiness,omitempty"`

	// MongoConf MongoDB conf
	MongoConf *string `json:"mongo_conf,omitempty"`

	// MongoInitdbRootUsername MongoDB initdb root username
	MongoInitdbRootUsername *string `json:"mongo_initdb_root_username,omitempty"`

	// Name Name of the database
	Name *string `json:"name,omitempty"`

	// ProjectUuid UUID of the project
	ProjectUuid string `json:"project_uuid"`

	// PublicPort Public port of the database
	PublicPort *int `json:"public_port,omitempty"`

	// ServerUuid UUID of the server
	ServerUuid string `json:"server_uuid"`
}

// N0a1158cf759c4493cbb1e30024c60623JSONBody defines parameters for N0a1158cf759c4493cbb1e30024c60623.
type N0a1158cf759c4493cbb1e30024c60623JSONBody struct {
	// Description Description of the database
	Description *string `json:"description,omitempty"`

	// DestinationUuid UUID of the destination if the server has multiple destinations
	DestinationUuid *string `json:"destination_uuid,omitempty"`

	// EnvironmentName Name of the environment
	EnvironmentName string `json:"environment_name"`

	// Image Docker Image of the database
	Image *string `json:"image,omitempty"`

	// InstantDeploy Instant deploy the database
	InstantDeploy *bool `json:"instant_deploy,omitempty"`

	// IsPublic Is the database public?
	IsPublic *bool `json:"is_public,omitempty"`

	// LimitsCpuShares CPU shares of the database
	LimitsCpuShares *int `json:"limits_cpu_shares,omitempty"`

	// LimitsCpus CPU limit of the database
	LimitsCpus *string `json:"limits_cpus,omitempty"`

	// LimitsCpuset CPU set of the database
	LimitsCpuset *string `json:"limits_cpuset,omitempty"`

	// LimitsMemory Memory limit of the database
	LimitsMemory *string `json:"limits_memory,omitempty"`

	// LimitsMemoryReservation Memory reservation of the database
	LimitsMemoryReservation *string `json:"limits_memory_reservation,omitempty"`

	// LimitsMemorySwap Memory swap limit of the database
	LimitsMemorySwap *string `json:"limits_memory_swap,omitempty"`

	// LimitsMemorySwappiness Memory swappiness of the database
	LimitsMemorySwappiness *int `json:"limits_memory_swappiness,omitempty"`

	// MysqlConf MySQL conf
	MysqlConf *string `json:"mysql_conf,omitempty"`

	// MysqlDatabase MySQL database
	MysqlDatabase *string `json:"mysql_database,omitempty"`

	// MysqlRootPassword MySQL root password
	MysqlRootPassword *string `json:"mysql_root_password,omitempty"`

	// MysqlUser MySQL user
	MysqlUser *string `json:"mysql_user,omitempty"`

	// Name Name of the database
	Name *string `json:"name,omitempty"`

	// ProjectUuid UUID of the project
	ProjectUuid string `json:"project_uuid"`

	// PublicPort Public port of the database
	PublicPort *int `json:"public_port,omitempty"`

	// ServerUuid UUID of the server
	ServerUuid string `json:"server_uuid"`
}

// N8f7f491ddc46a9fa065b4424512231cdJSONBody defines parameters for N8f7f491ddc46a9fa065b4424512231cd.
type N8f7f491ddc46a9fa065b4424512231cdJSONBody struct {
	// Description Description of the database
	Description *string `json:"description,omitempty"`

	// DestinationUuid UUID of the destination if the server has multiple destinations
	DestinationUuid *string `json:"destination_uuid,omitempty"`

	// EnvironmentName Name of the environment
	EnvironmentName string `json:"environment_name"`

	// Image Docker Image of the database
	Image *string `json:"image,omitempty"`

	// InstantDeploy Instant deploy the database
	InstantDeploy *bool `json:"instant_deploy,omitempty"`

	// IsPublic Is the database public?
	IsPublic *bool `json:"is_public,omitempty"`

	// LimitsCpuShares CPU shares of the database
	LimitsCpuShares *int `json:"limits_cpu_shares,omitempty"`

	// LimitsCpus CPU limit of the database
	LimitsCpus *string `json:"limits_cpus,omitempty"`

	// LimitsCpuset CPU set of the database
	LimitsCpuset *string `json:"limits_cpuset,omitempty"`

	// LimitsMemory Memory limit of the database
	LimitsMemory *string `json:"limits_memory,omitempty"`

	// LimitsMemoryReservation Memory reservation of the database
	LimitsMemoryReservation *string `json:"limits_memory_reservation,omitempty"`

	// LimitsMemorySwap Memory swap limit of the database
	LimitsMemorySwap *string `json:"limits_memory_swap,omitempty"`

	// LimitsMemorySwappiness Memory swappiness of the database
	LimitsMemorySwappiness *int `json:"limits_memory_swappiness,omitempty"`

	// Name Name of the database
	Name *string `json:"name,omitempty"`

	// PostgresConf PostgreSQL conf
	PostgresConf *string `json:"postgres_conf,omitempty"`

	// PostgresDb PostgreSQL database
	PostgresDb *string `json:"postgres_db,omitempty"`

	// PostgresHostAuthMethod PostgreSQL host auth method
	PostgresHostAuthMethod *string `json:"postgres_host_auth_method,omitempty"`

	// PostgresInitdbArgs PostgreSQL initdb args
	PostgresInitdbArgs *string `json:"postgres_initdb_args,omitempty"`

	// PostgresPassword PostgreSQL password
	PostgresPassword *string `json:"postgres_password,omitempty"`

	// PostgresUser PostgreSQL user
	PostgresUser *string `json:"postgres_user,omitempty"`

	// ProjectUuid UUID of the project
	ProjectUuid string `json:"project_uuid"`

	// PublicPort Public port of the database
	PublicPort *int `json:"public_port,omitempty"`

	// ServerUuid UUID of the server
	ServerUuid string `json:"server_uuid"`
}

// N4d352d13544ee2953fd48ad7b0651098JSONBody defines parameters for N4d352d13544ee2953fd48ad7b0651098.
type N4d352d13544ee2953fd48ad7b0651098JSONBody struct {
	// Description Description of the database
	Description *string `json:"description,omitempty"`

	// DestinationUuid UUID of the destination if the server has multiple destinations
	DestinationUuid *string `json:"destination_uuid,omitempty"`

	// EnvironmentName Name of the environment
	EnvironmentName string `json:"environment_name"`

	// Image Docker Image of the database
	Image *string `json:"image,omitempty"`

	// InstantDeploy Instant deploy the database
	InstantDeploy *bool `json:"instant_deploy,omitempty"`

	// IsPublic Is the database public?
	IsPublic *bool `json:"is_public,omitempty"`

	// LimitsCpuShares CPU shares of the database
	LimitsCpuShares *int `json:"limits_cpu_shares,omitempty"`

	// LimitsCpus CPU limit of the database
	LimitsCpus *string `json:"limits_cpus,omitempty"`

	// LimitsCpuset CPU set of the database
	LimitsCpuset *string `json:"limits_cpuset,omitempty"`

	// LimitsMemory Memory limit of the database
	LimitsMemory *string `json:"limits_memory,omitempty"`

	// LimitsMemoryReservation Memory reservation of the database
	LimitsMemoryReservation *string `json:"limits_memory_reservation,omitempty"`

	// LimitsMemorySwap Memory swap limit of the database
	LimitsMemorySwap *string `json:"limits_memory_swap,omitempty"`

	// LimitsMemorySwappiness Memory swappiness of the database
	LimitsMemorySwappiness *int `json:"limits_memory_swappiness,omitempty"`

	// Name Name of the database
	Name *string `json:"name,omitempty"`

	// ProjectUuid UUID of the project
	ProjectUuid string `json:"project_uuid"`

	// PublicPort Public port of the database
	PublicPort *int `json:"public_port,omitempty"`

	// RedisConf Redis conf
	RedisConf *string `json:"redis_conf,omitempty"`

	// RedisPassword Redis password
	RedisPassword *string `json:"redis_password,omitempty"`

	// ServerUuid UUID of the server
	ServerUuid string `json:"server_uuid"`
}

// N20610931b2bae8aba34eee68624ab673Params defines parameters for N20610931b2bae8aba34eee68624ab673.
type N20610931b2bae8aba34eee68624ab673Params struct {
	// Cleanup Delete configurations and volumes.
	Cleanup *bool `form:"cleanup,omitempty" json:"cleanup,omitempty"`
}

// N5ba459ed390a721711a1708760e9de3bJSONBody defines parameters for N5ba459ed390a721711a1708760e9de3b.
type N5ba459ed390a721711a1708760e9de3bJSONBody struct {
	// ClickhouseAdminPassword Clickhouse admin password
	ClickhouseAdminPassword *string `json:"clickhouse_admin_password,omitempty"`

	// ClickhouseAdminUser Clickhouse admin user
	ClickhouseAdminUser *string `json:"clickhouse_admin_user,omitempty"`

	// Description Description of the database
	Description *string `json:"description,omitempty"`

	// DragonflyPassword DragonFly password
	DragonflyPassword *string `json:"dragonfly_password,omitempty"`

	// Image Docker Image of the database
	Image *string `json:"image,omitempty"`

	// IsPublic Is the database public?
	IsPublic *bool `json:"is_public,omitempty"`

	// KeydbConf KeyDB conf
	KeydbConf *string `json:"keydb_conf,omitempty"`

	// KeydbPassword KeyDB password
	KeydbPassword *string `json:"keydb_password,omitempty"`

	// LimitsCpuShares CPU shares of the database
	LimitsCpuShares *int `json:"limits_cpu_shares,omitempty"`

	// LimitsCpus CPU limit of the database
	LimitsCpus *string `json:"limits_cpus,omitempty"`

	// LimitsCpuset CPU set of the database
	LimitsCpuset *string `json:"limits_cpuset,omitempty"`

	// LimitsMemory Memory limit of the database
	LimitsMemory *string `json:"limits_memory,omitempty"`

	// LimitsMemoryReservation Memory reservation of the database
	LimitsMemoryReservation *string `json:"limits_memory_reservation,omitempty"`

	// LimitsMemorySwap Memory swap limit of the database
	LimitsMemorySwap *string `json:"limits_memory_swap,omitempty"`

	// LimitsMemorySwappiness Memory swappiness of the database
	LimitsMemorySwappiness *int `json:"limits_memory_swappiness,omitempty"`

	// MariadbConf MariaDB conf
	MariadbConf *string `json:"mariadb_conf,omitempty"`

	// MariadbDatabase MariaDB database
	MariadbDatabase *string `json:"mariadb_database,omitempty"`

	// MariadbPassword MariaDB password
	MariadbPassword *string `json:"mariadb_password,omitempty"`

	// MariadbRootPassword MariaDB root password
	MariadbRootPassword *string `json:"mariadb_root_password,omitempty"`

	// MariadbUser MariaDB user
	MariadbUser *string `json:"mariadb_user,omitempty"`

	// MongoConf Mongo conf
	MongoConf *string `json:"mongo_conf,omitempty"`

	// MongoInitdbInitDatabase Mongo initdb init database
	MongoInitdbInitDatabase *string `json:"mongo_initdb_init_database,omitempty"`

	// MongoInitdbRootPassword Mongo initdb root password
	MongoInitdbRootPassword *string `json:"mongo_initdb_root_password,omitempty"`

	// MongoInitdbRootUsername Mongo initdb root username
	MongoInitdbRootUsername *string `json:"mongo_initdb_root_username,omitempty"`

	// MysqlConf MySQL conf
	MysqlConf *string `json:"mysql_conf,omitempty"`

	// MysqlDatabase MySQL database
	MysqlDatabase *string `json:"mysql_database,omitempty"`

	// MysqlRootPassword MySQL root password
	MysqlRootPassword *string `json:"mysql_root_password,omitempty"`

	// MysqlUser MySQL user
	MysqlUser *string `json:"mysql_user,omitempty"`

	// Name Name of the database
	Name *string `json:"name,omitempty"`

	// PostgresConf PostgreSQL conf
	PostgresConf *string `json:"postgres_conf,omitempty"`

	// PostgresDb PostgreSQL database
	PostgresDb *string `json:"postgres_db,omitempty"`

	// PostgresHostAuthMethod PostgreSQL host auth method
	PostgresHostAuthMethod *string `json:"postgres_host_auth_method,omitempty"`

	// PostgresInitdbArgs PostgreSQL initdb args
	PostgresInitdbArgs *string `json:"postgres_initdb_args,omitempty"`

	// PostgresPassword PostgreSQL password
	PostgresPassword *string `json:"postgres_password,omitempty"`

	// PostgresUser PostgreSQL user
	PostgresUser *string `json:"postgres_user,omitempty"`

	// PublicPort Public port of the database
	PublicPort *int `json:"public_port,omitempty"`

	// RedisConf Redis conf
	RedisConf *string `json:"redis_conf,omitempty"`

	// RedisPassword Redis password
	RedisPassword *string `json:"redis_password,omitempty"`
}

// N700eb6e51f4c9e86d722f600c65ed1d4Params defines parameters for N700eb6e51f4c9e86d722f600c65ed1d4.
type N700eb6e51f4c9e86d722f600c65ed1d4Params struct {
	// Tag Tag name(s). Comma separated list is also accepted.
	Tag *string `form:"tag,omitempty" json:"tag,omitempty"`

	// Uuid Resource UUID(s). Comma separated list is also accepted.
	Uuid *string `form:"uuid,omitempty" json:"uuid,omitempty"`

	// Force Force rebuild (without cache)
	Force *bool `form:"force,omitempty" json:"force,omitempty"`
}

// Cf067eb7cf18216cda3239329a2eeadbJSONBody defines parameters for Cf067eb7cf18216cda3239329a2eeadb.
type Cf067eb7cf18216cda3239329a2eeadbJSONBody struct {
	// Description The description of the project.
	Description *string `json:"description,omitempty"`

	// Name The name of the project.
	Name *string `json:"name,omitempty"`
}

// N2db343bd6fc14c658cb51a2b73b2f842JSONBody defines parameters for N2db343bd6fc14c658cb51a2b73b2f842.
type N2db343bd6fc14c658cb51a2b73b2f842JSONBody struct {
	// Description The description of the project.
	Description *string `json:"description,omitempty"`

	// Name The name of the project.
	Name *string `json:"name,omitempty"`
}

// Eb4780acaa990c594cdbe8ffa80b4fb0JSONBody defines parameters for Eb4780acaa990c594cdbe8ffa80b4fb0.
type Eb4780acaa990c594cdbe8ffa80b4fb0JSONBody struct {
	Description *string `json:"description,omitempty"`
	Name        *string `json:"name,omitempty"`
	PrivateKey  string  `json:"private_key"`
}

// N9feff464b78c24957ed3173324c9cd14JSONBody defines parameters for N9feff464b78c24957ed3173324c9cd14.
type N9feff464b78c24957ed3173324c9cd14JSONBody struct {
	Description *string `json:"description,omitempty"`
	Name        *string `json:"name,omitempty"`
	PrivateKey  string  `json:"private_key"`
}

// Fa44b42490379e428ba5b8747716a8d9JSONBody defines parameters for Fa44b42490379e428ba5b8747716a8d9.
type Fa44b42490379e428ba5b8747716a8d9JSONBody struct {
	// Description The description of the server.
	Description *string `json:"description,omitempty"`

	// InstantValidate Instant validate.
	InstantValidate *bool `json:"instant_validate,omitempty"`

	// Ip The IP of the server.
	Ip string `json:"ip"`

	// IsBuildServer Is build server.
	IsBuildServer *bool `json:"is_build_server,omitempty"`

	// Name The name of the server.
	Name *string `json:"name,omitempty"`

	// Port The port of the server.
	Port *int `json:"port,omitempty"`

	// PrivateKeyUuid The UUID of the private key.
	PrivateKeyUuid string `json:"private_key_uuid"`

	// User The user of the server.
	User *string `json:"user,omitempty"`
}

// N41bbdaf79eb1938592494fc5494442a0JSONBody defines parameters for N41bbdaf79eb1938592494fc5494442a0.
type N41bbdaf79eb1938592494fc5494442a0JSONBody struct {
	// Description The description of the server.
	Description *string `json:"description,omitempty"`

	// InstantValidate Instant validate.
	InstantValidate *bool `json:"instant_validate,omitempty"`

	// Ip The IP of the server.
	Ip *string `json:"ip,omitempty"`

	// IsBuildServer Is build server.
	IsBuildServer *bool `json:"is_build_server,omitempty"`

	// Name The name of the server.
	Name *string `json:"name,omitempty"`

	// Port The port of the server.
	Port *int `json:"port,omitempty"`

	// PrivateKeyUuid The UUID of the private key.
	PrivateKeyUuid *string `json:"private_key_uuid,omitempty"`

	// User The user of the server.
	User *string `json:"user,omitempty"`
}

// N3d6cbfb54d919b53ba3984a113e837d7JSONBody defines parameters for N3d6cbfb54d919b53ba3984a113e837d7.
type N3d6cbfb54d919b53ba3984a113e837d7JSONBody struct {
	// Description Description of the service.
	Description nullable.Nullable[string] `json:"description,omitempty"`

	// DestinationUuid Destination UUID. Required if server has multiple destinations.
	DestinationUuid *string `json:"destination_uuid,omitempty"`

	// EnvironmentName Environment name.
	EnvironmentName string `json:"environment_name"`

	// InstantDeploy Start the service immediately after creation.
	InstantDeploy *bool `json:"instant_deploy,omitempty"`

	// Name Name of the service.
	Name *string `json:"name,omitempty"`

	// ProjectUuid Project UUID.
	ProjectUuid string `json:"project_uuid"`

	// ServerUuid Server UUID.
	ServerUuid string `json:"server_uuid"`

	// Type The one-click service type
	Type N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType `json:"type"`
}

// N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType defines parameters for N3d6cbfb54d919b53ba3984a113e837d7.
type N3d6cbfb54d919b53ba3984a113e837d7JSONBodyType string

// N3731add8226c2d664455978cac46c242JSONRequestBody defines body for N3731add8226c2d664455978cac46c242 for application/json ContentType.
type N3731add8226c2d664455978cac46c242JSONRequestBody N3731add8226c2d664455978cac46c242JSONBody

// N2b433ad6f5d259eb7f4f3b5af9913708JSONRequestBody defines body for N2b433ad6f5d259eb7f4f3b5af9913708 for application/json ContentType.
type N2b433ad6f5d259eb7f4f3b5af9913708JSONRequestBody N2b433ad6f5d259eb7f4f3b5af9913708JSONBody

// E9a2d6dd9404acf880dc3053f09477fcJSONRequestBody defines body for E9a2d6dd9404acf880dc3053f09477fc for application/json ContentType.
type E9a2d6dd9404acf880dc3053f09477fcJSONRequestBody E9a2d6dd9404acf880dc3053f09477fcJSONBody

// E3eaa989ffb05366247a00cdfd551efaJSONRequestBody defines body for E3eaa989ffb05366247a00cdfd551efa for application/json ContentType.
type E3eaa989ffb05366247a00cdfd551efaJSONRequestBody E3eaa989ffb05366247a00cdfd551efaJSONBody

// N4d46c84bda4f1a411f6dda15fce4061fJSONRequestBody defines body for N4d46c84bda4f1a411f6dda15fce4061f for application/json ContentType.
type N4d46c84bda4f1a411f6dda15fce4061fJSONRequestBody N4d46c84bda4f1a411f6dda15fce4061fJSONBody

// Cb56324ad19693469b4461d3f6065a5bJSONRequestBody defines body for Cb56324ad19693469b4461d3f6065a5b for application/json ContentType.
type Cb56324ad19693469b4461d3f6065a5bJSONRequestBody Cb56324ad19693469b4461d3f6065a5bJSONBody

// N62a3b1775e8cba5d39a236ebb69830b7JSONRequestBody defines body for N62a3b1775e8cba5d39a236ebb69830b7 for application/json ContentType.
type N62a3b1775e8cba5d39a236ebb69830b7JSONRequestBody N62a3b1775e8cba5d39a236ebb69830b7JSONBody

// N3d70a2d569f395be220b3f09ad36674bJSONRequestBody defines body for N3d70a2d569f395be220b3f09ad36674b for application/json ContentType.
type N3d70a2d569f395be220b3f09ad36674bJSONRequestBody N3d70a2d569f395be220b3f09ad36674bJSONBody

// N4699ffbb7d6e58581fd0b0a14f36ffc2JSONRequestBody defines body for N4699ffbb7d6e58581fd0b0a14f36ffc2 for application/json ContentType.
type N4699ffbb7d6e58581fd0b0a14f36ffc2JSONRequestBody N4699ffbb7d6e58581fd0b0a14f36ffc2JSONBody

// Ae96f0f585ed158b2abd2d9ba40f3cf9JSONRequestBody defines body for Ae96f0f585ed158b2abd2d9ba40f3cf9 for application/json ContentType.
type Ae96f0f585ed158b2abd2d9ba40f3cf9JSONRequestBody Ae96f0f585ed158b2abd2d9ba40f3cf9JSONBody

// A1189fa7f956f238f0e95c9150ff57f6JSONRequestBody defines body for A1189fa7f956f238f0e95c9150ff57f6 for application/json ContentType.
type A1189fa7f956f238f0e95c9150ff57f6JSONRequestBody A1189fa7f956f238f0e95c9150ff57f6JSONBody

// E73f7de1c8eee4219e5ec98c4b9b7efeJSONRequestBody defines body for E73f7de1c8eee4219e5ec98c4b9b7efe for application/json ContentType.
type E73f7de1c8eee4219e5ec98c4b9b7efeJSONRequestBody E73f7de1c8eee4219e5ec98c4b9b7efeJSONBody

// B908f3929c371c217d489638e0a21ff6JSONRequestBody defines body for B908f3929c371c217d489638e0a21ff6 for application/json ContentType.
type B908f3929c371c217d489638e0a21ff6JSONRequestBody B908f3929c371c217d489638e0a21ff6JSONBody

// N6bea521ddcd738dcbb5f3783a7308acfJSONRequestBody defines body for N6bea521ddcd738dcbb5f3783a7308acf for application/json ContentType.
type N6bea521ddcd738dcbb5f3783a7308acfJSONRequestBody N6bea521ddcd738dcbb5f3783a7308acfJSONBody

// Fdba3de84d02519bb37599fea34b115dJSONRequestBody defines body for Fdba3de84d02519bb37599fea34b115d for application/json ContentType.
type Fdba3de84d02519bb37599fea34b115dJSONRequestBody Fdba3de84d02519bb37599fea34b115dJSONBody

// N0a1158cf759c4493cbb1e30024c60623JSONRequestBody defines body for N0a1158cf759c4493cbb1e30024c60623 for application/json ContentType.
type N0a1158cf759c4493cbb1e30024c60623JSONRequestBody N0a1158cf759c4493cbb1e30024c60623JSONBody

// N8f7f491ddc46a9fa065b4424512231cdJSONRequestBody defines body for N8f7f491ddc46a9fa065b4424512231cd for application/json ContentType.
type N8f7f491ddc46a9fa065b4424512231cdJSONRequestBody N8f7f491ddc46a9fa065b4424512231cdJSONBody

// N4d352d13544ee2953fd48ad7b0651098JSONRequestBody defines body for N4d352d13544ee2953fd48ad7b0651098 for application/json ContentType.
type N4d352d13544ee2953fd48ad7b0651098JSONRequestBody N4d352d13544ee2953fd48ad7b0651098JSONBody

// N5ba459ed390a721711a1708760e9de3bJSONRequestBody defines body for N5ba459ed390a721711a1708760e9de3b for application/json ContentType.
type N5ba459ed390a721711a1708760e9de3bJSONRequestBody N5ba459ed390a721711a1708760e9de3bJSONBody

// Cf067eb7cf18216cda3239329a2eeadbJSONRequestBody defines body for Cf067eb7cf18216cda3239329a2eeadb for application/json ContentType.
type Cf067eb7cf18216cda3239329a2eeadbJSONRequestBody Cf067eb7cf18216cda3239329a2eeadbJSONBody

// N2db343bd6fc14c658cb51a2b73b2f842JSONRequestBody defines body for N2db343bd6fc14c658cb51a2b73b2f842 for application/json ContentType.
type N2db343bd6fc14c658cb51a2b73b2f842JSONRequestBody N2db343bd6fc14c658cb51a2b73b2f842JSONBody

// Eb4780acaa990c594cdbe8ffa80b4fb0JSONRequestBody defines body for Eb4780acaa990c594cdbe8ffa80b4fb0 for application/json ContentType.
type Eb4780acaa990c594cdbe8ffa80b4fb0JSONRequestBody Eb4780acaa990c594cdbe8ffa80b4fb0JSONBody

// N9feff464b78c24957ed3173324c9cd14JSONRequestBody defines body for N9feff464b78c24957ed3173324c9cd14 for application/json ContentType.
type N9feff464b78c24957ed3173324c9cd14JSONRequestBody N9feff464b78c24957ed3173324c9cd14JSONBody

// Fa44b42490379e428ba5b8747716a8d9JSONRequestBody defines body for Fa44b42490379e428ba5b8747716a8d9 for application/json ContentType.
type Fa44b42490379e428ba5b8747716a8d9JSONRequestBody Fa44b42490379e428ba5b8747716a8d9JSONBody

// N41bbdaf79eb1938592494fc5494442a0JSONRequestBody defines body for N41bbdaf79eb1938592494fc5494442a0 for application/json ContentType.
type N41bbdaf79eb1938592494fc5494442a0JSONRequestBody N41bbdaf79eb1938592494fc5494442a0JSONBody

// N3d6cbfb54d919b53ba3984a113e837d7JSONRequestBody defines body for N3d6cbfb54d919b53ba3984a113e837d7 for application/json ContentType.
type N3d6cbfb54d919b53ba3984a113e837d7JSONRequestBody N3d6cbfb54d919b53ba3984a113e837d7JSONBody

// RequestEditorFn  is the function signature for the RequestEditor callback function
type RequestEditorFn func(ctx context.Context, req *http.Request) error

// Doer performs HTTP requests.
//
// The standard http.Client implements this interface.
type HttpRequestDoer interface {
	Do(req *http.Request) (*http.Response, error)
}

// Client which conforms to the OpenAPI3 specification for this service.
type Client struct {
	// The endpoint of the server conforming to this interface, with scheme,
	// https://api.deepmap.com for example. This can contain a path relative
	// to the server, such as https://api.deepmap.com/dev-test, and all the
	// paths in the swagger spec will be appended to the server.
	Server string

	// Doer for performing requests, typically a *http.Client with any
	// customized settings, such as certificate chains.
	Client HttpRequestDoer

	// A list of callbacks for modifying requests which are generated before sending over
	// the network.
	RequestEditors []RequestEditorFn
}

// ClientOption allows setting custom parameters during construction
type ClientOption func(*Client) error

// Creates a new Client, with reasonable defaults
func NewClient(server string, opts ...ClientOption) (*Client, error) {
	// create a client with sane default values
	client := Client{
		Server: server,
	}
	// mutate client and add all optional params
	for _, o := range opts {
		if err := o(&client); err != nil {
			return nil, err
		}
	}
	// ensure the server URL always has a trailing slash
	if !strings.HasSuffix(client.Server, "/") {
		client.Server += "/"
	}
	// create httpClient, if not already present
	if client.Client == nil {
		client.Client = &http.Client{}
	}
	return &client, nil
}

// WithHTTPClient allows overriding the default Doer, which is
// automatically created using http.Client. This is useful for tests.
func WithHTTPClient(doer HttpRequestDoer) ClientOption {
	return func(c *Client) error {
		c.Client = doer
		return nil
	}
}

// WithRequestEditorFn allows setting up a callback function, which will be
// called right before sending the request. This can be used to mutate the request.
func WithRequestEditorFn(fn RequestEditorFn) ClientOption {
	return func(c *Client) error {
		c.RequestEditors = append(c.RequestEditors, fn)
		return nil
	}
}

// The interface specification for the client above.
type ClientInterface interface {
	// N02978e79fc0b54d573b2359f2a1f7d86 request
	N02978e79fc0b54d573b2359f2a1f7d86(ctx context.Context, reqEditors ...RequestEditorFn) (*http.Response, error)

	// N3731add8226c2d664455978cac46c242WithBody request with any body
	N3731add8226c2d664455978cac46c242WithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	N3731add8226c2d664455978cac46c242(ctx context.Context, body N3731add8226c2d664455978cac46c242JSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// N2b433ad6f5d259eb7f4f3b5af9913708WithBody request with any body
	N2b433ad6f5d259eb7f4f3b5af9913708WithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	N2b433ad6f5d259eb7f4f3b5af9913708(ctx context.Context, body N2b433ad6f5d259eb7f4f3b5af9913708JSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// E9a2d6dd9404acf880dc3053f09477fcWithBody request with any body
	E9a2d6dd9404acf880dc3053f09477fcWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	E9a2d6dd9404acf880dc3053f09477fc(ctx context.Context, body E9a2d6dd9404acf880dc3053f09477fcJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// E3eaa989ffb05366247a00cdfd551efaWithBody request with any body
	E3eaa989ffb05366247a00cdfd551efaWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	E3eaa989ffb05366247a00cdfd551efa(ctx context.Context, body E3eaa989ffb05366247a00cdfd551efaJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// N4d46c84bda4f1a411f6dda15fce4061fWithBody request with any body
	N4d46c84bda4f1a411f6dda15fce4061fWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	N4d46c84bda4f1a411f6dda15fce4061f(ctx context.Context, body N4d46c84bda4f1a411f6dda15fce4061fJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// Cb56324ad19693469b4461d3f6065a5bWithBody request with any body
	Cb56324ad19693469b4461d3f6065a5bWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	Cb56324ad19693469b4461d3f6065a5b(ctx context.Context, body Cb56324ad19693469b4461d3f6065a5bJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// N1e110b190a1045d34f3e1c61608a8702 request
	N1e110b190a1045d34f3e1c61608a8702(ctx context.Context, uuid string, params *N1e110b190a1045d34f3e1c61608a8702Params, reqEditors ...RequestEditorFn) (*http.Response, error)

	// N3630b62c28e7358e7f0087c1d8fe1845 request
	N3630b62c28e7358e7f0087c1d8fe1845(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*http.Response, error)

	// N62a3b1775e8cba5d39a236ebb69830b7WithBody request with any body
	N62a3b1775e8cba5d39a236ebb69830b7WithBody(ctx context.Context, uuid string, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	N62a3b1775e8cba5d39a236ebb69830b7(ctx context.Context, uuid string, body N62a3b1775e8cba5d39a236ebb69830b7JSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// N7c8e0c286870e23294a075cc0584df2f request
	N7c8e0c286870e23294a075cc0584df2f(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*http.Response, error)

	// N3d70a2d569f395be220b3f09ad36674bWithBody request with any body
	N3d70a2d569f395be220b3f09ad36674bWithBody(ctx context.Context, uuid string, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	N3d70a2d569f395be220b3f09ad36674b(ctx context.Context, uuid string, body N3d70a2d569f395be220b3f09ad36674bJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// N4699ffbb7d6e58581fd0b0a14f36ffc2WithBody request with any body
	N4699ffbb7d6e58581fd0b0a14f36ffc2WithBody(ctx context.Context, uuid string, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	N4699ffbb7d6e58581fd0b0a14f36ffc2(ctx context.Context, uuid string, body N4699ffbb7d6e58581fd0b0a14f36ffc2JSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// Ae96f0f585ed158b2abd2d9ba40f3cf9WithBody request with any body
	Ae96f0f585ed158b2abd2d9ba40f3cf9WithBody(ctx context.Context, uuid string, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	Ae96f0f585ed158b2abd2d9ba40f3cf9(ctx context.Context, uuid string, body Ae96f0f585ed158b2abd2d9ba40f3cf9JSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// N96097c5cfc7dc0e7a3de229645f630c7 request
	N96097c5cfc7dc0e7a3de229645f630c7(ctx context.Context, uuid string, envUuid string, reqEditors ...RequestEditorFn) (*http.Response, error)

	// B231ae7baab9ef47f0627be820e735bc request
	B231ae7baab9ef47f0627be820e735bc(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*http.Response, error)

	// Dc87c2061ab303757a0e061f87900c4c request
	Dc87c2061ab303757a0e061f87900c4c(ctx context.Context, uuid string, params *Dc87c2061ab303757a0e061f87900c4cParams, reqEditors ...RequestEditorFn) (*http.Response, error)

	// N133ef3c7bd5043901f24bb5002a536eb request
	N133ef3c7bd5043901f24bb5002a536eb(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*http.Response, error)

	// Ecd0ee1e46e4c854c18e6c9daa3d37f3 request
	Ecd0ee1e46e4c854c18e6c9daa3d37f3(ctx context.Context, reqEditors ...RequestEditorFn) (*http.Response, error)

	// A1189fa7f956f238f0e95c9150ff57f6WithBody request with any body
	A1189fa7f956f238f0e95c9150ff57f6WithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	A1189fa7f956f238f0e95c9150ff57f6(ctx context.Context, body A1189fa7f956f238f0e95c9150ff57f6JSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// E73f7de1c8eee4219e5ec98c4b9b7efeWithBody request with any body
	E73f7de1c8eee4219e5ec98c4b9b7efeWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	E73f7de1c8eee4219e5ec98c4b9b7efe(ctx context.Context, body E73f7de1c8eee4219e5ec98c4b9b7efeJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// B908f3929c371c217d489638e0a21ff6WithBody request with any body
	B908f3929c371c217d489638e0a21ff6WithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	B908f3929c371c217d489638e0a21ff6(ctx context.Context, body B908f3929c371c217d489638e0a21ff6JSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// N6bea521ddcd738dcbb5f3783a7308acfWithBody request with any body
	N6bea521ddcd738dcbb5f3783a7308acfWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	N6bea521ddcd738dcbb5f3783a7308acf(ctx context.Context, body N6bea521ddcd738dcbb5f3783a7308acfJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// Fdba3de84d02519bb37599fea34b115dWithBody request with any body
	Fdba3de84d02519bb37599fea34b115dWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	Fdba3de84d02519bb37599fea34b115d(ctx context.Context, body Fdba3de84d02519bb37599fea34b115dJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// N0a1158cf759c4493cbb1e30024c60623WithBody request with any body
	N0a1158cf759c4493cbb1e30024c60623WithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	N0a1158cf759c4493cbb1e30024c60623(ctx context.Context, body N0a1158cf759c4493cbb1e30024c60623JSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// N8f7f491ddc46a9fa065b4424512231cdWithBody request with any body
	N8f7f491ddc46a9fa065b4424512231cdWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	N8f7f491ddc46a9fa065b4424512231cd(ctx context.Context, body N8f7f491ddc46a9fa065b4424512231cdJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// N4d352d13544ee2953fd48ad7b0651098WithBody request with any body
	N4d352d13544ee2953fd48ad7b0651098WithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	N4d352d13544ee2953fd48ad7b0651098(ctx context.Context, body N4d352d13544ee2953fd48ad7b0651098JSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// N20610931b2bae8aba34eee68624ab673 request
	N20610931b2bae8aba34eee68624ab673(ctx context.Context, uuid string, params *N20610931b2bae8aba34eee68624ab673Params, reqEditors ...RequestEditorFn) (*http.Response, error)

	// B49cb2d3e8f34c4e80cdffd8a201031d request
	B49cb2d3e8f34c4e80cdffd8a201031d(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*http.Response, error)

	// N5ba459ed390a721711a1708760e9de3bWithBody request with any body
	N5ba459ed390a721711a1708760e9de3bWithBody(ctx context.Context, uuid string, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	N5ba459ed390a721711a1708760e9de3b(ctx context.Context, uuid string, body N5ba459ed390a721711a1708760e9de3bJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// N04c7a5e4752b4a00036addb433f3f218 request
	N04c7a5e4752b4a00036addb433f3f218(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*http.Response, error)

	// N4c6eb21e734d411e2b3388578761123d request
	N4c6eb21e734d411e2b3388578761123d(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*http.Response, error)

	// Cb6d983c2679aff841c7501ce612a372 request
	Cb6d983c2679aff841c7501ce612a372(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*http.Response, error)

	// N700eb6e51f4c9e86d722f600c65ed1d4 request
	N700eb6e51f4c9e86d722f600c65ed1d4(ctx context.Context, params *N700eb6e51f4c9e86d722f600c65ed1d4Params, reqEditors ...RequestEditorFn) (*http.Response, error)

	// A2c05736269191ad0d99cadfd4708986 request
	A2c05736269191ad0d99cadfd4708986(ctx context.Context, reqEditors ...RequestEditorFn) (*http.Response, error)

	// Ccf9856174c115a1430d952ccbd36aea request
	Ccf9856174c115a1430d952ccbd36aea(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*http.Response, error)

	// N50e2486a2d196a996b24a284a283bcdb request
	N50e2486a2d196a996b24a284a283bcdb(ctx context.Context, reqEditors ...RequestEditorFn) (*http.Response, error)

	// N595019bae03d08277def667609779ff3 request
	N595019bae03d08277def667609779ff3(ctx context.Context, reqEditors ...RequestEditorFn) (*http.Response, error)

	// N64db893135e686704bb88c3c238022c1 request
	N64db893135e686704bb88c3c238022c1(ctx context.Context, reqEditors ...RequestEditorFn) (*http.Response, error)

	// N762788f00f2dabb981df9adbc948d3f6 request
	N762788f00f2dabb981df9adbc948d3f6(ctx context.Context, reqEditors ...RequestEditorFn) (*http.Response, error)

	// Cf067eb7cf18216cda3239329a2eeadbWithBody request with any body
	Cf067eb7cf18216cda3239329a2eeadbWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	Cf067eb7cf18216cda3239329a2eeadb(ctx context.Context, body Cf067eb7cf18216cda3239329a2eeadbJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// F668a936f505b4401948c74b6a663029 request
	F668a936f505b4401948c74b6a663029(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*http.Response, error)

	// N63bf8b6a68fbb757f09ab519331f6298 request
	N63bf8b6a68fbb757f09ab519331f6298(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*http.Response, error)

	// N2db343bd6fc14c658cb51a2b73b2f842WithBody request with any body
	N2db343bd6fc14c658cb51a2b73b2f842WithBody(ctx context.Context, uuid string, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	N2db343bd6fc14c658cb51a2b73b2f842(ctx context.Context, uuid string, body N2db343bd6fc14c658cb51a2b73b2f842JSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// N7e44845dce5aa47ed7b0daf5595ad2e1 request
	N7e44845dce5aa47ed7b0daf5595ad2e1(ctx context.Context, uuid string, environmentName string, reqEditors ...RequestEditorFn) (*http.Response, error)

	// C399903694eb1314596832e49f7c66d7 request
	C399903694eb1314596832e49f7c66d7(ctx context.Context, reqEditors ...RequestEditorFn) (*http.Response, error)

	// N8a5d8d3ccbbcef54ed0e913a27faea9d request
	N8a5d8d3ccbbcef54ed0e913a27faea9d(ctx context.Context, reqEditors ...RequestEditorFn) (*http.Response, error)

	// Eb4780acaa990c594cdbe8ffa80b4fb0WithBody request with any body
	Eb4780acaa990c594cdbe8ffa80b4fb0WithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	Eb4780acaa990c594cdbe8ffa80b4fb0(ctx context.Context, body Eb4780acaa990c594cdbe8ffa80b4fb0JSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// N8faa0bb399142f0084dfc3e003c42cf6 request
	N8faa0bb399142f0084dfc3e003c42cf6(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*http.Response, error)

	// N2f743a85eb65d5ddb8cd5b362bb3d26a request
	N2f743a85eb65d5ddb8cd5b362bb3d26a(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*http.Response, error)

	// N9feff464b78c24957ed3173324c9cd14WithBody request with any body
	N9feff464b78c24957ed3173324c9cd14WithBody(ctx context.Context, uuid string, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	N9feff464b78c24957ed3173324c9cd14(ctx context.Context, uuid string, body N9feff464b78c24957ed3173324c9cd14JSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// N787448df856cefd2d9a313566be30d34 request
	N787448df856cefd2d9a313566be30d34(ctx context.Context, reqEditors ...RequestEditorFn) (*http.Response, error)

	// Fa44b42490379e428ba5b8747716a8d9WithBody request with any body
	Fa44b42490379e428ba5b8747716a8d9WithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	Fa44b42490379e428ba5b8747716a8d9(ctx context.Context, body Fa44b42490379e428ba5b8747716a8d9JSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// N0231fe0134f0306b21f006ce51b0a3dc request
	N0231fe0134f0306b21f006ce51b0a3dc(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*http.Response, error)

	// N5baf04bddb8302c7e07f5b4c41aad10c request
	N5baf04bddb8302c7e07f5b4c41aad10c(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*http.Response, error)

	// N41bbdaf79eb1938592494fc5494442a0WithBody request with any body
	N41bbdaf79eb1938592494fc5494442a0WithBody(ctx context.Context, uuid string, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	N41bbdaf79eb1938592494fc5494442a0(ctx context.Context, uuid string, body N41bbdaf79eb1938592494fc5494442a0JSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// N1ee227755be848d572f412272f53dd93 request
	N1ee227755be848d572f412272f53dd93(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*http.Response, error)

	// Cef26c059941b44fbd8de3a7a58c10a5 request
	Cef26c059941b44fbd8de3a7a58c10a5(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*http.Response, error)

	// A543a12ef2cbc7a3dd22c3dbe6cbee89 request
	A543a12ef2cbc7a3dd22c3dbe6cbee89(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*http.Response, error)

	// N5d014ac25d33391b8f4c2316060ba452 request
	N5d014ac25d33391b8f4c2316060ba452(ctx context.Context, reqEditors ...RequestEditorFn) (*http.Response, error)

	// N3d6cbfb54d919b53ba3984a113e837d7WithBody request with any body
	N3d6cbfb54d919b53ba3984a113e837d7WithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	N3d6cbfb54d919b53ba3984a113e837d7(ctx context.Context, body N3d6cbfb54d919b53ba3984a113e837d7JSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// N6e1a61e4fddaa9d95bb9fc66dfaf0442 request
	N6e1a61e4fddaa9d95bb9fc66dfaf0442(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*http.Response, error)

	// N895d39ee2cb3994285de57256c2d428d request
	N895d39ee2cb3994285de57256c2d428d(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*http.Response, error)

	// N836645faa615b75052759dae78639469 request
	N836645faa615b75052759dae78639469(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*http.Response, error)

	// D2ddd9c028d123fbdec830dc4b25b4cb request
	D2ddd9c028d123fbdec830dc4b25b4cb(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*http.Response, error)

	// N87399d34758ce16830740c68626614db request
	N87399d34758ce16830740c68626614db(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*http.Response, error)

	// F9c530b5b25df9601cb87d6a58646f0a request
	F9c530b5b25df9601cb87d6a58646f0a(ctx context.Context, reqEditors ...RequestEditorFn) (*http.Response, error)

	// N6a4ec9fed1aad7b0b38356c47d7ac509 request
	N6a4ec9fed1aad7b0b38356c47d7ac509(ctx context.Context, reqEditors ...RequestEditorFn) (*http.Response, error)

	// N97e636a5796dbe71afb0bbcf1eec6e41 request
	N97e636a5796dbe71afb0bbcf1eec6e41(ctx context.Context, reqEditors ...RequestEditorFn) (*http.Response, error)

	// Ac57ff546c002032cef44602c46a4e76 request
	Ac57ff546c002032cef44602c46a4e76(ctx context.Context, id int, reqEditors ...RequestEditorFn) (*http.Response, error)

	// N7858f5a45d9ea55184c182852a7f0f6c request
	N7858f5a45d9ea55184c182852a7f0f6c(ctx context.Context, id int, reqEditors ...RequestEditorFn) (*http.Response, error)

	// N187b37139844731110757711ee71c215 request
	N187b37139844731110757711ee71c215(ctx context.Context, reqEditors ...RequestEditorFn) (*http.Response, error)
}

func (c *Client) N02978e79fc0b54d573b2359f2a1f7d86(ctx context.Context, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN02978e79fc0b54d573b2359f2a1f7d86Request(c.Server)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N3731add8226c2d664455978cac46c242WithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN3731add8226c2d664455978cac46c242RequestWithBody(c.Server, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N3731add8226c2d664455978cac46c242(ctx context.Context, body N3731add8226c2d664455978cac46c242JSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN3731add8226c2d664455978cac46c242Request(c.Server, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N2b433ad6f5d259eb7f4f3b5af9913708WithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN2b433ad6f5d259eb7f4f3b5af9913708RequestWithBody(c.Server, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N2b433ad6f5d259eb7f4f3b5af9913708(ctx context.Context, body N2b433ad6f5d259eb7f4f3b5af9913708JSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN2b433ad6f5d259eb7f4f3b5af9913708Request(c.Server, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) E9a2d6dd9404acf880dc3053f09477fcWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewE9a2d6dd9404acf880dc3053f09477fcRequestWithBody(c.Server, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) E9a2d6dd9404acf880dc3053f09477fc(ctx context.Context, body E9a2d6dd9404acf880dc3053f09477fcJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewE9a2d6dd9404acf880dc3053f09477fcRequest(c.Server, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) E3eaa989ffb05366247a00cdfd551efaWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewE3eaa989ffb05366247a00cdfd551efaRequestWithBody(c.Server, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) E3eaa989ffb05366247a00cdfd551efa(ctx context.Context, body E3eaa989ffb05366247a00cdfd551efaJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewE3eaa989ffb05366247a00cdfd551efaRequest(c.Server, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N4d46c84bda4f1a411f6dda15fce4061fWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN4d46c84bda4f1a411f6dda15fce4061fRequestWithBody(c.Server, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N4d46c84bda4f1a411f6dda15fce4061f(ctx context.Context, body N4d46c84bda4f1a411f6dda15fce4061fJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN4d46c84bda4f1a411f6dda15fce4061fRequest(c.Server, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) Cb56324ad19693469b4461d3f6065a5bWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewCb56324ad19693469b4461d3f6065a5bRequestWithBody(c.Server, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) Cb56324ad19693469b4461d3f6065a5b(ctx context.Context, body Cb56324ad19693469b4461d3f6065a5bJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewCb56324ad19693469b4461d3f6065a5bRequest(c.Server, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N1e110b190a1045d34f3e1c61608a8702(ctx context.Context, uuid string, params *N1e110b190a1045d34f3e1c61608a8702Params, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN1e110b190a1045d34f3e1c61608a8702Request(c.Server, uuid, params)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N3630b62c28e7358e7f0087c1d8fe1845(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN3630b62c28e7358e7f0087c1d8fe1845Request(c.Server, uuid)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N62a3b1775e8cba5d39a236ebb69830b7WithBody(ctx context.Context, uuid string, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN62a3b1775e8cba5d39a236ebb69830b7RequestWithBody(c.Server, uuid, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N62a3b1775e8cba5d39a236ebb69830b7(ctx context.Context, uuid string, body N62a3b1775e8cba5d39a236ebb69830b7JSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN62a3b1775e8cba5d39a236ebb69830b7Request(c.Server, uuid, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N7c8e0c286870e23294a075cc0584df2f(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN7c8e0c286870e23294a075cc0584df2fRequest(c.Server, uuid)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N3d70a2d569f395be220b3f09ad36674bWithBody(ctx context.Context, uuid string, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN3d70a2d569f395be220b3f09ad36674bRequestWithBody(c.Server, uuid, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N3d70a2d569f395be220b3f09ad36674b(ctx context.Context, uuid string, body N3d70a2d569f395be220b3f09ad36674bJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN3d70a2d569f395be220b3f09ad36674bRequest(c.Server, uuid, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N4699ffbb7d6e58581fd0b0a14f36ffc2WithBody(ctx context.Context, uuid string, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN4699ffbb7d6e58581fd0b0a14f36ffc2RequestWithBody(c.Server, uuid, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N4699ffbb7d6e58581fd0b0a14f36ffc2(ctx context.Context, uuid string, body N4699ffbb7d6e58581fd0b0a14f36ffc2JSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN4699ffbb7d6e58581fd0b0a14f36ffc2Request(c.Server, uuid, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) Ae96f0f585ed158b2abd2d9ba40f3cf9WithBody(ctx context.Context, uuid string, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewAe96f0f585ed158b2abd2d9ba40f3cf9RequestWithBody(c.Server, uuid, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) Ae96f0f585ed158b2abd2d9ba40f3cf9(ctx context.Context, uuid string, body Ae96f0f585ed158b2abd2d9ba40f3cf9JSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewAe96f0f585ed158b2abd2d9ba40f3cf9Request(c.Server, uuid, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N96097c5cfc7dc0e7a3de229645f630c7(ctx context.Context, uuid string, envUuid string, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN96097c5cfc7dc0e7a3de229645f630c7Request(c.Server, uuid, envUuid)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) B231ae7baab9ef47f0627be820e735bc(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewB231ae7baab9ef47f0627be820e735bcRequest(c.Server, uuid)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) Dc87c2061ab303757a0e061f87900c4c(ctx context.Context, uuid string, params *Dc87c2061ab303757a0e061f87900c4cParams, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewDc87c2061ab303757a0e061f87900c4cRequest(c.Server, uuid, params)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N133ef3c7bd5043901f24bb5002a536eb(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN133ef3c7bd5043901f24bb5002a536ebRequest(c.Server, uuid)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) Ecd0ee1e46e4c854c18e6c9daa3d37f3(ctx context.Context, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewEcd0ee1e46e4c854c18e6c9daa3d37f3Request(c.Server)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) A1189fa7f956f238f0e95c9150ff57f6WithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewA1189fa7f956f238f0e95c9150ff57f6RequestWithBody(c.Server, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) A1189fa7f956f238f0e95c9150ff57f6(ctx context.Context, body A1189fa7f956f238f0e95c9150ff57f6JSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewA1189fa7f956f238f0e95c9150ff57f6Request(c.Server, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) E73f7de1c8eee4219e5ec98c4b9b7efeWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewE73f7de1c8eee4219e5ec98c4b9b7efeRequestWithBody(c.Server, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) E73f7de1c8eee4219e5ec98c4b9b7efe(ctx context.Context, body E73f7de1c8eee4219e5ec98c4b9b7efeJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewE73f7de1c8eee4219e5ec98c4b9b7efeRequest(c.Server, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) B908f3929c371c217d489638e0a21ff6WithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewB908f3929c371c217d489638e0a21ff6RequestWithBody(c.Server, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) B908f3929c371c217d489638e0a21ff6(ctx context.Context, body B908f3929c371c217d489638e0a21ff6JSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewB908f3929c371c217d489638e0a21ff6Request(c.Server, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N6bea521ddcd738dcbb5f3783a7308acfWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN6bea521ddcd738dcbb5f3783a7308acfRequestWithBody(c.Server, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N6bea521ddcd738dcbb5f3783a7308acf(ctx context.Context, body N6bea521ddcd738dcbb5f3783a7308acfJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN6bea521ddcd738dcbb5f3783a7308acfRequest(c.Server, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) Fdba3de84d02519bb37599fea34b115dWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewFdba3de84d02519bb37599fea34b115dRequestWithBody(c.Server, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) Fdba3de84d02519bb37599fea34b115d(ctx context.Context, body Fdba3de84d02519bb37599fea34b115dJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewFdba3de84d02519bb37599fea34b115dRequest(c.Server, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N0a1158cf759c4493cbb1e30024c60623WithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN0a1158cf759c4493cbb1e30024c60623RequestWithBody(c.Server, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N0a1158cf759c4493cbb1e30024c60623(ctx context.Context, body N0a1158cf759c4493cbb1e30024c60623JSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN0a1158cf759c4493cbb1e30024c60623Request(c.Server, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N8f7f491ddc46a9fa065b4424512231cdWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN8f7f491ddc46a9fa065b4424512231cdRequestWithBody(c.Server, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N8f7f491ddc46a9fa065b4424512231cd(ctx context.Context, body N8f7f491ddc46a9fa065b4424512231cdJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN8f7f491ddc46a9fa065b4424512231cdRequest(c.Server, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N4d352d13544ee2953fd48ad7b0651098WithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN4d352d13544ee2953fd48ad7b0651098RequestWithBody(c.Server, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N4d352d13544ee2953fd48ad7b0651098(ctx context.Context, body N4d352d13544ee2953fd48ad7b0651098JSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN4d352d13544ee2953fd48ad7b0651098Request(c.Server, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N20610931b2bae8aba34eee68624ab673(ctx context.Context, uuid string, params *N20610931b2bae8aba34eee68624ab673Params, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN20610931b2bae8aba34eee68624ab673Request(c.Server, uuid, params)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) B49cb2d3e8f34c4e80cdffd8a201031d(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewB49cb2d3e8f34c4e80cdffd8a201031dRequest(c.Server, uuid)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N5ba459ed390a721711a1708760e9de3bWithBody(ctx context.Context, uuid string, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN5ba459ed390a721711a1708760e9de3bRequestWithBody(c.Server, uuid, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N5ba459ed390a721711a1708760e9de3b(ctx context.Context, uuid string, body N5ba459ed390a721711a1708760e9de3bJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN5ba459ed390a721711a1708760e9de3bRequest(c.Server, uuid, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N04c7a5e4752b4a00036addb433f3f218(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN04c7a5e4752b4a00036addb433f3f218Request(c.Server, uuid)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N4c6eb21e734d411e2b3388578761123d(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN4c6eb21e734d411e2b3388578761123dRequest(c.Server, uuid)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) Cb6d983c2679aff841c7501ce612a372(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewCb6d983c2679aff841c7501ce612a372Request(c.Server, uuid)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N700eb6e51f4c9e86d722f600c65ed1d4(ctx context.Context, params *N700eb6e51f4c9e86d722f600c65ed1d4Params, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN700eb6e51f4c9e86d722f600c65ed1d4Request(c.Server, params)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) A2c05736269191ad0d99cadfd4708986(ctx context.Context, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewA2c05736269191ad0d99cadfd4708986Request(c.Server)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) Ccf9856174c115a1430d952ccbd36aea(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewCcf9856174c115a1430d952ccbd36aeaRequest(c.Server, uuid)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N50e2486a2d196a996b24a284a283bcdb(ctx context.Context, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN50e2486a2d196a996b24a284a283bcdbRequest(c.Server)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N595019bae03d08277def667609779ff3(ctx context.Context, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN595019bae03d08277def667609779ff3Request(c.Server)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N64db893135e686704bb88c3c238022c1(ctx context.Context, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN64db893135e686704bb88c3c238022c1Request(c.Server)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N762788f00f2dabb981df9adbc948d3f6(ctx context.Context, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN762788f00f2dabb981df9adbc948d3f6Request(c.Server)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) Cf067eb7cf18216cda3239329a2eeadbWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewCf067eb7cf18216cda3239329a2eeadbRequestWithBody(c.Server, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) Cf067eb7cf18216cda3239329a2eeadb(ctx context.Context, body Cf067eb7cf18216cda3239329a2eeadbJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewCf067eb7cf18216cda3239329a2eeadbRequest(c.Server, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) F668a936f505b4401948c74b6a663029(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewF668a936f505b4401948c74b6a663029Request(c.Server, uuid)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N63bf8b6a68fbb757f09ab519331f6298(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN63bf8b6a68fbb757f09ab519331f6298Request(c.Server, uuid)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N2db343bd6fc14c658cb51a2b73b2f842WithBody(ctx context.Context, uuid string, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN2db343bd6fc14c658cb51a2b73b2f842RequestWithBody(c.Server, uuid, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N2db343bd6fc14c658cb51a2b73b2f842(ctx context.Context, uuid string, body N2db343bd6fc14c658cb51a2b73b2f842JSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN2db343bd6fc14c658cb51a2b73b2f842Request(c.Server, uuid, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N7e44845dce5aa47ed7b0daf5595ad2e1(ctx context.Context, uuid string, environmentName string, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN7e44845dce5aa47ed7b0daf5595ad2e1Request(c.Server, uuid, environmentName)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) C399903694eb1314596832e49f7c66d7(ctx context.Context, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewC399903694eb1314596832e49f7c66d7Request(c.Server)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N8a5d8d3ccbbcef54ed0e913a27faea9d(ctx context.Context, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN8a5d8d3ccbbcef54ed0e913a27faea9dRequest(c.Server)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) Eb4780acaa990c594cdbe8ffa80b4fb0WithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewEb4780acaa990c594cdbe8ffa80b4fb0RequestWithBody(c.Server, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) Eb4780acaa990c594cdbe8ffa80b4fb0(ctx context.Context, body Eb4780acaa990c594cdbe8ffa80b4fb0JSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewEb4780acaa990c594cdbe8ffa80b4fb0Request(c.Server, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N8faa0bb399142f0084dfc3e003c42cf6(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN8faa0bb399142f0084dfc3e003c42cf6Request(c.Server, uuid)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N2f743a85eb65d5ddb8cd5b362bb3d26a(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN2f743a85eb65d5ddb8cd5b362bb3d26aRequest(c.Server, uuid)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N9feff464b78c24957ed3173324c9cd14WithBody(ctx context.Context, uuid string, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN9feff464b78c24957ed3173324c9cd14RequestWithBody(c.Server, uuid, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N9feff464b78c24957ed3173324c9cd14(ctx context.Context, uuid string, body N9feff464b78c24957ed3173324c9cd14JSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN9feff464b78c24957ed3173324c9cd14Request(c.Server, uuid, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N787448df856cefd2d9a313566be30d34(ctx context.Context, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN787448df856cefd2d9a313566be30d34Request(c.Server)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) Fa44b42490379e428ba5b8747716a8d9WithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewFa44b42490379e428ba5b8747716a8d9RequestWithBody(c.Server, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) Fa44b42490379e428ba5b8747716a8d9(ctx context.Context, body Fa44b42490379e428ba5b8747716a8d9JSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewFa44b42490379e428ba5b8747716a8d9Request(c.Server, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N0231fe0134f0306b21f006ce51b0a3dc(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN0231fe0134f0306b21f006ce51b0a3dcRequest(c.Server, uuid)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N5baf04bddb8302c7e07f5b4c41aad10c(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN5baf04bddb8302c7e07f5b4c41aad10cRequest(c.Server, uuid)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N41bbdaf79eb1938592494fc5494442a0WithBody(ctx context.Context, uuid string, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN41bbdaf79eb1938592494fc5494442a0RequestWithBody(c.Server, uuid, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N41bbdaf79eb1938592494fc5494442a0(ctx context.Context, uuid string, body N41bbdaf79eb1938592494fc5494442a0JSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN41bbdaf79eb1938592494fc5494442a0Request(c.Server, uuid, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N1ee227755be848d572f412272f53dd93(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN1ee227755be848d572f412272f53dd93Request(c.Server, uuid)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) Cef26c059941b44fbd8de3a7a58c10a5(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewCef26c059941b44fbd8de3a7a58c10a5Request(c.Server, uuid)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) A543a12ef2cbc7a3dd22c3dbe6cbee89(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewA543a12ef2cbc7a3dd22c3dbe6cbee89Request(c.Server, uuid)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N5d014ac25d33391b8f4c2316060ba452(ctx context.Context, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN5d014ac25d33391b8f4c2316060ba452Request(c.Server)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N3d6cbfb54d919b53ba3984a113e837d7WithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN3d6cbfb54d919b53ba3984a113e837d7RequestWithBody(c.Server, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N3d6cbfb54d919b53ba3984a113e837d7(ctx context.Context, body N3d6cbfb54d919b53ba3984a113e837d7JSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN3d6cbfb54d919b53ba3984a113e837d7Request(c.Server, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N6e1a61e4fddaa9d95bb9fc66dfaf0442(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN6e1a61e4fddaa9d95bb9fc66dfaf0442Request(c.Server, uuid)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N895d39ee2cb3994285de57256c2d428d(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN895d39ee2cb3994285de57256c2d428dRequest(c.Server, uuid)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N836645faa615b75052759dae78639469(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN836645faa615b75052759dae78639469Request(c.Server, uuid)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) D2ddd9c028d123fbdec830dc4b25b4cb(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewD2ddd9c028d123fbdec830dc4b25b4cbRequest(c.Server, uuid)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N87399d34758ce16830740c68626614db(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN87399d34758ce16830740c68626614dbRequest(c.Server, uuid)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) F9c530b5b25df9601cb87d6a58646f0a(ctx context.Context, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewF9c530b5b25df9601cb87d6a58646f0aRequest(c.Server)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N6a4ec9fed1aad7b0b38356c47d7ac509(ctx context.Context, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN6a4ec9fed1aad7b0b38356c47d7ac509Request(c.Server)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N97e636a5796dbe71afb0bbcf1eec6e41(ctx context.Context, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN97e636a5796dbe71afb0bbcf1eec6e41Request(c.Server)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) Ac57ff546c002032cef44602c46a4e76(ctx context.Context, id int, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewAc57ff546c002032cef44602c46a4e76Request(c.Server, id)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N7858f5a45d9ea55184c182852a7f0f6c(ctx context.Context, id int, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN7858f5a45d9ea55184c182852a7f0f6cRequest(c.Server, id)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) N187b37139844731110757711ee71c215(ctx context.Context, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewN187b37139844731110757711ee71c215Request(c.Server)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

// NewN02978e79fc0b54d573b2359f2a1f7d86Request generates requests for N02978e79fc0b54d573b2359f2a1f7d86
func NewN02978e79fc0b54d573b2359f2a1f7d86Request(server string) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/applications")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewN3731add8226c2d664455978cac46c242Request calls the generic N3731add8226c2d664455978cac46c242 builder with application/json body
func NewN3731add8226c2d664455978cac46c242Request(server string, body N3731add8226c2d664455978cac46c242JSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewN3731add8226c2d664455978cac46c242RequestWithBody(server, "application/json", bodyReader)
}

// NewN3731add8226c2d664455978cac46c242RequestWithBody generates requests for N3731add8226c2d664455978cac46c242 with any type of body
func NewN3731add8226c2d664455978cac46c242RequestWithBody(server string, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/applications/dockercompose")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("POST", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	return req, nil
}

// NewN2b433ad6f5d259eb7f4f3b5af9913708Request calls the generic N2b433ad6f5d259eb7f4f3b5af9913708 builder with application/json body
func NewN2b433ad6f5d259eb7f4f3b5af9913708Request(server string, body N2b433ad6f5d259eb7f4f3b5af9913708JSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewN2b433ad6f5d259eb7f4f3b5af9913708RequestWithBody(server, "application/json", bodyReader)
}

// NewN2b433ad6f5d259eb7f4f3b5af9913708RequestWithBody generates requests for N2b433ad6f5d259eb7f4f3b5af9913708 with any type of body
func NewN2b433ad6f5d259eb7f4f3b5af9913708RequestWithBody(server string, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/applications/dockerfile")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("POST", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	return req, nil
}

// NewE9a2d6dd9404acf880dc3053f09477fcRequest calls the generic E9a2d6dd9404acf880dc3053f09477fc builder with application/json body
func NewE9a2d6dd9404acf880dc3053f09477fcRequest(server string, body E9a2d6dd9404acf880dc3053f09477fcJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewE9a2d6dd9404acf880dc3053f09477fcRequestWithBody(server, "application/json", bodyReader)
}

// NewE9a2d6dd9404acf880dc3053f09477fcRequestWithBody generates requests for E9a2d6dd9404acf880dc3053f09477fc with any type of body
func NewE9a2d6dd9404acf880dc3053f09477fcRequestWithBody(server string, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/applications/dockerimage")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("POST", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	return req, nil
}

// NewE3eaa989ffb05366247a00cdfd551efaRequest calls the generic E3eaa989ffb05366247a00cdfd551efa builder with application/json body
func NewE3eaa989ffb05366247a00cdfd551efaRequest(server string, body E3eaa989ffb05366247a00cdfd551efaJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewE3eaa989ffb05366247a00cdfd551efaRequestWithBody(server, "application/json", bodyReader)
}

// NewE3eaa989ffb05366247a00cdfd551efaRequestWithBody generates requests for E3eaa989ffb05366247a00cdfd551efa with any type of body
func NewE3eaa989ffb05366247a00cdfd551efaRequestWithBody(server string, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/applications/private-deploy-key")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("POST", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	return req, nil
}

// NewN4d46c84bda4f1a411f6dda15fce4061fRequest calls the generic N4d46c84bda4f1a411f6dda15fce4061f builder with application/json body
func NewN4d46c84bda4f1a411f6dda15fce4061fRequest(server string, body N4d46c84bda4f1a411f6dda15fce4061fJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewN4d46c84bda4f1a411f6dda15fce4061fRequestWithBody(server, "application/json", bodyReader)
}

// NewN4d46c84bda4f1a411f6dda15fce4061fRequestWithBody generates requests for N4d46c84bda4f1a411f6dda15fce4061f with any type of body
func NewN4d46c84bda4f1a411f6dda15fce4061fRequestWithBody(server string, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/applications/private-gh-app")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("POST", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	return req, nil
}

// NewCb56324ad19693469b4461d3f6065a5bRequest calls the generic Cb56324ad19693469b4461d3f6065a5b builder with application/json body
func NewCb56324ad19693469b4461d3f6065a5bRequest(server string, body Cb56324ad19693469b4461d3f6065a5bJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewCb56324ad19693469b4461d3f6065a5bRequestWithBody(server, "application/json", bodyReader)
}

// NewCb56324ad19693469b4461d3f6065a5bRequestWithBody generates requests for Cb56324ad19693469b4461d3f6065a5b with any type of body
func NewCb56324ad19693469b4461d3f6065a5bRequestWithBody(server string, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/applications/public")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("POST", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	return req, nil
}

// NewN1e110b190a1045d34f3e1c61608a8702Request generates requests for N1e110b190a1045d34f3e1c61608a8702
func NewN1e110b190a1045d34f3e1c61608a8702Request(server string, uuid string, params *N1e110b190a1045d34f3e1c61608a8702Params) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "uuid", runtime.ParamLocationPath, uuid)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/applications/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	if params != nil {
		queryValues := queryURL.Query()

		if params.Cleanup != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "cleanup", runtime.ParamLocationQuery, *params.Cleanup); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		queryURL.RawQuery = queryValues.Encode()
	}

	req, err := http.NewRequest("DELETE", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewN3630b62c28e7358e7f0087c1d8fe1845Request generates requests for N3630b62c28e7358e7f0087c1d8fe1845
func NewN3630b62c28e7358e7f0087c1d8fe1845Request(server string, uuid string) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "uuid", runtime.ParamLocationPath, uuid)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/applications/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewN62a3b1775e8cba5d39a236ebb69830b7Request calls the generic N62a3b1775e8cba5d39a236ebb69830b7 builder with application/json body
func NewN62a3b1775e8cba5d39a236ebb69830b7Request(server string, uuid string, body N62a3b1775e8cba5d39a236ebb69830b7JSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewN62a3b1775e8cba5d39a236ebb69830b7RequestWithBody(server, uuid, "application/json", bodyReader)
}

// NewN62a3b1775e8cba5d39a236ebb69830b7RequestWithBody generates requests for N62a3b1775e8cba5d39a236ebb69830b7 with any type of body
func NewN62a3b1775e8cba5d39a236ebb69830b7RequestWithBody(server string, uuid string, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "uuid", runtime.ParamLocationPath, uuid)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/applications/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("PATCH", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	return req, nil
}

// NewN7c8e0c286870e23294a075cc0584df2fRequest generates requests for N7c8e0c286870e23294a075cc0584df2f
func NewN7c8e0c286870e23294a075cc0584df2fRequest(server string, uuid string) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "uuid", runtime.ParamLocationPath, uuid)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/applications/%s/envs", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewN3d70a2d569f395be220b3f09ad36674bRequest calls the generic N3d70a2d569f395be220b3f09ad36674b builder with application/json body
func NewN3d70a2d569f395be220b3f09ad36674bRequest(server string, uuid string, body N3d70a2d569f395be220b3f09ad36674bJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewN3d70a2d569f395be220b3f09ad36674bRequestWithBody(server, uuid, "application/json", bodyReader)
}

// NewN3d70a2d569f395be220b3f09ad36674bRequestWithBody generates requests for N3d70a2d569f395be220b3f09ad36674b with any type of body
func NewN3d70a2d569f395be220b3f09ad36674bRequestWithBody(server string, uuid string, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "uuid", runtime.ParamLocationPath, uuid)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/applications/%s/envs", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("PATCH", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	return req, nil
}

// NewN4699ffbb7d6e58581fd0b0a14f36ffc2Request calls the generic N4699ffbb7d6e58581fd0b0a14f36ffc2 builder with application/json body
func NewN4699ffbb7d6e58581fd0b0a14f36ffc2Request(server string, uuid string, body N4699ffbb7d6e58581fd0b0a14f36ffc2JSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewN4699ffbb7d6e58581fd0b0a14f36ffc2RequestWithBody(server, uuid, "application/json", bodyReader)
}

// NewN4699ffbb7d6e58581fd0b0a14f36ffc2RequestWithBody generates requests for N4699ffbb7d6e58581fd0b0a14f36ffc2 with any type of body
func NewN4699ffbb7d6e58581fd0b0a14f36ffc2RequestWithBody(server string, uuid string, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "uuid", runtime.ParamLocationPath, uuid)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/applications/%s/envs", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("POST", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	return req, nil
}

// NewAe96f0f585ed158b2abd2d9ba40f3cf9Request calls the generic Ae96f0f585ed158b2abd2d9ba40f3cf9 builder with application/json body
func NewAe96f0f585ed158b2abd2d9ba40f3cf9Request(server string, uuid string, body Ae96f0f585ed158b2abd2d9ba40f3cf9JSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewAe96f0f585ed158b2abd2d9ba40f3cf9RequestWithBody(server, uuid, "application/json", bodyReader)
}

// NewAe96f0f585ed158b2abd2d9ba40f3cf9RequestWithBody generates requests for Ae96f0f585ed158b2abd2d9ba40f3cf9 with any type of body
func NewAe96f0f585ed158b2abd2d9ba40f3cf9RequestWithBody(server string, uuid string, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "uuid", runtime.ParamLocationPath, uuid)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/applications/%s/envs/bulk", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("PATCH", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	return req, nil
}

// NewN96097c5cfc7dc0e7a3de229645f630c7Request generates requests for N96097c5cfc7dc0e7a3de229645f630c7
func NewN96097c5cfc7dc0e7a3de229645f630c7Request(server string, uuid string, envUuid string) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "uuid", runtime.ParamLocationPath, uuid)
	if err != nil {
		return nil, err
	}

	var pathParam1 string

	pathParam1, err = runtime.StyleParamWithLocation("simple", false, "env_uuid", runtime.ParamLocationPath, envUuid)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/applications/%s/envs/%s", pathParam0, pathParam1)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("DELETE", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewB231ae7baab9ef47f0627be820e735bcRequest generates requests for B231ae7baab9ef47f0627be820e735bc
func NewB231ae7baab9ef47f0627be820e735bcRequest(server string, uuid string) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "uuid", runtime.ParamLocationPath, uuid)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/applications/%s/restart", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewDc87c2061ab303757a0e061f87900c4cRequest generates requests for Dc87c2061ab303757a0e061f87900c4c
func NewDc87c2061ab303757a0e061f87900c4cRequest(server string, uuid string, params *Dc87c2061ab303757a0e061f87900c4cParams) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "uuid", runtime.ParamLocationPath, uuid)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/applications/%s/start", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	if params != nil {
		queryValues := queryURL.Query()

		if params.Force != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "force", runtime.ParamLocationQuery, *params.Force); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.InstantDeploy != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "instant_deploy", runtime.ParamLocationQuery, *params.InstantDeploy); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		queryURL.RawQuery = queryValues.Encode()
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewN133ef3c7bd5043901f24bb5002a536ebRequest generates requests for N133ef3c7bd5043901f24bb5002a536eb
func NewN133ef3c7bd5043901f24bb5002a536ebRequest(server string, uuid string) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "uuid", runtime.ParamLocationPath, uuid)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/applications/%s/stop", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewEcd0ee1e46e4c854c18e6c9daa3d37f3Request generates requests for Ecd0ee1e46e4c854c18e6c9daa3d37f3
func NewEcd0ee1e46e4c854c18e6c9daa3d37f3Request(server string) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/databases")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewA1189fa7f956f238f0e95c9150ff57f6Request calls the generic A1189fa7f956f238f0e95c9150ff57f6 builder with application/json body
func NewA1189fa7f956f238f0e95c9150ff57f6Request(server string, body A1189fa7f956f238f0e95c9150ff57f6JSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewA1189fa7f956f238f0e95c9150ff57f6RequestWithBody(server, "application/json", bodyReader)
}

// NewA1189fa7f956f238f0e95c9150ff57f6RequestWithBody generates requests for A1189fa7f956f238f0e95c9150ff57f6 with any type of body
func NewA1189fa7f956f238f0e95c9150ff57f6RequestWithBody(server string, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/databases/clickhouse")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("POST", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	return req, nil
}

// NewE73f7de1c8eee4219e5ec98c4b9b7efeRequest calls the generic E73f7de1c8eee4219e5ec98c4b9b7efe builder with application/json body
func NewE73f7de1c8eee4219e5ec98c4b9b7efeRequest(server string, body E73f7de1c8eee4219e5ec98c4b9b7efeJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewE73f7de1c8eee4219e5ec98c4b9b7efeRequestWithBody(server, "application/json", bodyReader)
}

// NewE73f7de1c8eee4219e5ec98c4b9b7efeRequestWithBody generates requests for E73f7de1c8eee4219e5ec98c4b9b7efe with any type of body
func NewE73f7de1c8eee4219e5ec98c4b9b7efeRequestWithBody(server string, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/databases/dragonfly")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("POST", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	return req, nil
}

// NewB908f3929c371c217d489638e0a21ff6Request calls the generic B908f3929c371c217d489638e0a21ff6 builder with application/json body
func NewB908f3929c371c217d489638e0a21ff6Request(server string, body B908f3929c371c217d489638e0a21ff6JSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewB908f3929c371c217d489638e0a21ff6RequestWithBody(server, "application/json", bodyReader)
}

// NewB908f3929c371c217d489638e0a21ff6RequestWithBody generates requests for B908f3929c371c217d489638e0a21ff6 with any type of body
func NewB908f3929c371c217d489638e0a21ff6RequestWithBody(server string, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/databases/keydb")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("POST", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	return req, nil
}

// NewN6bea521ddcd738dcbb5f3783a7308acfRequest calls the generic N6bea521ddcd738dcbb5f3783a7308acf builder with application/json body
func NewN6bea521ddcd738dcbb5f3783a7308acfRequest(server string, body N6bea521ddcd738dcbb5f3783a7308acfJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewN6bea521ddcd738dcbb5f3783a7308acfRequestWithBody(server, "application/json", bodyReader)
}

// NewN6bea521ddcd738dcbb5f3783a7308acfRequestWithBody generates requests for N6bea521ddcd738dcbb5f3783a7308acf with any type of body
func NewN6bea521ddcd738dcbb5f3783a7308acfRequestWithBody(server string, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/databases/mariadb")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("POST", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	return req, nil
}

// NewFdba3de84d02519bb37599fea34b115dRequest calls the generic Fdba3de84d02519bb37599fea34b115d builder with application/json body
func NewFdba3de84d02519bb37599fea34b115dRequest(server string, body Fdba3de84d02519bb37599fea34b115dJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewFdba3de84d02519bb37599fea34b115dRequestWithBody(server, "application/json", bodyReader)
}

// NewFdba3de84d02519bb37599fea34b115dRequestWithBody generates requests for Fdba3de84d02519bb37599fea34b115d with any type of body
func NewFdba3de84d02519bb37599fea34b115dRequestWithBody(server string, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/databases/mongodb")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("POST", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	return req, nil
}

// NewN0a1158cf759c4493cbb1e30024c60623Request calls the generic N0a1158cf759c4493cbb1e30024c60623 builder with application/json body
func NewN0a1158cf759c4493cbb1e30024c60623Request(server string, body N0a1158cf759c4493cbb1e30024c60623JSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewN0a1158cf759c4493cbb1e30024c60623RequestWithBody(server, "application/json", bodyReader)
}

// NewN0a1158cf759c4493cbb1e30024c60623RequestWithBody generates requests for N0a1158cf759c4493cbb1e30024c60623 with any type of body
func NewN0a1158cf759c4493cbb1e30024c60623RequestWithBody(server string, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/databases/mysql")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("POST", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	return req, nil
}

// NewN8f7f491ddc46a9fa065b4424512231cdRequest calls the generic N8f7f491ddc46a9fa065b4424512231cd builder with application/json body
func NewN8f7f491ddc46a9fa065b4424512231cdRequest(server string, body N8f7f491ddc46a9fa065b4424512231cdJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewN8f7f491ddc46a9fa065b4424512231cdRequestWithBody(server, "application/json", bodyReader)
}

// NewN8f7f491ddc46a9fa065b4424512231cdRequestWithBody generates requests for N8f7f491ddc46a9fa065b4424512231cd with any type of body
func NewN8f7f491ddc46a9fa065b4424512231cdRequestWithBody(server string, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/databases/postgresql")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("POST", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	return req, nil
}

// NewN4d352d13544ee2953fd48ad7b0651098Request calls the generic N4d352d13544ee2953fd48ad7b0651098 builder with application/json body
func NewN4d352d13544ee2953fd48ad7b0651098Request(server string, body N4d352d13544ee2953fd48ad7b0651098JSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewN4d352d13544ee2953fd48ad7b0651098RequestWithBody(server, "application/json", bodyReader)
}

// NewN4d352d13544ee2953fd48ad7b0651098RequestWithBody generates requests for N4d352d13544ee2953fd48ad7b0651098 with any type of body
func NewN4d352d13544ee2953fd48ad7b0651098RequestWithBody(server string, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/databases/redis")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("POST", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	return req, nil
}

// NewN20610931b2bae8aba34eee68624ab673Request generates requests for N20610931b2bae8aba34eee68624ab673
func NewN20610931b2bae8aba34eee68624ab673Request(server string, uuid string, params *N20610931b2bae8aba34eee68624ab673Params) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "uuid", runtime.ParamLocationPath, uuid)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/databases/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	if params != nil {
		queryValues := queryURL.Query()

		if params.Cleanup != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "cleanup", runtime.ParamLocationQuery, *params.Cleanup); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		queryURL.RawQuery = queryValues.Encode()
	}

	req, err := http.NewRequest("DELETE", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewB49cb2d3e8f34c4e80cdffd8a201031dRequest generates requests for B49cb2d3e8f34c4e80cdffd8a201031d
func NewB49cb2d3e8f34c4e80cdffd8a201031dRequest(server string, uuid string) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "uuid", runtime.ParamLocationPath, uuid)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/databases/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewN5ba459ed390a721711a1708760e9de3bRequest calls the generic N5ba459ed390a721711a1708760e9de3b builder with application/json body
func NewN5ba459ed390a721711a1708760e9de3bRequest(server string, uuid string, body N5ba459ed390a721711a1708760e9de3bJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewN5ba459ed390a721711a1708760e9de3bRequestWithBody(server, uuid, "application/json", bodyReader)
}

// NewN5ba459ed390a721711a1708760e9de3bRequestWithBody generates requests for N5ba459ed390a721711a1708760e9de3b with any type of body
func NewN5ba459ed390a721711a1708760e9de3bRequestWithBody(server string, uuid string, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "uuid", runtime.ParamLocationPath, uuid)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/databases/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("PATCH", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	return req, nil
}

// NewN04c7a5e4752b4a00036addb433f3f218Request generates requests for N04c7a5e4752b4a00036addb433f3f218
func NewN04c7a5e4752b4a00036addb433f3f218Request(server string, uuid string) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "uuid", runtime.ParamLocationPath, uuid)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/databases/%s/restart", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewN4c6eb21e734d411e2b3388578761123dRequest generates requests for N4c6eb21e734d411e2b3388578761123d
func NewN4c6eb21e734d411e2b3388578761123dRequest(server string, uuid string) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "uuid", runtime.ParamLocationPath, uuid)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/databases/%s/start", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewCb6d983c2679aff841c7501ce612a372Request generates requests for Cb6d983c2679aff841c7501ce612a372
func NewCb6d983c2679aff841c7501ce612a372Request(server string, uuid string) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "uuid", runtime.ParamLocationPath, uuid)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/databases/%s/stop", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewN700eb6e51f4c9e86d722f600c65ed1d4Request generates requests for N700eb6e51f4c9e86d722f600c65ed1d4
func NewN700eb6e51f4c9e86d722f600c65ed1d4Request(server string, params *N700eb6e51f4c9e86d722f600c65ed1d4Params) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/deploy")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	if params != nil {
		queryValues := queryURL.Query()

		if params.Tag != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "tag", runtime.ParamLocationQuery, *params.Tag); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.Uuid != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "uuid", runtime.ParamLocationQuery, *params.Uuid); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.Force != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "force", runtime.ParamLocationQuery, *params.Force); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		queryURL.RawQuery = queryValues.Encode()
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewA2c05736269191ad0d99cadfd4708986Request generates requests for A2c05736269191ad0d99cadfd4708986
func NewA2c05736269191ad0d99cadfd4708986Request(server string) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/deployments")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewCcf9856174c115a1430d952ccbd36aeaRequest generates requests for Ccf9856174c115a1430d952ccbd36aea
func NewCcf9856174c115a1430d952ccbd36aeaRequest(server string, uuid string) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "uuid", runtime.ParamLocationPath, uuid)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/deployments/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewN50e2486a2d196a996b24a284a283bcdbRequest generates requests for N50e2486a2d196a996b24a284a283bcdb
func NewN50e2486a2d196a996b24a284a283bcdbRequest(server string) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/disable")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewN595019bae03d08277def667609779ff3Request generates requests for N595019bae03d08277def667609779ff3
func NewN595019bae03d08277def667609779ff3Request(server string) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/enable")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewN64db893135e686704bb88c3c238022c1Request generates requests for N64db893135e686704bb88c3c238022c1
func NewN64db893135e686704bb88c3c238022c1Request(server string) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/healthcheck")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewN762788f00f2dabb981df9adbc948d3f6Request generates requests for N762788f00f2dabb981df9adbc948d3f6
func NewN762788f00f2dabb981df9adbc948d3f6Request(server string) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/projects")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewCf067eb7cf18216cda3239329a2eeadbRequest calls the generic Cf067eb7cf18216cda3239329a2eeadb builder with application/json body
func NewCf067eb7cf18216cda3239329a2eeadbRequest(server string, body Cf067eb7cf18216cda3239329a2eeadbJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewCf067eb7cf18216cda3239329a2eeadbRequestWithBody(server, "application/json", bodyReader)
}

// NewCf067eb7cf18216cda3239329a2eeadbRequestWithBody generates requests for Cf067eb7cf18216cda3239329a2eeadb with any type of body
func NewCf067eb7cf18216cda3239329a2eeadbRequestWithBody(server string, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/projects")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("POST", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	return req, nil
}

// NewF668a936f505b4401948c74b6a663029Request generates requests for F668a936f505b4401948c74b6a663029
func NewF668a936f505b4401948c74b6a663029Request(server string, uuid string) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "uuid", runtime.ParamLocationPath, uuid)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/projects/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("DELETE", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewN63bf8b6a68fbb757f09ab519331f6298Request generates requests for N63bf8b6a68fbb757f09ab519331f6298
func NewN63bf8b6a68fbb757f09ab519331f6298Request(server string, uuid string) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "uuid", runtime.ParamLocationPath, uuid)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/projects/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewN2db343bd6fc14c658cb51a2b73b2f842Request calls the generic N2db343bd6fc14c658cb51a2b73b2f842 builder with application/json body
func NewN2db343bd6fc14c658cb51a2b73b2f842Request(server string, uuid string, body N2db343bd6fc14c658cb51a2b73b2f842JSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewN2db343bd6fc14c658cb51a2b73b2f842RequestWithBody(server, uuid, "application/json", bodyReader)
}

// NewN2db343bd6fc14c658cb51a2b73b2f842RequestWithBody generates requests for N2db343bd6fc14c658cb51a2b73b2f842 with any type of body
func NewN2db343bd6fc14c658cb51a2b73b2f842RequestWithBody(server string, uuid string, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "uuid", runtime.ParamLocationPath, uuid)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/projects/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("PATCH", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	return req, nil
}

// NewN7e44845dce5aa47ed7b0daf5595ad2e1Request generates requests for N7e44845dce5aa47ed7b0daf5595ad2e1
func NewN7e44845dce5aa47ed7b0daf5595ad2e1Request(server string, uuid string, environmentName string) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "uuid", runtime.ParamLocationPath, uuid)
	if err != nil {
		return nil, err
	}

	var pathParam1 string

	pathParam1, err = runtime.StyleParamWithLocation("simple", false, "environment_name", runtime.ParamLocationPath, environmentName)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/projects/%s/%s", pathParam0, pathParam1)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewC399903694eb1314596832e49f7c66d7Request generates requests for C399903694eb1314596832e49f7c66d7
func NewC399903694eb1314596832e49f7c66d7Request(server string) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/resources")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewN8a5d8d3ccbbcef54ed0e913a27faea9dRequest generates requests for N8a5d8d3ccbbcef54ed0e913a27faea9d
func NewN8a5d8d3ccbbcef54ed0e913a27faea9dRequest(server string) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/security/keys")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewEb4780acaa990c594cdbe8ffa80b4fb0Request calls the generic Eb4780acaa990c594cdbe8ffa80b4fb0 builder with application/json body
func NewEb4780acaa990c594cdbe8ffa80b4fb0Request(server string, body Eb4780acaa990c594cdbe8ffa80b4fb0JSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewEb4780acaa990c594cdbe8ffa80b4fb0RequestWithBody(server, "application/json", bodyReader)
}

// NewEb4780acaa990c594cdbe8ffa80b4fb0RequestWithBody generates requests for Eb4780acaa990c594cdbe8ffa80b4fb0 with any type of body
func NewEb4780acaa990c594cdbe8ffa80b4fb0RequestWithBody(server string, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/security/keys")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("POST", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	return req, nil
}

// NewN8faa0bb399142f0084dfc3e003c42cf6Request generates requests for N8faa0bb399142f0084dfc3e003c42cf6
func NewN8faa0bb399142f0084dfc3e003c42cf6Request(server string, uuid string) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "uuid", runtime.ParamLocationPath, uuid)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/security/keys/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("DELETE", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewN2f743a85eb65d5ddb8cd5b362bb3d26aRequest generates requests for N2f743a85eb65d5ddb8cd5b362bb3d26a
func NewN2f743a85eb65d5ddb8cd5b362bb3d26aRequest(server string, uuid string) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "uuid", runtime.ParamLocationPath, uuid)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/security/keys/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewN9feff464b78c24957ed3173324c9cd14Request calls the generic N9feff464b78c24957ed3173324c9cd14 builder with application/json body
func NewN9feff464b78c24957ed3173324c9cd14Request(server string, uuid string, body N9feff464b78c24957ed3173324c9cd14JSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewN9feff464b78c24957ed3173324c9cd14RequestWithBody(server, uuid, "application/json", bodyReader)
}

// NewN9feff464b78c24957ed3173324c9cd14RequestWithBody generates requests for N9feff464b78c24957ed3173324c9cd14 with any type of body
func NewN9feff464b78c24957ed3173324c9cd14RequestWithBody(server string, uuid string, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "uuid", runtime.ParamLocationPath, uuid)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/security/keys/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("PATCH", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	return req, nil
}

// NewN787448df856cefd2d9a313566be30d34Request generates requests for N787448df856cefd2d9a313566be30d34
func NewN787448df856cefd2d9a313566be30d34Request(server string) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/servers")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewFa44b42490379e428ba5b8747716a8d9Request calls the generic Fa44b42490379e428ba5b8747716a8d9 builder with application/json body
func NewFa44b42490379e428ba5b8747716a8d9Request(server string, body Fa44b42490379e428ba5b8747716a8d9JSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewFa44b42490379e428ba5b8747716a8d9RequestWithBody(server, "application/json", bodyReader)
}

// NewFa44b42490379e428ba5b8747716a8d9RequestWithBody generates requests for Fa44b42490379e428ba5b8747716a8d9 with any type of body
func NewFa44b42490379e428ba5b8747716a8d9RequestWithBody(server string, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/servers")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("POST", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	return req, nil
}

// NewN0231fe0134f0306b21f006ce51b0a3dcRequest generates requests for N0231fe0134f0306b21f006ce51b0a3dc
func NewN0231fe0134f0306b21f006ce51b0a3dcRequest(server string, uuid string) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "uuid", runtime.ParamLocationPath, uuid)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/servers/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("DELETE", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewN5baf04bddb8302c7e07f5b4c41aad10cRequest generates requests for N5baf04bddb8302c7e07f5b4c41aad10c
func NewN5baf04bddb8302c7e07f5b4c41aad10cRequest(server string, uuid string) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "uuid", runtime.ParamLocationPath, uuid)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/servers/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewN41bbdaf79eb1938592494fc5494442a0Request calls the generic N41bbdaf79eb1938592494fc5494442a0 builder with application/json body
func NewN41bbdaf79eb1938592494fc5494442a0Request(server string, uuid string, body N41bbdaf79eb1938592494fc5494442a0JSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewN41bbdaf79eb1938592494fc5494442a0RequestWithBody(server, uuid, "application/json", bodyReader)
}

// NewN41bbdaf79eb1938592494fc5494442a0RequestWithBody generates requests for N41bbdaf79eb1938592494fc5494442a0 with any type of body
func NewN41bbdaf79eb1938592494fc5494442a0RequestWithBody(server string, uuid string, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "uuid", runtime.ParamLocationPath, uuid)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/servers/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("PATCH", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	return req, nil
}

// NewN1ee227755be848d572f412272f53dd93Request generates requests for N1ee227755be848d572f412272f53dd93
func NewN1ee227755be848d572f412272f53dd93Request(server string, uuid string) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "uuid", runtime.ParamLocationPath, uuid)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/servers/%s/domains", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewCef26c059941b44fbd8de3a7a58c10a5Request generates requests for Cef26c059941b44fbd8de3a7a58c10a5
func NewCef26c059941b44fbd8de3a7a58c10a5Request(server string, uuid string) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "uuid", runtime.ParamLocationPath, uuid)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/servers/%s/resources", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewA543a12ef2cbc7a3dd22c3dbe6cbee89Request generates requests for A543a12ef2cbc7a3dd22c3dbe6cbee89
func NewA543a12ef2cbc7a3dd22c3dbe6cbee89Request(server string, uuid string) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "uuid", runtime.ParamLocationPath, uuid)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/servers/%s/validate", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewN5d014ac25d33391b8f4c2316060ba452Request generates requests for N5d014ac25d33391b8f4c2316060ba452
func NewN5d014ac25d33391b8f4c2316060ba452Request(server string) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/services")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewN3d6cbfb54d919b53ba3984a113e837d7Request calls the generic N3d6cbfb54d919b53ba3984a113e837d7 builder with application/json body
func NewN3d6cbfb54d919b53ba3984a113e837d7Request(server string, body N3d6cbfb54d919b53ba3984a113e837d7JSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewN3d6cbfb54d919b53ba3984a113e837d7RequestWithBody(server, "application/json", bodyReader)
}

// NewN3d6cbfb54d919b53ba3984a113e837d7RequestWithBody generates requests for N3d6cbfb54d919b53ba3984a113e837d7 with any type of body
func NewN3d6cbfb54d919b53ba3984a113e837d7RequestWithBody(server string, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/services")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("POST", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	return req, nil
}

// NewN6e1a61e4fddaa9d95bb9fc66dfaf0442Request generates requests for N6e1a61e4fddaa9d95bb9fc66dfaf0442
func NewN6e1a61e4fddaa9d95bb9fc66dfaf0442Request(server string, uuid string) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "uuid", runtime.ParamLocationPath, uuid)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/services/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("DELETE", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewN895d39ee2cb3994285de57256c2d428dRequest generates requests for N895d39ee2cb3994285de57256c2d428d
func NewN895d39ee2cb3994285de57256c2d428dRequest(server string, uuid string) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "uuid", runtime.ParamLocationPath, uuid)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/services/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewN836645faa615b75052759dae78639469Request generates requests for N836645faa615b75052759dae78639469
func NewN836645faa615b75052759dae78639469Request(server string, uuid string) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "uuid", runtime.ParamLocationPath, uuid)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/services/%s/restart", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewD2ddd9c028d123fbdec830dc4b25b4cbRequest generates requests for D2ddd9c028d123fbdec830dc4b25b4cb
func NewD2ddd9c028d123fbdec830dc4b25b4cbRequest(server string, uuid string) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "uuid", runtime.ParamLocationPath, uuid)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/services/%s/start", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewN87399d34758ce16830740c68626614dbRequest generates requests for N87399d34758ce16830740c68626614db
func NewN87399d34758ce16830740c68626614dbRequest(server string, uuid string) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "uuid", runtime.ParamLocationPath, uuid)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/services/%s/stop", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewF9c530b5b25df9601cb87d6a58646f0aRequest generates requests for F9c530b5b25df9601cb87d6a58646f0a
func NewF9c530b5b25df9601cb87d6a58646f0aRequest(server string) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/teams")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewN6a4ec9fed1aad7b0b38356c47d7ac509Request generates requests for N6a4ec9fed1aad7b0b38356c47d7ac509
func NewN6a4ec9fed1aad7b0b38356c47d7ac509Request(server string) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/teams/current")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewN97e636a5796dbe71afb0bbcf1eec6e41Request generates requests for N97e636a5796dbe71afb0bbcf1eec6e41
func NewN97e636a5796dbe71afb0bbcf1eec6e41Request(server string) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/teams/current/members")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewAc57ff546c002032cef44602c46a4e76Request generates requests for Ac57ff546c002032cef44602c46a4e76
func NewAc57ff546c002032cef44602c46a4e76Request(server string, id int) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "id", runtime.ParamLocationPath, id)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/teams/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewN7858f5a45d9ea55184c182852a7f0f6cRequest generates requests for N7858f5a45d9ea55184c182852a7f0f6c
func NewN7858f5a45d9ea55184c182852a7f0f6cRequest(server string, id int) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "id", runtime.ParamLocationPath, id)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/teams/%s/members", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewN187b37139844731110757711ee71c215Request generates requests for N187b37139844731110757711ee71c215
func NewN187b37139844731110757711ee71c215Request(server string) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/version")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

func (c *Client) applyEditors(ctx context.Context, req *http.Request, additionalEditors []RequestEditorFn) error {
	for _, r := range c.RequestEditors {
		if err := r(ctx, req); err != nil {
			return err
		}
	}
	for _, r := range additionalEditors {
		if err := r(ctx, req); err != nil {
			return err
		}
	}
	return nil
}

// ClientWithResponses builds on ClientInterface to offer response payloads
type ClientWithResponses struct {
	ClientInterface
}

// NewClientWithResponses creates a new ClientWithResponses, which wraps
// Client with return type handling
func NewClientWithResponses(server string, opts ...ClientOption) (*ClientWithResponses, error) {
	client, err := NewClient(server, opts...)
	if err != nil {
		return nil, err
	}
	return &ClientWithResponses{client}, nil
}

// WithBaseURL overrides the baseURL.
func WithBaseURL(baseURL string) ClientOption {
	return func(c *Client) error {
		newBaseURL, err := url.Parse(baseURL)
		if err != nil {
			return err
		}
		c.Server = newBaseURL.String()
		return nil
	}
}

// ClientWithResponsesInterface is the interface specification for the client with responses above.
type ClientWithResponsesInterface interface {
	// N02978e79fc0b54d573b2359f2a1f7d86WithResponse request
	N02978e79fc0b54d573b2359f2a1f7d86WithResponse(ctx context.Context, reqEditors ...RequestEditorFn) (*N02978e79fc0b54d573b2359f2a1f7d86Response, error)

	// N3731add8226c2d664455978cac46c242WithBodyWithResponse request with any body
	N3731add8226c2d664455978cac46c242WithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*N3731add8226c2d664455978cac46c242Response, error)

	N3731add8226c2d664455978cac46c242WithResponse(ctx context.Context, body N3731add8226c2d664455978cac46c242JSONRequestBody, reqEditors ...RequestEditorFn) (*N3731add8226c2d664455978cac46c242Response, error)

	// N2b433ad6f5d259eb7f4f3b5af9913708WithBodyWithResponse request with any body
	N2b433ad6f5d259eb7f4f3b5af9913708WithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*N2b433ad6f5d259eb7f4f3b5af9913708Response, error)

	N2b433ad6f5d259eb7f4f3b5af9913708WithResponse(ctx context.Context, body N2b433ad6f5d259eb7f4f3b5af9913708JSONRequestBody, reqEditors ...RequestEditorFn) (*N2b433ad6f5d259eb7f4f3b5af9913708Response, error)

	// E9a2d6dd9404acf880dc3053f09477fcWithBodyWithResponse request with any body
	E9a2d6dd9404acf880dc3053f09477fcWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*E9a2d6dd9404acf880dc3053f09477fcResponse, error)

	E9a2d6dd9404acf880dc3053f09477fcWithResponse(ctx context.Context, body E9a2d6dd9404acf880dc3053f09477fcJSONRequestBody, reqEditors ...RequestEditorFn) (*E9a2d6dd9404acf880dc3053f09477fcResponse, error)

	// E3eaa989ffb05366247a00cdfd551efaWithBodyWithResponse request with any body
	E3eaa989ffb05366247a00cdfd551efaWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*E3eaa989ffb05366247a00cdfd551efaResponse, error)

	E3eaa989ffb05366247a00cdfd551efaWithResponse(ctx context.Context, body E3eaa989ffb05366247a00cdfd551efaJSONRequestBody, reqEditors ...RequestEditorFn) (*E3eaa989ffb05366247a00cdfd551efaResponse, error)

	// N4d46c84bda4f1a411f6dda15fce4061fWithBodyWithResponse request with any body
	N4d46c84bda4f1a411f6dda15fce4061fWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*N4d46c84bda4f1a411f6dda15fce4061fResponse, error)

	N4d46c84bda4f1a411f6dda15fce4061fWithResponse(ctx context.Context, body N4d46c84bda4f1a411f6dda15fce4061fJSONRequestBody, reqEditors ...RequestEditorFn) (*N4d46c84bda4f1a411f6dda15fce4061fResponse, error)

	// Cb56324ad19693469b4461d3f6065a5bWithBodyWithResponse request with any body
	Cb56324ad19693469b4461d3f6065a5bWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*Cb56324ad19693469b4461d3f6065a5bResponse, error)

	Cb56324ad19693469b4461d3f6065a5bWithResponse(ctx context.Context, body Cb56324ad19693469b4461d3f6065a5bJSONRequestBody, reqEditors ...RequestEditorFn) (*Cb56324ad19693469b4461d3f6065a5bResponse, error)

	// N1e110b190a1045d34f3e1c61608a8702WithResponse request
	N1e110b190a1045d34f3e1c61608a8702WithResponse(ctx context.Context, uuid string, params *N1e110b190a1045d34f3e1c61608a8702Params, reqEditors ...RequestEditorFn) (*N1e110b190a1045d34f3e1c61608a8702Response, error)

	// N3630b62c28e7358e7f0087c1d8fe1845WithResponse request
	N3630b62c28e7358e7f0087c1d8fe1845WithResponse(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*N3630b62c28e7358e7f0087c1d8fe1845Response, error)

	// N62a3b1775e8cba5d39a236ebb69830b7WithBodyWithResponse request with any body
	N62a3b1775e8cba5d39a236ebb69830b7WithBodyWithResponse(ctx context.Context, uuid string, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*N62a3b1775e8cba5d39a236ebb69830b7Response, error)

	N62a3b1775e8cba5d39a236ebb69830b7WithResponse(ctx context.Context, uuid string, body N62a3b1775e8cba5d39a236ebb69830b7JSONRequestBody, reqEditors ...RequestEditorFn) (*N62a3b1775e8cba5d39a236ebb69830b7Response, error)

	// N7c8e0c286870e23294a075cc0584df2fWithResponse request
	N7c8e0c286870e23294a075cc0584df2fWithResponse(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*N7c8e0c286870e23294a075cc0584df2fResponse, error)

	// N3d70a2d569f395be220b3f09ad36674bWithBodyWithResponse request with any body
	N3d70a2d569f395be220b3f09ad36674bWithBodyWithResponse(ctx context.Context, uuid string, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*N3d70a2d569f395be220b3f09ad36674bResponse, error)

	N3d70a2d569f395be220b3f09ad36674bWithResponse(ctx context.Context, uuid string, body N3d70a2d569f395be220b3f09ad36674bJSONRequestBody, reqEditors ...RequestEditorFn) (*N3d70a2d569f395be220b3f09ad36674bResponse, error)

	// N4699ffbb7d6e58581fd0b0a14f36ffc2WithBodyWithResponse request with any body
	N4699ffbb7d6e58581fd0b0a14f36ffc2WithBodyWithResponse(ctx context.Context, uuid string, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*N4699ffbb7d6e58581fd0b0a14f36ffc2Response, error)

	N4699ffbb7d6e58581fd0b0a14f36ffc2WithResponse(ctx context.Context, uuid string, body N4699ffbb7d6e58581fd0b0a14f36ffc2JSONRequestBody, reqEditors ...RequestEditorFn) (*N4699ffbb7d6e58581fd0b0a14f36ffc2Response, error)

	// Ae96f0f585ed158b2abd2d9ba40f3cf9WithBodyWithResponse request with any body
	Ae96f0f585ed158b2abd2d9ba40f3cf9WithBodyWithResponse(ctx context.Context, uuid string, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*Ae96f0f585ed158b2abd2d9ba40f3cf9Response, error)

	Ae96f0f585ed158b2abd2d9ba40f3cf9WithResponse(ctx context.Context, uuid string, body Ae96f0f585ed158b2abd2d9ba40f3cf9JSONRequestBody, reqEditors ...RequestEditorFn) (*Ae96f0f585ed158b2abd2d9ba40f3cf9Response, error)

	// N96097c5cfc7dc0e7a3de229645f630c7WithResponse request
	N96097c5cfc7dc0e7a3de229645f630c7WithResponse(ctx context.Context, uuid string, envUuid string, reqEditors ...RequestEditorFn) (*N96097c5cfc7dc0e7a3de229645f630c7Response, error)

	// B231ae7baab9ef47f0627be820e735bcWithResponse request
	B231ae7baab9ef47f0627be820e735bcWithResponse(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*B231ae7baab9ef47f0627be820e735bcResponse, error)

	// Dc87c2061ab303757a0e061f87900c4cWithResponse request
	Dc87c2061ab303757a0e061f87900c4cWithResponse(ctx context.Context, uuid string, params *Dc87c2061ab303757a0e061f87900c4cParams, reqEditors ...RequestEditorFn) (*Dc87c2061ab303757a0e061f87900c4cResponse, error)

	// N133ef3c7bd5043901f24bb5002a536ebWithResponse request
	N133ef3c7bd5043901f24bb5002a536ebWithResponse(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*N133ef3c7bd5043901f24bb5002a536ebResponse, error)

	// Ecd0ee1e46e4c854c18e6c9daa3d37f3WithResponse request
	Ecd0ee1e46e4c854c18e6c9daa3d37f3WithResponse(ctx context.Context, reqEditors ...RequestEditorFn) (*Ecd0ee1e46e4c854c18e6c9daa3d37f3Response, error)

	// A1189fa7f956f238f0e95c9150ff57f6WithBodyWithResponse request with any body
	A1189fa7f956f238f0e95c9150ff57f6WithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*A1189fa7f956f238f0e95c9150ff57f6Response, error)

	A1189fa7f956f238f0e95c9150ff57f6WithResponse(ctx context.Context, body A1189fa7f956f238f0e95c9150ff57f6JSONRequestBody, reqEditors ...RequestEditorFn) (*A1189fa7f956f238f0e95c9150ff57f6Response, error)

	// E73f7de1c8eee4219e5ec98c4b9b7efeWithBodyWithResponse request with any body
	E73f7de1c8eee4219e5ec98c4b9b7efeWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*E73f7de1c8eee4219e5ec98c4b9b7efeResponse, error)

	E73f7de1c8eee4219e5ec98c4b9b7efeWithResponse(ctx context.Context, body E73f7de1c8eee4219e5ec98c4b9b7efeJSONRequestBody, reqEditors ...RequestEditorFn) (*E73f7de1c8eee4219e5ec98c4b9b7efeResponse, error)

	// B908f3929c371c217d489638e0a21ff6WithBodyWithResponse request with any body
	B908f3929c371c217d489638e0a21ff6WithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*B908f3929c371c217d489638e0a21ff6Response, error)

	B908f3929c371c217d489638e0a21ff6WithResponse(ctx context.Context, body B908f3929c371c217d489638e0a21ff6JSONRequestBody, reqEditors ...RequestEditorFn) (*B908f3929c371c217d489638e0a21ff6Response, error)

	// N6bea521ddcd738dcbb5f3783a7308acfWithBodyWithResponse request with any body
	N6bea521ddcd738dcbb5f3783a7308acfWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*N6bea521ddcd738dcbb5f3783a7308acfResponse, error)

	N6bea521ddcd738dcbb5f3783a7308acfWithResponse(ctx context.Context, body N6bea521ddcd738dcbb5f3783a7308acfJSONRequestBody, reqEditors ...RequestEditorFn) (*N6bea521ddcd738dcbb5f3783a7308acfResponse, error)

	// Fdba3de84d02519bb37599fea34b115dWithBodyWithResponse request with any body
	Fdba3de84d02519bb37599fea34b115dWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*Fdba3de84d02519bb37599fea34b115dResponse, error)

	Fdba3de84d02519bb37599fea34b115dWithResponse(ctx context.Context, body Fdba3de84d02519bb37599fea34b115dJSONRequestBody, reqEditors ...RequestEditorFn) (*Fdba3de84d02519bb37599fea34b115dResponse, error)

	// N0a1158cf759c4493cbb1e30024c60623WithBodyWithResponse request with any body
	N0a1158cf759c4493cbb1e30024c60623WithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*N0a1158cf759c4493cbb1e30024c60623Response, error)

	N0a1158cf759c4493cbb1e30024c60623WithResponse(ctx context.Context, body N0a1158cf759c4493cbb1e30024c60623JSONRequestBody, reqEditors ...RequestEditorFn) (*N0a1158cf759c4493cbb1e30024c60623Response, error)

	// N8f7f491ddc46a9fa065b4424512231cdWithBodyWithResponse request with any body
	N8f7f491ddc46a9fa065b4424512231cdWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*N8f7f491ddc46a9fa065b4424512231cdResponse, error)

	N8f7f491ddc46a9fa065b4424512231cdWithResponse(ctx context.Context, body N8f7f491ddc46a9fa065b4424512231cdJSONRequestBody, reqEditors ...RequestEditorFn) (*N8f7f491ddc46a9fa065b4424512231cdResponse, error)

	// N4d352d13544ee2953fd48ad7b0651098WithBodyWithResponse request with any body
	N4d352d13544ee2953fd48ad7b0651098WithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*N4d352d13544ee2953fd48ad7b0651098Response, error)

	N4d352d13544ee2953fd48ad7b0651098WithResponse(ctx context.Context, body N4d352d13544ee2953fd48ad7b0651098JSONRequestBody, reqEditors ...RequestEditorFn) (*N4d352d13544ee2953fd48ad7b0651098Response, error)

	// N20610931b2bae8aba34eee68624ab673WithResponse request
	N20610931b2bae8aba34eee68624ab673WithResponse(ctx context.Context, uuid string, params *N20610931b2bae8aba34eee68624ab673Params, reqEditors ...RequestEditorFn) (*N20610931b2bae8aba34eee68624ab673Response, error)

	// B49cb2d3e8f34c4e80cdffd8a201031dWithResponse request
	B49cb2d3e8f34c4e80cdffd8a201031dWithResponse(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*B49cb2d3e8f34c4e80cdffd8a201031dResponse, error)

	// N5ba459ed390a721711a1708760e9de3bWithBodyWithResponse request with any body
	N5ba459ed390a721711a1708760e9de3bWithBodyWithResponse(ctx context.Context, uuid string, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*N5ba459ed390a721711a1708760e9de3bResponse, error)

	N5ba459ed390a721711a1708760e9de3bWithResponse(ctx context.Context, uuid string, body N5ba459ed390a721711a1708760e9de3bJSONRequestBody, reqEditors ...RequestEditorFn) (*N5ba459ed390a721711a1708760e9de3bResponse, error)

	// N04c7a5e4752b4a00036addb433f3f218WithResponse request
	N04c7a5e4752b4a00036addb433f3f218WithResponse(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*N04c7a5e4752b4a00036addb433f3f218Response, error)

	// N4c6eb21e734d411e2b3388578761123dWithResponse request
	N4c6eb21e734d411e2b3388578761123dWithResponse(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*N4c6eb21e734d411e2b3388578761123dResponse, error)

	// Cb6d983c2679aff841c7501ce612a372WithResponse request
	Cb6d983c2679aff841c7501ce612a372WithResponse(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*Cb6d983c2679aff841c7501ce612a372Response, error)

	// N700eb6e51f4c9e86d722f600c65ed1d4WithResponse request
	N700eb6e51f4c9e86d722f600c65ed1d4WithResponse(ctx context.Context, params *N700eb6e51f4c9e86d722f600c65ed1d4Params, reqEditors ...RequestEditorFn) (*N700eb6e51f4c9e86d722f600c65ed1d4Response, error)

	// A2c05736269191ad0d99cadfd4708986WithResponse request
	A2c05736269191ad0d99cadfd4708986WithResponse(ctx context.Context, reqEditors ...RequestEditorFn) (*A2c05736269191ad0d99cadfd4708986Response, error)

	// Ccf9856174c115a1430d952ccbd36aeaWithResponse request
	Ccf9856174c115a1430d952ccbd36aeaWithResponse(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*Ccf9856174c115a1430d952ccbd36aeaResponse, error)

	// N50e2486a2d196a996b24a284a283bcdbWithResponse request
	N50e2486a2d196a996b24a284a283bcdbWithResponse(ctx context.Context, reqEditors ...RequestEditorFn) (*N50e2486a2d196a996b24a284a283bcdbResponse, error)

	// N595019bae03d08277def667609779ff3WithResponse request
	N595019bae03d08277def667609779ff3WithResponse(ctx context.Context, reqEditors ...RequestEditorFn) (*N595019bae03d08277def667609779ff3Response, error)

	// N64db893135e686704bb88c3c238022c1WithResponse request
	N64db893135e686704bb88c3c238022c1WithResponse(ctx context.Context, reqEditors ...RequestEditorFn) (*N64db893135e686704bb88c3c238022c1Response, error)

	// N762788f00f2dabb981df9adbc948d3f6WithResponse request
	N762788f00f2dabb981df9adbc948d3f6WithResponse(ctx context.Context, reqEditors ...RequestEditorFn) (*N762788f00f2dabb981df9adbc948d3f6Response, error)

	// Cf067eb7cf18216cda3239329a2eeadbWithBodyWithResponse request with any body
	Cf067eb7cf18216cda3239329a2eeadbWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*Cf067eb7cf18216cda3239329a2eeadbResponse, error)

	Cf067eb7cf18216cda3239329a2eeadbWithResponse(ctx context.Context, body Cf067eb7cf18216cda3239329a2eeadbJSONRequestBody, reqEditors ...RequestEditorFn) (*Cf067eb7cf18216cda3239329a2eeadbResponse, error)

	// F668a936f505b4401948c74b6a663029WithResponse request
	F668a936f505b4401948c74b6a663029WithResponse(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*F668a936f505b4401948c74b6a663029Response, error)

	// N63bf8b6a68fbb757f09ab519331f6298WithResponse request
	N63bf8b6a68fbb757f09ab519331f6298WithResponse(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*N63bf8b6a68fbb757f09ab519331f6298Response, error)

	// N2db343bd6fc14c658cb51a2b73b2f842WithBodyWithResponse request with any body
	N2db343bd6fc14c658cb51a2b73b2f842WithBodyWithResponse(ctx context.Context, uuid string, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*N2db343bd6fc14c658cb51a2b73b2f842Response, error)

	N2db343bd6fc14c658cb51a2b73b2f842WithResponse(ctx context.Context, uuid string, body N2db343bd6fc14c658cb51a2b73b2f842JSONRequestBody, reqEditors ...RequestEditorFn) (*N2db343bd6fc14c658cb51a2b73b2f842Response, error)

	// N7e44845dce5aa47ed7b0daf5595ad2e1WithResponse request
	N7e44845dce5aa47ed7b0daf5595ad2e1WithResponse(ctx context.Context, uuid string, environmentName string, reqEditors ...RequestEditorFn) (*N7e44845dce5aa47ed7b0daf5595ad2e1Response, error)

	// C399903694eb1314596832e49f7c66d7WithResponse request
	C399903694eb1314596832e49f7c66d7WithResponse(ctx context.Context, reqEditors ...RequestEditorFn) (*C399903694eb1314596832e49f7c66d7Response, error)

	// N8a5d8d3ccbbcef54ed0e913a27faea9dWithResponse request
	N8a5d8d3ccbbcef54ed0e913a27faea9dWithResponse(ctx context.Context, reqEditors ...RequestEditorFn) (*N8a5d8d3ccbbcef54ed0e913a27faea9dResponse, error)

	// Eb4780acaa990c594cdbe8ffa80b4fb0WithBodyWithResponse request with any body
	Eb4780acaa990c594cdbe8ffa80b4fb0WithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*Eb4780acaa990c594cdbe8ffa80b4fb0Response, error)

	Eb4780acaa990c594cdbe8ffa80b4fb0WithResponse(ctx context.Context, body Eb4780acaa990c594cdbe8ffa80b4fb0JSONRequestBody, reqEditors ...RequestEditorFn) (*Eb4780acaa990c594cdbe8ffa80b4fb0Response, error)

	// N8faa0bb399142f0084dfc3e003c42cf6WithResponse request
	N8faa0bb399142f0084dfc3e003c42cf6WithResponse(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*N8faa0bb399142f0084dfc3e003c42cf6Response, error)

	// N2f743a85eb65d5ddb8cd5b362bb3d26aWithResponse request
	N2f743a85eb65d5ddb8cd5b362bb3d26aWithResponse(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*N2f743a85eb65d5ddb8cd5b362bb3d26aResponse, error)

	// N9feff464b78c24957ed3173324c9cd14WithBodyWithResponse request with any body
	N9feff464b78c24957ed3173324c9cd14WithBodyWithResponse(ctx context.Context, uuid string, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*N9feff464b78c24957ed3173324c9cd14Response, error)

	N9feff464b78c24957ed3173324c9cd14WithResponse(ctx context.Context, uuid string, body N9feff464b78c24957ed3173324c9cd14JSONRequestBody, reqEditors ...RequestEditorFn) (*N9feff464b78c24957ed3173324c9cd14Response, error)

	// N787448df856cefd2d9a313566be30d34WithResponse request
	N787448df856cefd2d9a313566be30d34WithResponse(ctx context.Context, reqEditors ...RequestEditorFn) (*N787448df856cefd2d9a313566be30d34Response, error)

	// Fa44b42490379e428ba5b8747716a8d9WithBodyWithResponse request with any body
	Fa44b42490379e428ba5b8747716a8d9WithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*Fa44b42490379e428ba5b8747716a8d9Response, error)

	Fa44b42490379e428ba5b8747716a8d9WithResponse(ctx context.Context, body Fa44b42490379e428ba5b8747716a8d9JSONRequestBody, reqEditors ...RequestEditorFn) (*Fa44b42490379e428ba5b8747716a8d9Response, error)

	// N0231fe0134f0306b21f006ce51b0a3dcWithResponse request
	N0231fe0134f0306b21f006ce51b0a3dcWithResponse(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*N0231fe0134f0306b21f006ce51b0a3dcResponse, error)

	// N5baf04bddb8302c7e07f5b4c41aad10cWithResponse request
	N5baf04bddb8302c7e07f5b4c41aad10cWithResponse(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*N5baf04bddb8302c7e07f5b4c41aad10cResponse, error)

	// N41bbdaf79eb1938592494fc5494442a0WithBodyWithResponse request with any body
	N41bbdaf79eb1938592494fc5494442a0WithBodyWithResponse(ctx context.Context, uuid string, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*N41bbdaf79eb1938592494fc5494442a0Response, error)

	N41bbdaf79eb1938592494fc5494442a0WithResponse(ctx context.Context, uuid string, body N41bbdaf79eb1938592494fc5494442a0JSONRequestBody, reqEditors ...RequestEditorFn) (*N41bbdaf79eb1938592494fc5494442a0Response, error)

	// N1ee227755be848d572f412272f53dd93WithResponse request
	N1ee227755be848d572f412272f53dd93WithResponse(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*N1ee227755be848d572f412272f53dd93Response, error)

	// Cef26c059941b44fbd8de3a7a58c10a5WithResponse request
	Cef26c059941b44fbd8de3a7a58c10a5WithResponse(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*Cef26c059941b44fbd8de3a7a58c10a5Response, error)

	// A543a12ef2cbc7a3dd22c3dbe6cbee89WithResponse request
	A543a12ef2cbc7a3dd22c3dbe6cbee89WithResponse(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*A543a12ef2cbc7a3dd22c3dbe6cbee89Response, error)

	// N5d014ac25d33391b8f4c2316060ba452WithResponse request
	N5d014ac25d33391b8f4c2316060ba452WithResponse(ctx context.Context, reqEditors ...RequestEditorFn) (*N5d014ac25d33391b8f4c2316060ba452Response, error)

	// N3d6cbfb54d919b53ba3984a113e837d7WithBodyWithResponse request with any body
	N3d6cbfb54d919b53ba3984a113e837d7WithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*N3d6cbfb54d919b53ba3984a113e837d7Response, error)

	N3d6cbfb54d919b53ba3984a113e837d7WithResponse(ctx context.Context, body N3d6cbfb54d919b53ba3984a113e837d7JSONRequestBody, reqEditors ...RequestEditorFn) (*N3d6cbfb54d919b53ba3984a113e837d7Response, error)

	// N6e1a61e4fddaa9d95bb9fc66dfaf0442WithResponse request
	N6e1a61e4fddaa9d95bb9fc66dfaf0442WithResponse(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*N6e1a61e4fddaa9d95bb9fc66dfaf0442Response, error)

	// N895d39ee2cb3994285de57256c2d428dWithResponse request
	N895d39ee2cb3994285de57256c2d428dWithResponse(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*N895d39ee2cb3994285de57256c2d428dResponse, error)

	// N836645faa615b75052759dae78639469WithResponse request
	N836645faa615b75052759dae78639469WithResponse(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*N836645faa615b75052759dae78639469Response, error)

	// D2ddd9c028d123fbdec830dc4b25b4cbWithResponse request
	D2ddd9c028d123fbdec830dc4b25b4cbWithResponse(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*D2ddd9c028d123fbdec830dc4b25b4cbResponse, error)

	// N87399d34758ce16830740c68626614dbWithResponse request
	N87399d34758ce16830740c68626614dbWithResponse(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*N87399d34758ce16830740c68626614dbResponse, error)

	// F9c530b5b25df9601cb87d6a58646f0aWithResponse request
	F9c530b5b25df9601cb87d6a58646f0aWithResponse(ctx context.Context, reqEditors ...RequestEditorFn) (*F9c530b5b25df9601cb87d6a58646f0aResponse, error)

	// N6a4ec9fed1aad7b0b38356c47d7ac509WithResponse request
	N6a4ec9fed1aad7b0b38356c47d7ac509WithResponse(ctx context.Context, reqEditors ...RequestEditorFn) (*N6a4ec9fed1aad7b0b38356c47d7ac509Response, error)

	// N97e636a5796dbe71afb0bbcf1eec6e41WithResponse request
	N97e636a5796dbe71afb0bbcf1eec6e41WithResponse(ctx context.Context, reqEditors ...RequestEditorFn) (*N97e636a5796dbe71afb0bbcf1eec6e41Response, error)

	// Ac57ff546c002032cef44602c46a4e76WithResponse request
	Ac57ff546c002032cef44602c46a4e76WithResponse(ctx context.Context, id int, reqEditors ...RequestEditorFn) (*Ac57ff546c002032cef44602c46a4e76Response, error)

	// N7858f5a45d9ea55184c182852a7f0f6cWithResponse request
	N7858f5a45d9ea55184c182852a7f0f6cWithResponse(ctx context.Context, id int, reqEditors ...RequestEditorFn) (*N7858f5a45d9ea55184c182852a7f0f6cResponse, error)

	// N187b37139844731110757711ee71c215WithResponse request
	N187b37139844731110757711ee71c215WithResponse(ctx context.Context, reqEditors ...RequestEditorFn) (*N187b37139844731110757711ee71c215Response, error)
}

type N02978e79fc0b54d573b2359f2a1f7d86Response struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *[]Application
	JSON400      *N400
	JSON401      *N401
}

// Status returns HTTPResponse.Status
func (r N02978e79fc0b54d573b2359f2a1f7d86Response) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r N02978e79fc0b54d573b2359f2a1f7d86Response) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type N3731add8226c2d664455978cac46c242Response struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON400      *N400
	JSON401      *N401
}

// Status returns HTTPResponse.Status
func (r N3731add8226c2d664455978cac46c242Response) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r N3731add8226c2d664455978cac46c242Response) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type N2b433ad6f5d259eb7f4f3b5af9913708Response struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON400      *N400
	JSON401      *N401
}

// Status returns HTTPResponse.Status
func (r N2b433ad6f5d259eb7f4f3b5af9913708Response) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r N2b433ad6f5d259eb7f4f3b5af9913708Response) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type E9a2d6dd9404acf880dc3053f09477fcResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON400      *N400
	JSON401      *N401
}

// Status returns HTTPResponse.Status
func (r E9a2d6dd9404acf880dc3053f09477fcResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r E9a2d6dd9404acf880dc3053f09477fcResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type E3eaa989ffb05366247a00cdfd551efaResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON400      *N400
	JSON401      *N401
}

// Status returns HTTPResponse.Status
func (r E3eaa989ffb05366247a00cdfd551efaResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r E3eaa989ffb05366247a00cdfd551efaResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type N4d46c84bda4f1a411f6dda15fce4061fResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON400      *N400
	JSON401      *N401
}

// Status returns HTTPResponse.Status
func (r N4d46c84bda4f1a411f6dda15fce4061fResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r N4d46c84bda4f1a411f6dda15fce4061fResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type Cb56324ad19693469b4461d3f6065a5bResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON400      *N400
	JSON401      *N401
}

// Status returns HTTPResponse.Status
func (r Cb56324ad19693469b4461d3f6065a5bResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r Cb56324ad19693469b4461d3f6065a5bResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type N1e110b190a1045d34f3e1c61608a8702Response struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		Message *string `json:"message,omitempty"`
	}
	JSON400 *N400
	JSON401 *N401
	JSON404 *N404
}

// Status returns HTTPResponse.Status
func (r N1e110b190a1045d34f3e1c61608a8702Response) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r N1e110b190a1045d34f3e1c61608a8702Response) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type N3630b62c28e7358e7f0087c1d8fe1845Response struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *Application
	JSON400      *N400
	JSON401      *N401
	JSON404      *N404
}

// Status returns HTTPResponse.Status
func (r N3630b62c28e7358e7f0087c1d8fe1845Response) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r N3630b62c28e7358e7f0087c1d8fe1845Response) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type N62a3b1775e8cba5d39a236ebb69830b7Response struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		Uuid *string `json:"uuid,omitempty"`
	}
	JSON400 *N400
	JSON401 *N401
	JSON404 *N404
}

// Status returns HTTPResponse.Status
func (r N62a3b1775e8cba5d39a236ebb69830b7Response) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r N62a3b1775e8cba5d39a236ebb69830b7Response) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type N7c8e0c286870e23294a075cc0584df2fResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *[]EnvironmentVariable
	JSON400      *N400
	JSON401      *N401
	JSON404      *N404
}

// Status returns HTTPResponse.Status
func (r N7c8e0c286870e23294a075cc0584df2fResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r N7c8e0c286870e23294a075cc0584df2fResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type N3d70a2d569f395be220b3f09ad36674bResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON201      *struct {
		Message *string `json:"message,omitempty"`
	}
	JSON400 *N400
	JSON401 *N401
	JSON404 *N404
}

// Status returns HTTPResponse.Status
func (r N3d70a2d569f395be220b3f09ad36674bResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r N3d70a2d569f395be220b3f09ad36674bResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type N4699ffbb7d6e58581fd0b0a14f36ffc2Response struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON201      *struct {
		Uuid *string `json:"uuid,omitempty"`
	}
	JSON400 *N400
	JSON401 *N401
	JSON404 *N404
}

// Status returns HTTPResponse.Status
func (r N4699ffbb7d6e58581fd0b0a14f36ffc2Response) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r N4699ffbb7d6e58581fd0b0a14f36ffc2Response) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type Ae96f0f585ed158b2abd2d9ba40f3cf9Response struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON201      *struct {
		Message *string `json:"message,omitempty"`
	}
	JSON400 *N400
	JSON401 *N401
	JSON404 *N404
}

// Status returns HTTPResponse.Status
func (r Ae96f0f585ed158b2abd2d9ba40f3cf9Response) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r Ae96f0f585ed158b2abd2d9ba40f3cf9Response) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type N96097c5cfc7dc0e7a3de229645f630c7Response struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		Message *string `json:"message,omitempty"`
	}
	JSON400 *N400
	JSON401 *N401
	JSON404 *N404
}

// Status returns HTTPResponse.Status
func (r N96097c5cfc7dc0e7a3de229645f630c7Response) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r N96097c5cfc7dc0e7a3de229645f630c7Response) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type B231ae7baab9ef47f0627be820e735bcResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		// DeploymentUuid UUID of the deployment.
		DeploymentUuid *string `json:"deployment_uuid,omitempty"`
		Message        *string `json:"message,omitempty"`
	}
	JSON400 *N400
	JSON401 *N401
	JSON404 *N404
}

// Status returns HTTPResponse.Status
func (r B231ae7baab9ef47f0627be820e735bcResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r B231ae7baab9ef47f0627be820e735bcResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type Dc87c2061ab303757a0e061f87900c4cResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		// DeploymentUuid UUID of the deployment.
		DeploymentUuid *string `json:"deployment_uuid,omitempty"`

		// Message Message.
		Message *string `json:"message,omitempty"`
	}
	JSON400 *N400
	JSON401 *N401
	JSON404 *N404
}

// Status returns HTTPResponse.Status
func (r Dc87c2061ab303757a0e061f87900c4cResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r Dc87c2061ab303757a0e061f87900c4cResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type N133ef3c7bd5043901f24bb5002a536ebResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		Message *string `json:"message,omitempty"`
	}
	JSON400 *N400
	JSON401 *N401
	JSON404 *N404
}

// Status returns HTTPResponse.Status
func (r N133ef3c7bd5043901f24bb5002a536ebResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r N133ef3c7bd5043901f24bb5002a536ebResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type Ecd0ee1e46e4c854c18e6c9daa3d37f3Response struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *string
	JSON400      *N400
	JSON401      *N401
}

// Status returns HTTPResponse.Status
func (r Ecd0ee1e46e4c854c18e6c9daa3d37f3Response) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r Ecd0ee1e46e4c854c18e6c9daa3d37f3Response) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type A1189fa7f956f238f0e95c9150ff57f6Response struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON400      *N400
	JSON401      *N401
}

// Status returns HTTPResponse.Status
func (r A1189fa7f956f238f0e95c9150ff57f6Response) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r A1189fa7f956f238f0e95c9150ff57f6Response) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type E73f7de1c8eee4219e5ec98c4b9b7efeResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON400      *N400
	JSON401      *N401
}

// Status returns HTTPResponse.Status
func (r E73f7de1c8eee4219e5ec98c4b9b7efeResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r E73f7de1c8eee4219e5ec98c4b9b7efeResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type B908f3929c371c217d489638e0a21ff6Response struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON400      *N400
	JSON401      *N401
}

// Status returns HTTPResponse.Status
func (r B908f3929c371c217d489638e0a21ff6Response) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r B908f3929c371c217d489638e0a21ff6Response) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type N6bea521ddcd738dcbb5f3783a7308acfResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON400      *N400
	JSON401      *N401
}

// Status returns HTTPResponse.Status
func (r N6bea521ddcd738dcbb5f3783a7308acfResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r N6bea521ddcd738dcbb5f3783a7308acfResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type Fdba3de84d02519bb37599fea34b115dResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON400      *N400
	JSON401      *N401
}

// Status returns HTTPResponse.Status
func (r Fdba3de84d02519bb37599fea34b115dResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r Fdba3de84d02519bb37599fea34b115dResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type N0a1158cf759c4493cbb1e30024c60623Response struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON400      *N400
	JSON401      *N401
}

// Status returns HTTPResponse.Status
func (r N0a1158cf759c4493cbb1e30024c60623Response) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r N0a1158cf759c4493cbb1e30024c60623Response) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type N8f7f491ddc46a9fa065b4424512231cdResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON400      *N400
	JSON401      *N401
}

// Status returns HTTPResponse.Status
func (r N8f7f491ddc46a9fa065b4424512231cdResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r N8f7f491ddc46a9fa065b4424512231cdResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type N4d352d13544ee2953fd48ad7b0651098Response struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON400      *N400
	JSON401      *N401
}

// Status returns HTTPResponse.Status
func (r N4d352d13544ee2953fd48ad7b0651098Response) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r N4d352d13544ee2953fd48ad7b0651098Response) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type N20610931b2bae8aba34eee68624ab673Response struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		Message *string `json:"message,omitempty"`
	}
	JSON400 *N400
	JSON401 *N401
	JSON404 *N404
}

// Status returns HTTPResponse.Status
func (r N20610931b2bae8aba34eee68624ab673Response) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r N20610931b2bae8aba34eee68624ab673Response) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type B49cb2d3e8f34c4e80cdffd8a201031dResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *string
	JSON400      *N400
	JSON401      *N401
	JSON404      *N404
}

// Status returns HTTPResponse.Status
func (r B49cb2d3e8f34c4e80cdffd8a201031dResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r B49cb2d3e8f34c4e80cdffd8a201031dResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type N5ba459ed390a721711a1708760e9de3bResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON400      *N400
	JSON401      *N401
	JSON404      *N404
}

// Status returns HTTPResponse.Status
func (r N5ba459ed390a721711a1708760e9de3bResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r N5ba459ed390a721711a1708760e9de3bResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type N04c7a5e4752b4a00036addb433f3f218Response struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		Message *string `json:"message,omitempty"`
	}
	JSON400 *N400
	JSON401 *N401
	JSON404 *N404
}

// Status returns HTTPResponse.Status
func (r N04c7a5e4752b4a00036addb433f3f218Response) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r N04c7a5e4752b4a00036addb433f3f218Response) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type N4c6eb21e734d411e2b3388578761123dResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		Message *string `json:"message,omitempty"`
	}
	JSON400 *N400
	JSON401 *N401
	JSON404 *N404
}

// Status returns HTTPResponse.Status
func (r N4c6eb21e734d411e2b3388578761123dResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r N4c6eb21e734d411e2b3388578761123dResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type Cb6d983c2679aff841c7501ce612a372Response struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		Message *string `json:"message,omitempty"`
	}
	JSON400 *N400
	JSON401 *N401
	JSON404 *N404
}

// Status returns HTTPResponse.Status
func (r Cb6d983c2679aff841c7501ce612a372Response) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r Cb6d983c2679aff841c7501ce612a372Response) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type N700eb6e51f4c9e86d722f600c65ed1d4Response struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		Deployments *[]struct {
			DeploymentUuid *string `json:"deployment_uuid,omitempty"`
			Message        *string `json:"message,omitempty"`
			ResourceUuid   *string `json:"resource_uuid,omitempty"`
		} `json:"deployments,omitempty"`
	}
	JSON400 *N400
	JSON401 *N401
}

// Status returns HTTPResponse.Status
func (r N700eb6e51f4c9e86d722f600c65ed1d4Response) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r N700eb6e51f4c9e86d722f600c65ed1d4Response) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type A2c05736269191ad0d99cadfd4708986Response struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *[]ApplicationDeploymentQueue
	JSON400      *N400
	JSON401      *N401
}

// Status returns HTTPResponse.Status
func (r A2c05736269191ad0d99cadfd4708986Response) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r A2c05736269191ad0d99cadfd4708986Response) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type Ccf9856174c115a1430d952ccbd36aeaResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *ApplicationDeploymentQueue
	JSON400      *N400
	JSON401      *N401
	JSON404      *N404
}

// Status returns HTTPResponse.Status
func (r Ccf9856174c115a1430d952ccbd36aeaResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r Ccf9856174c115a1430d952ccbd36aeaResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type N50e2486a2d196a996b24a284a283bcdbResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		Message *string `json:"message,omitempty"`
	}
	JSON400 *N400
	JSON401 *N401
	JSON403 *struct {
		Message *string `json:"message,omitempty"`
	}
}

// Status returns HTTPResponse.Status
func (r N50e2486a2d196a996b24a284a283bcdbResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r N50e2486a2d196a996b24a284a283bcdbResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type N595019bae03d08277def667609779ff3Response struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		Message *string `json:"message,omitempty"`
	}
	JSON400 *N400
	JSON401 *N401
	JSON403 *struct {
		Message *string `json:"message,omitempty"`
	}
}

// Status returns HTTPResponse.Status
func (r N595019bae03d08277def667609779ff3Response) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r N595019bae03d08277def667609779ff3Response) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type N64db893135e686704bb88c3c238022c1Response struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *string
	JSON400      *N400
	JSON401      *N401
}

// Status returns HTTPResponse.Status
func (r N64db893135e686704bb88c3c238022c1Response) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r N64db893135e686704bb88c3c238022c1Response) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type N762788f00f2dabb981df9adbc948d3f6Response struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *[]Project
	JSON400      *N400
	JSON401      *N401
}

// Status returns HTTPResponse.Status
func (r N762788f00f2dabb981df9adbc948d3f6Response) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r N762788f00f2dabb981df9adbc948d3f6Response) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type Cf067eb7cf18216cda3239329a2eeadbResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON201      *struct {
		// Uuid The UUID of the project.
		Uuid *string `json:"uuid,omitempty"`
	}
	JSON400 *N400
	JSON401 *N401
	JSON404 *N404
}

// Status returns HTTPResponse.Status
func (r Cf067eb7cf18216cda3239329a2eeadbResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r Cf067eb7cf18216cda3239329a2eeadbResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type F668a936f505b4401948c74b6a663029Response struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		Message *string `json:"message,omitempty"`
	}
	JSON400 *N400
	JSON401 *N401
	JSON404 *N404
}

// Status returns HTTPResponse.Status
func (r F668a936f505b4401948c74b6a663029Response) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r F668a936f505b4401948c74b6a663029Response) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type N63bf8b6a68fbb757f09ab519331f6298Response struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *Project
	JSON400      *N400
	JSON401      *N401
}

// Status returns HTTPResponse.Status
func (r N63bf8b6a68fbb757f09ab519331f6298Response) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r N63bf8b6a68fbb757f09ab519331f6298Response) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type N2db343bd6fc14c658cb51a2b73b2f842Response struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON201      *struct {
		Description *string `json:"description,omitempty"`
		Name        *string `json:"name,omitempty"`
		Uuid        *string `json:"uuid,omitempty"`
	}
	JSON400 *N400
	JSON401 *N401
	JSON404 *N404
}

// Status returns HTTPResponse.Status
func (r N2db343bd6fc14c658cb51a2b73b2f842Response) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r N2db343bd6fc14c658cb51a2b73b2f842Response) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type N7e44845dce5aa47ed7b0daf5595ad2e1Response struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *Environment
	JSON400      *N400
	JSON401      *N401
	JSON404      *N404
}

// Status returns HTTPResponse.Status
func (r N7e44845dce5aa47ed7b0daf5595ad2e1Response) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r N7e44845dce5aa47ed7b0daf5595ad2e1Response) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type C399903694eb1314596832e49f7c66d7Response struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *string
	JSON400      *N400
	JSON401      *N401
}

// Status returns HTTPResponse.Status
func (r C399903694eb1314596832e49f7c66d7Response) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r C399903694eb1314596832e49f7c66d7Response) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type N8a5d8d3ccbbcef54ed0e913a27faea9dResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *[]PrivateKey
	JSON400      *N400
	JSON401      *N401
}

// Status returns HTTPResponse.Status
func (r N8a5d8d3ccbbcef54ed0e913a27faea9dResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r N8a5d8d3ccbbcef54ed0e913a27faea9dResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type Eb4780acaa990c594cdbe8ffa80b4fb0Response struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON201      *struct {
		Uuid *string `json:"uuid,omitempty"`
	}
	JSON400 *N400
	JSON401 *N401
}

// Status returns HTTPResponse.Status
func (r Eb4780acaa990c594cdbe8ffa80b4fb0Response) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r Eb4780acaa990c594cdbe8ffa80b4fb0Response) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type N8faa0bb399142f0084dfc3e003c42cf6Response struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		Message *string `json:"message,omitempty"`
	}
	JSON400 *N400
	JSON401 *N401
}

// Status returns HTTPResponse.Status
func (r N8faa0bb399142f0084dfc3e003c42cf6Response) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r N8faa0bb399142f0084dfc3e003c42cf6Response) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type N2f743a85eb65d5ddb8cd5b362bb3d26aResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *PrivateKey
	JSON400      *N400
	JSON401      *N401
}

// Status returns HTTPResponse.Status
func (r N2f743a85eb65d5ddb8cd5b362bb3d26aResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r N2f743a85eb65d5ddb8cd5b362bb3d26aResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type N9feff464b78c24957ed3173324c9cd14Response struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON201      *struct {
		Uuid *string `json:"uuid,omitempty"`
	}
	JSON400 *N400
	JSON401 *N401
}

// Status returns HTTPResponse.Status
func (r N9feff464b78c24957ed3173324c9cd14Response) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r N9feff464b78c24957ed3173324c9cd14Response) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type N787448df856cefd2d9a313566be30d34Response struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *[]Server
	JSON400      *N400
	JSON401      *N401
}

// Status returns HTTPResponse.Status
func (r N787448df856cefd2d9a313566be30d34Response) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r N787448df856cefd2d9a313566be30d34Response) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type Fa44b42490379e428ba5b8747716a8d9Response struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON201      *struct {
		// Uuid The UUID of the server.
		Uuid *string `json:"uuid,omitempty"`
	}
	JSON400 *N400
	JSON401 *N401
	JSON404 *N404
}

// Status returns HTTPResponse.Status
func (r Fa44b42490379e428ba5b8747716a8d9Response) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r Fa44b42490379e428ba5b8747716a8d9Response) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type N0231fe0134f0306b21f006ce51b0a3dcResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		Message *string `json:"message,omitempty"`
	}
	JSON400 *N400
	JSON401 *N401
	JSON404 *N404
}

// Status returns HTTPResponse.Status
func (r N0231fe0134f0306b21f006ce51b0a3dcResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r N0231fe0134f0306b21f006ce51b0a3dcResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type N5baf04bddb8302c7e07f5b4c41aad10cResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *Server
	JSON400      *N400
	JSON401      *N401
	JSON404      *N404
}

// Status returns HTTPResponse.Status
func (r N5baf04bddb8302c7e07f5b4c41aad10cResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r N5baf04bddb8302c7e07f5b4c41aad10cResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type N41bbdaf79eb1938592494fc5494442a0Response struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON201      *[]Server
	JSON400      *N400
	JSON401      *N401
	JSON404      *N404
}

// Status returns HTTPResponse.Status
func (r N41bbdaf79eb1938592494fc5494442a0Response) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r N41bbdaf79eb1938592494fc5494442a0Response) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type N1ee227755be848d572f412272f53dd93Response struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *[]struct {
		Domains *[]string `json:"domains,omitempty"`
		Ip      *string   `json:"ip,omitempty"`
	}
	JSON400 *N400
	JSON401 *N401
}

// Status returns HTTPResponse.Status
func (r N1ee227755be848d572f412272f53dd93Response) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r N1ee227755be848d572f412272f53dd93Response) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type Cef26c059941b44fbd8de3a7a58c10a5Response struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *[]struct {
		CreatedAt *string `json:"created_at,omitempty"`
		Id        *int    `json:"id,omitempty"`
		Name      *string `json:"name,omitempty"`
		Status    *string `json:"status,omitempty"`
		Type      *string `json:"type,omitempty"`
		UpdatedAt *string `json:"updated_at,omitempty"`
		Uuid      *string `json:"uuid,omitempty"`
	}
	JSON400 *N400
	JSON401 *N401
}

// Status returns HTTPResponse.Status
func (r Cef26c059941b44fbd8de3a7a58c10a5Response) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r Cef26c059941b44fbd8de3a7a58c10a5Response) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type A543a12ef2cbc7a3dd22c3dbe6cbee89Response struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON201      *struct {
		Message *string `json:"message,omitempty"`
	}
	JSON400 *N400
	JSON401 *N401
	JSON404 *N404
}

// Status returns HTTPResponse.Status
func (r A543a12ef2cbc7a3dd22c3dbe6cbee89Response) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r A543a12ef2cbc7a3dd22c3dbe6cbee89Response) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type N5d014ac25d33391b8f4c2316060ba452Response struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *[]Service
	JSON400      *N400
	JSON401      *N401
}

// Status returns HTTPResponse.Status
func (r N5d014ac25d33391b8f4c2316060ba452Response) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r N5d014ac25d33391b8f4c2316060ba452Response) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type N3d6cbfb54d919b53ba3984a113e837d7Response struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON201      *struct {
		// Domains Service domains.
		Domains *[]string `json:"domains,omitempty"`

		// Uuid Service UUID.
		Uuid *string `json:"uuid,omitempty"`
	}
	JSON400 *N400
	JSON401 *N401
}

// Status returns HTTPResponse.Status
func (r N3d6cbfb54d919b53ba3984a113e837d7Response) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r N3d6cbfb54d919b53ba3984a113e837d7Response) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type N6e1a61e4fddaa9d95bb9fc66dfaf0442Response struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		Message *string `json:"message,omitempty"`
	}
	JSON400 *N400
	JSON401 *N401
	JSON404 *N404
}

// Status returns HTTPResponse.Status
func (r N6e1a61e4fddaa9d95bb9fc66dfaf0442Response) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r N6e1a61e4fddaa9d95bb9fc66dfaf0442Response) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type N895d39ee2cb3994285de57256c2d428dResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *Service
	JSON400      *N400
	JSON401      *N401
	JSON404      *N404
}

// Status returns HTTPResponse.Status
func (r N895d39ee2cb3994285de57256c2d428dResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r N895d39ee2cb3994285de57256c2d428dResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type N836645faa615b75052759dae78639469Response struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		Message *string `json:"message,omitempty"`
	}
	JSON400 *N400
	JSON401 *N401
	JSON404 *N404
}

// Status returns HTTPResponse.Status
func (r N836645faa615b75052759dae78639469Response) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r N836645faa615b75052759dae78639469Response) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type D2ddd9c028d123fbdec830dc4b25b4cbResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		Message *string `json:"message,omitempty"`
	}
	JSON400 *N400
	JSON401 *N401
	JSON404 *N404
}

// Status returns HTTPResponse.Status
func (r D2ddd9c028d123fbdec830dc4b25b4cbResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r D2ddd9c028d123fbdec830dc4b25b4cbResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type N87399d34758ce16830740c68626614dbResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		Message *string `json:"message,omitempty"`
	}
	JSON400 *N400
	JSON401 *N401
	JSON404 *N404
}

// Status returns HTTPResponse.Status
func (r N87399d34758ce16830740c68626614dbResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r N87399d34758ce16830740c68626614dbResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type F9c530b5b25df9601cb87d6a58646f0aResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *[]Team
	JSON400      *N400
	JSON401      *N401
}

// Status returns HTTPResponse.Status
func (r F9c530b5b25df9601cb87d6a58646f0aResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r F9c530b5b25df9601cb87d6a58646f0aResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type N6a4ec9fed1aad7b0b38356c47d7ac509Response struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *Team
	JSON400      *N400
	JSON401      *N401
}

// Status returns HTTPResponse.Status
func (r N6a4ec9fed1aad7b0b38356c47d7ac509Response) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r N6a4ec9fed1aad7b0b38356c47d7ac509Response) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type N97e636a5796dbe71afb0bbcf1eec6e41Response struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *[]User
	JSON400      *N400
	JSON401      *N401
}

// Status returns HTTPResponse.Status
func (r N97e636a5796dbe71afb0bbcf1eec6e41Response) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r N97e636a5796dbe71afb0bbcf1eec6e41Response) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type Ac57ff546c002032cef44602c46a4e76Response struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *Team
	JSON400      *N400
	JSON401      *N401
	JSON404      *N404
}

// Status returns HTTPResponse.Status
func (r Ac57ff546c002032cef44602c46a4e76Response) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r Ac57ff546c002032cef44602c46a4e76Response) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type N7858f5a45d9ea55184c182852a7f0f6cResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *[]User
	JSON400      *N400
	JSON401      *N401
	JSON404      *N404
}

// Status returns HTTPResponse.Status
func (r N7858f5a45d9ea55184c182852a7f0f6cResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r N7858f5a45d9ea55184c182852a7f0f6cResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type N187b37139844731110757711ee71c215Response struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *string
	JSON400      *N400
	JSON401      *N401
}

// Status returns HTTPResponse.Status
func (r N187b37139844731110757711ee71c215Response) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r N187b37139844731110757711ee71c215Response) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

// N02978e79fc0b54d573b2359f2a1f7d86WithResponse request returning *N02978e79fc0b54d573b2359f2a1f7d86Response
func (c *ClientWithResponses) N02978e79fc0b54d573b2359f2a1f7d86WithResponse(ctx context.Context, reqEditors ...RequestEditorFn) (*N02978e79fc0b54d573b2359f2a1f7d86Response, error) {
	rsp, err := c.N02978e79fc0b54d573b2359f2a1f7d86(ctx, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN02978e79fc0b54d573b2359f2a1f7d86Response(rsp)
}

// N3731add8226c2d664455978cac46c242WithBodyWithResponse request with arbitrary body returning *N3731add8226c2d664455978cac46c242Response
func (c *ClientWithResponses) N3731add8226c2d664455978cac46c242WithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*N3731add8226c2d664455978cac46c242Response, error) {
	rsp, err := c.N3731add8226c2d664455978cac46c242WithBody(ctx, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN3731add8226c2d664455978cac46c242Response(rsp)
}

func (c *ClientWithResponses) N3731add8226c2d664455978cac46c242WithResponse(ctx context.Context, body N3731add8226c2d664455978cac46c242JSONRequestBody, reqEditors ...RequestEditorFn) (*N3731add8226c2d664455978cac46c242Response, error) {
	rsp, err := c.N3731add8226c2d664455978cac46c242(ctx, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN3731add8226c2d664455978cac46c242Response(rsp)
}

// N2b433ad6f5d259eb7f4f3b5af9913708WithBodyWithResponse request with arbitrary body returning *N2b433ad6f5d259eb7f4f3b5af9913708Response
func (c *ClientWithResponses) N2b433ad6f5d259eb7f4f3b5af9913708WithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*N2b433ad6f5d259eb7f4f3b5af9913708Response, error) {
	rsp, err := c.N2b433ad6f5d259eb7f4f3b5af9913708WithBody(ctx, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN2b433ad6f5d259eb7f4f3b5af9913708Response(rsp)
}

func (c *ClientWithResponses) N2b433ad6f5d259eb7f4f3b5af9913708WithResponse(ctx context.Context, body N2b433ad6f5d259eb7f4f3b5af9913708JSONRequestBody, reqEditors ...RequestEditorFn) (*N2b433ad6f5d259eb7f4f3b5af9913708Response, error) {
	rsp, err := c.N2b433ad6f5d259eb7f4f3b5af9913708(ctx, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN2b433ad6f5d259eb7f4f3b5af9913708Response(rsp)
}

// E9a2d6dd9404acf880dc3053f09477fcWithBodyWithResponse request with arbitrary body returning *E9a2d6dd9404acf880dc3053f09477fcResponse
func (c *ClientWithResponses) E9a2d6dd9404acf880dc3053f09477fcWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*E9a2d6dd9404acf880dc3053f09477fcResponse, error) {
	rsp, err := c.E9a2d6dd9404acf880dc3053f09477fcWithBody(ctx, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseE9a2d6dd9404acf880dc3053f09477fcResponse(rsp)
}

func (c *ClientWithResponses) E9a2d6dd9404acf880dc3053f09477fcWithResponse(ctx context.Context, body E9a2d6dd9404acf880dc3053f09477fcJSONRequestBody, reqEditors ...RequestEditorFn) (*E9a2d6dd9404acf880dc3053f09477fcResponse, error) {
	rsp, err := c.E9a2d6dd9404acf880dc3053f09477fc(ctx, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseE9a2d6dd9404acf880dc3053f09477fcResponse(rsp)
}

// E3eaa989ffb05366247a00cdfd551efaWithBodyWithResponse request with arbitrary body returning *E3eaa989ffb05366247a00cdfd551efaResponse
func (c *ClientWithResponses) E3eaa989ffb05366247a00cdfd551efaWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*E3eaa989ffb05366247a00cdfd551efaResponse, error) {
	rsp, err := c.E3eaa989ffb05366247a00cdfd551efaWithBody(ctx, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseE3eaa989ffb05366247a00cdfd551efaResponse(rsp)
}

func (c *ClientWithResponses) E3eaa989ffb05366247a00cdfd551efaWithResponse(ctx context.Context, body E3eaa989ffb05366247a00cdfd551efaJSONRequestBody, reqEditors ...RequestEditorFn) (*E3eaa989ffb05366247a00cdfd551efaResponse, error) {
	rsp, err := c.E3eaa989ffb05366247a00cdfd551efa(ctx, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseE3eaa989ffb05366247a00cdfd551efaResponse(rsp)
}

// N4d46c84bda4f1a411f6dda15fce4061fWithBodyWithResponse request with arbitrary body returning *N4d46c84bda4f1a411f6dda15fce4061fResponse
func (c *ClientWithResponses) N4d46c84bda4f1a411f6dda15fce4061fWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*N4d46c84bda4f1a411f6dda15fce4061fResponse, error) {
	rsp, err := c.N4d46c84bda4f1a411f6dda15fce4061fWithBody(ctx, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN4d46c84bda4f1a411f6dda15fce4061fResponse(rsp)
}

func (c *ClientWithResponses) N4d46c84bda4f1a411f6dda15fce4061fWithResponse(ctx context.Context, body N4d46c84bda4f1a411f6dda15fce4061fJSONRequestBody, reqEditors ...RequestEditorFn) (*N4d46c84bda4f1a411f6dda15fce4061fResponse, error) {
	rsp, err := c.N4d46c84bda4f1a411f6dda15fce4061f(ctx, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN4d46c84bda4f1a411f6dda15fce4061fResponse(rsp)
}

// Cb56324ad19693469b4461d3f6065a5bWithBodyWithResponse request with arbitrary body returning *Cb56324ad19693469b4461d3f6065a5bResponse
func (c *ClientWithResponses) Cb56324ad19693469b4461d3f6065a5bWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*Cb56324ad19693469b4461d3f6065a5bResponse, error) {
	rsp, err := c.Cb56324ad19693469b4461d3f6065a5bWithBody(ctx, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseCb56324ad19693469b4461d3f6065a5bResponse(rsp)
}

func (c *ClientWithResponses) Cb56324ad19693469b4461d3f6065a5bWithResponse(ctx context.Context, body Cb56324ad19693469b4461d3f6065a5bJSONRequestBody, reqEditors ...RequestEditorFn) (*Cb56324ad19693469b4461d3f6065a5bResponse, error) {
	rsp, err := c.Cb56324ad19693469b4461d3f6065a5b(ctx, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseCb56324ad19693469b4461d3f6065a5bResponse(rsp)
}

// N1e110b190a1045d34f3e1c61608a8702WithResponse request returning *N1e110b190a1045d34f3e1c61608a8702Response
func (c *ClientWithResponses) N1e110b190a1045d34f3e1c61608a8702WithResponse(ctx context.Context, uuid string, params *N1e110b190a1045d34f3e1c61608a8702Params, reqEditors ...RequestEditorFn) (*N1e110b190a1045d34f3e1c61608a8702Response, error) {
	rsp, err := c.N1e110b190a1045d34f3e1c61608a8702(ctx, uuid, params, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN1e110b190a1045d34f3e1c61608a8702Response(rsp)
}

// N3630b62c28e7358e7f0087c1d8fe1845WithResponse request returning *N3630b62c28e7358e7f0087c1d8fe1845Response
func (c *ClientWithResponses) N3630b62c28e7358e7f0087c1d8fe1845WithResponse(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*N3630b62c28e7358e7f0087c1d8fe1845Response, error) {
	rsp, err := c.N3630b62c28e7358e7f0087c1d8fe1845(ctx, uuid, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN3630b62c28e7358e7f0087c1d8fe1845Response(rsp)
}

// N62a3b1775e8cba5d39a236ebb69830b7WithBodyWithResponse request with arbitrary body returning *N62a3b1775e8cba5d39a236ebb69830b7Response
func (c *ClientWithResponses) N62a3b1775e8cba5d39a236ebb69830b7WithBodyWithResponse(ctx context.Context, uuid string, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*N62a3b1775e8cba5d39a236ebb69830b7Response, error) {
	rsp, err := c.N62a3b1775e8cba5d39a236ebb69830b7WithBody(ctx, uuid, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN62a3b1775e8cba5d39a236ebb69830b7Response(rsp)
}

func (c *ClientWithResponses) N62a3b1775e8cba5d39a236ebb69830b7WithResponse(ctx context.Context, uuid string, body N62a3b1775e8cba5d39a236ebb69830b7JSONRequestBody, reqEditors ...RequestEditorFn) (*N62a3b1775e8cba5d39a236ebb69830b7Response, error) {
	rsp, err := c.N62a3b1775e8cba5d39a236ebb69830b7(ctx, uuid, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN62a3b1775e8cba5d39a236ebb69830b7Response(rsp)
}

// N7c8e0c286870e23294a075cc0584df2fWithResponse request returning *N7c8e0c286870e23294a075cc0584df2fResponse
func (c *ClientWithResponses) N7c8e0c286870e23294a075cc0584df2fWithResponse(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*N7c8e0c286870e23294a075cc0584df2fResponse, error) {
	rsp, err := c.N7c8e0c286870e23294a075cc0584df2f(ctx, uuid, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN7c8e0c286870e23294a075cc0584df2fResponse(rsp)
}

// N3d70a2d569f395be220b3f09ad36674bWithBodyWithResponse request with arbitrary body returning *N3d70a2d569f395be220b3f09ad36674bResponse
func (c *ClientWithResponses) N3d70a2d569f395be220b3f09ad36674bWithBodyWithResponse(ctx context.Context, uuid string, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*N3d70a2d569f395be220b3f09ad36674bResponse, error) {
	rsp, err := c.N3d70a2d569f395be220b3f09ad36674bWithBody(ctx, uuid, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN3d70a2d569f395be220b3f09ad36674bResponse(rsp)
}

func (c *ClientWithResponses) N3d70a2d569f395be220b3f09ad36674bWithResponse(ctx context.Context, uuid string, body N3d70a2d569f395be220b3f09ad36674bJSONRequestBody, reqEditors ...RequestEditorFn) (*N3d70a2d569f395be220b3f09ad36674bResponse, error) {
	rsp, err := c.N3d70a2d569f395be220b3f09ad36674b(ctx, uuid, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN3d70a2d569f395be220b3f09ad36674bResponse(rsp)
}

// N4699ffbb7d6e58581fd0b0a14f36ffc2WithBodyWithResponse request with arbitrary body returning *N4699ffbb7d6e58581fd0b0a14f36ffc2Response
func (c *ClientWithResponses) N4699ffbb7d6e58581fd0b0a14f36ffc2WithBodyWithResponse(ctx context.Context, uuid string, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*N4699ffbb7d6e58581fd0b0a14f36ffc2Response, error) {
	rsp, err := c.N4699ffbb7d6e58581fd0b0a14f36ffc2WithBody(ctx, uuid, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN4699ffbb7d6e58581fd0b0a14f36ffc2Response(rsp)
}

func (c *ClientWithResponses) N4699ffbb7d6e58581fd0b0a14f36ffc2WithResponse(ctx context.Context, uuid string, body N4699ffbb7d6e58581fd0b0a14f36ffc2JSONRequestBody, reqEditors ...RequestEditorFn) (*N4699ffbb7d6e58581fd0b0a14f36ffc2Response, error) {
	rsp, err := c.N4699ffbb7d6e58581fd0b0a14f36ffc2(ctx, uuid, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN4699ffbb7d6e58581fd0b0a14f36ffc2Response(rsp)
}

// Ae96f0f585ed158b2abd2d9ba40f3cf9WithBodyWithResponse request with arbitrary body returning *Ae96f0f585ed158b2abd2d9ba40f3cf9Response
func (c *ClientWithResponses) Ae96f0f585ed158b2abd2d9ba40f3cf9WithBodyWithResponse(ctx context.Context, uuid string, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*Ae96f0f585ed158b2abd2d9ba40f3cf9Response, error) {
	rsp, err := c.Ae96f0f585ed158b2abd2d9ba40f3cf9WithBody(ctx, uuid, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseAe96f0f585ed158b2abd2d9ba40f3cf9Response(rsp)
}

func (c *ClientWithResponses) Ae96f0f585ed158b2abd2d9ba40f3cf9WithResponse(ctx context.Context, uuid string, body Ae96f0f585ed158b2abd2d9ba40f3cf9JSONRequestBody, reqEditors ...RequestEditorFn) (*Ae96f0f585ed158b2abd2d9ba40f3cf9Response, error) {
	rsp, err := c.Ae96f0f585ed158b2abd2d9ba40f3cf9(ctx, uuid, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseAe96f0f585ed158b2abd2d9ba40f3cf9Response(rsp)
}

// N96097c5cfc7dc0e7a3de229645f630c7WithResponse request returning *N96097c5cfc7dc0e7a3de229645f630c7Response
func (c *ClientWithResponses) N96097c5cfc7dc0e7a3de229645f630c7WithResponse(ctx context.Context, uuid string, envUuid string, reqEditors ...RequestEditorFn) (*N96097c5cfc7dc0e7a3de229645f630c7Response, error) {
	rsp, err := c.N96097c5cfc7dc0e7a3de229645f630c7(ctx, uuid, envUuid, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN96097c5cfc7dc0e7a3de229645f630c7Response(rsp)
}

// B231ae7baab9ef47f0627be820e735bcWithResponse request returning *B231ae7baab9ef47f0627be820e735bcResponse
func (c *ClientWithResponses) B231ae7baab9ef47f0627be820e735bcWithResponse(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*B231ae7baab9ef47f0627be820e735bcResponse, error) {
	rsp, err := c.B231ae7baab9ef47f0627be820e735bc(ctx, uuid, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseB231ae7baab9ef47f0627be820e735bcResponse(rsp)
}

// Dc87c2061ab303757a0e061f87900c4cWithResponse request returning *Dc87c2061ab303757a0e061f87900c4cResponse
func (c *ClientWithResponses) Dc87c2061ab303757a0e061f87900c4cWithResponse(ctx context.Context, uuid string, params *Dc87c2061ab303757a0e061f87900c4cParams, reqEditors ...RequestEditorFn) (*Dc87c2061ab303757a0e061f87900c4cResponse, error) {
	rsp, err := c.Dc87c2061ab303757a0e061f87900c4c(ctx, uuid, params, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseDc87c2061ab303757a0e061f87900c4cResponse(rsp)
}

// N133ef3c7bd5043901f24bb5002a536ebWithResponse request returning *N133ef3c7bd5043901f24bb5002a536ebResponse
func (c *ClientWithResponses) N133ef3c7bd5043901f24bb5002a536ebWithResponse(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*N133ef3c7bd5043901f24bb5002a536ebResponse, error) {
	rsp, err := c.N133ef3c7bd5043901f24bb5002a536eb(ctx, uuid, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN133ef3c7bd5043901f24bb5002a536ebResponse(rsp)
}

// Ecd0ee1e46e4c854c18e6c9daa3d37f3WithResponse request returning *Ecd0ee1e46e4c854c18e6c9daa3d37f3Response
func (c *ClientWithResponses) Ecd0ee1e46e4c854c18e6c9daa3d37f3WithResponse(ctx context.Context, reqEditors ...RequestEditorFn) (*Ecd0ee1e46e4c854c18e6c9daa3d37f3Response, error) {
	rsp, err := c.Ecd0ee1e46e4c854c18e6c9daa3d37f3(ctx, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseEcd0ee1e46e4c854c18e6c9daa3d37f3Response(rsp)
}

// A1189fa7f956f238f0e95c9150ff57f6WithBodyWithResponse request with arbitrary body returning *A1189fa7f956f238f0e95c9150ff57f6Response
func (c *ClientWithResponses) A1189fa7f956f238f0e95c9150ff57f6WithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*A1189fa7f956f238f0e95c9150ff57f6Response, error) {
	rsp, err := c.A1189fa7f956f238f0e95c9150ff57f6WithBody(ctx, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseA1189fa7f956f238f0e95c9150ff57f6Response(rsp)
}

func (c *ClientWithResponses) A1189fa7f956f238f0e95c9150ff57f6WithResponse(ctx context.Context, body A1189fa7f956f238f0e95c9150ff57f6JSONRequestBody, reqEditors ...RequestEditorFn) (*A1189fa7f956f238f0e95c9150ff57f6Response, error) {
	rsp, err := c.A1189fa7f956f238f0e95c9150ff57f6(ctx, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseA1189fa7f956f238f0e95c9150ff57f6Response(rsp)
}

// E73f7de1c8eee4219e5ec98c4b9b7efeWithBodyWithResponse request with arbitrary body returning *E73f7de1c8eee4219e5ec98c4b9b7efeResponse
func (c *ClientWithResponses) E73f7de1c8eee4219e5ec98c4b9b7efeWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*E73f7de1c8eee4219e5ec98c4b9b7efeResponse, error) {
	rsp, err := c.E73f7de1c8eee4219e5ec98c4b9b7efeWithBody(ctx, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseE73f7de1c8eee4219e5ec98c4b9b7efeResponse(rsp)
}

func (c *ClientWithResponses) E73f7de1c8eee4219e5ec98c4b9b7efeWithResponse(ctx context.Context, body E73f7de1c8eee4219e5ec98c4b9b7efeJSONRequestBody, reqEditors ...RequestEditorFn) (*E73f7de1c8eee4219e5ec98c4b9b7efeResponse, error) {
	rsp, err := c.E73f7de1c8eee4219e5ec98c4b9b7efe(ctx, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseE73f7de1c8eee4219e5ec98c4b9b7efeResponse(rsp)
}

// B908f3929c371c217d489638e0a21ff6WithBodyWithResponse request with arbitrary body returning *B908f3929c371c217d489638e0a21ff6Response
func (c *ClientWithResponses) B908f3929c371c217d489638e0a21ff6WithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*B908f3929c371c217d489638e0a21ff6Response, error) {
	rsp, err := c.B908f3929c371c217d489638e0a21ff6WithBody(ctx, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseB908f3929c371c217d489638e0a21ff6Response(rsp)
}

func (c *ClientWithResponses) B908f3929c371c217d489638e0a21ff6WithResponse(ctx context.Context, body B908f3929c371c217d489638e0a21ff6JSONRequestBody, reqEditors ...RequestEditorFn) (*B908f3929c371c217d489638e0a21ff6Response, error) {
	rsp, err := c.B908f3929c371c217d489638e0a21ff6(ctx, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseB908f3929c371c217d489638e0a21ff6Response(rsp)
}

// N6bea521ddcd738dcbb5f3783a7308acfWithBodyWithResponse request with arbitrary body returning *N6bea521ddcd738dcbb5f3783a7308acfResponse
func (c *ClientWithResponses) N6bea521ddcd738dcbb5f3783a7308acfWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*N6bea521ddcd738dcbb5f3783a7308acfResponse, error) {
	rsp, err := c.N6bea521ddcd738dcbb5f3783a7308acfWithBody(ctx, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN6bea521ddcd738dcbb5f3783a7308acfResponse(rsp)
}

func (c *ClientWithResponses) N6bea521ddcd738dcbb5f3783a7308acfWithResponse(ctx context.Context, body N6bea521ddcd738dcbb5f3783a7308acfJSONRequestBody, reqEditors ...RequestEditorFn) (*N6bea521ddcd738dcbb5f3783a7308acfResponse, error) {
	rsp, err := c.N6bea521ddcd738dcbb5f3783a7308acf(ctx, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN6bea521ddcd738dcbb5f3783a7308acfResponse(rsp)
}

// Fdba3de84d02519bb37599fea34b115dWithBodyWithResponse request with arbitrary body returning *Fdba3de84d02519bb37599fea34b115dResponse
func (c *ClientWithResponses) Fdba3de84d02519bb37599fea34b115dWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*Fdba3de84d02519bb37599fea34b115dResponse, error) {
	rsp, err := c.Fdba3de84d02519bb37599fea34b115dWithBody(ctx, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseFdba3de84d02519bb37599fea34b115dResponse(rsp)
}

func (c *ClientWithResponses) Fdba3de84d02519bb37599fea34b115dWithResponse(ctx context.Context, body Fdba3de84d02519bb37599fea34b115dJSONRequestBody, reqEditors ...RequestEditorFn) (*Fdba3de84d02519bb37599fea34b115dResponse, error) {
	rsp, err := c.Fdba3de84d02519bb37599fea34b115d(ctx, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseFdba3de84d02519bb37599fea34b115dResponse(rsp)
}

// N0a1158cf759c4493cbb1e30024c60623WithBodyWithResponse request with arbitrary body returning *N0a1158cf759c4493cbb1e30024c60623Response
func (c *ClientWithResponses) N0a1158cf759c4493cbb1e30024c60623WithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*N0a1158cf759c4493cbb1e30024c60623Response, error) {
	rsp, err := c.N0a1158cf759c4493cbb1e30024c60623WithBody(ctx, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN0a1158cf759c4493cbb1e30024c60623Response(rsp)
}

func (c *ClientWithResponses) N0a1158cf759c4493cbb1e30024c60623WithResponse(ctx context.Context, body N0a1158cf759c4493cbb1e30024c60623JSONRequestBody, reqEditors ...RequestEditorFn) (*N0a1158cf759c4493cbb1e30024c60623Response, error) {
	rsp, err := c.N0a1158cf759c4493cbb1e30024c60623(ctx, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN0a1158cf759c4493cbb1e30024c60623Response(rsp)
}

// N8f7f491ddc46a9fa065b4424512231cdWithBodyWithResponse request with arbitrary body returning *N8f7f491ddc46a9fa065b4424512231cdResponse
func (c *ClientWithResponses) N8f7f491ddc46a9fa065b4424512231cdWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*N8f7f491ddc46a9fa065b4424512231cdResponse, error) {
	rsp, err := c.N8f7f491ddc46a9fa065b4424512231cdWithBody(ctx, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN8f7f491ddc46a9fa065b4424512231cdResponse(rsp)
}

func (c *ClientWithResponses) N8f7f491ddc46a9fa065b4424512231cdWithResponse(ctx context.Context, body N8f7f491ddc46a9fa065b4424512231cdJSONRequestBody, reqEditors ...RequestEditorFn) (*N8f7f491ddc46a9fa065b4424512231cdResponse, error) {
	rsp, err := c.N8f7f491ddc46a9fa065b4424512231cd(ctx, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN8f7f491ddc46a9fa065b4424512231cdResponse(rsp)
}

// N4d352d13544ee2953fd48ad7b0651098WithBodyWithResponse request with arbitrary body returning *N4d352d13544ee2953fd48ad7b0651098Response
func (c *ClientWithResponses) N4d352d13544ee2953fd48ad7b0651098WithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*N4d352d13544ee2953fd48ad7b0651098Response, error) {
	rsp, err := c.N4d352d13544ee2953fd48ad7b0651098WithBody(ctx, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN4d352d13544ee2953fd48ad7b0651098Response(rsp)
}

func (c *ClientWithResponses) N4d352d13544ee2953fd48ad7b0651098WithResponse(ctx context.Context, body N4d352d13544ee2953fd48ad7b0651098JSONRequestBody, reqEditors ...RequestEditorFn) (*N4d352d13544ee2953fd48ad7b0651098Response, error) {
	rsp, err := c.N4d352d13544ee2953fd48ad7b0651098(ctx, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN4d352d13544ee2953fd48ad7b0651098Response(rsp)
}

// N20610931b2bae8aba34eee68624ab673WithResponse request returning *N20610931b2bae8aba34eee68624ab673Response
func (c *ClientWithResponses) N20610931b2bae8aba34eee68624ab673WithResponse(ctx context.Context, uuid string, params *N20610931b2bae8aba34eee68624ab673Params, reqEditors ...RequestEditorFn) (*N20610931b2bae8aba34eee68624ab673Response, error) {
	rsp, err := c.N20610931b2bae8aba34eee68624ab673(ctx, uuid, params, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN20610931b2bae8aba34eee68624ab673Response(rsp)
}

// B49cb2d3e8f34c4e80cdffd8a201031dWithResponse request returning *B49cb2d3e8f34c4e80cdffd8a201031dResponse
func (c *ClientWithResponses) B49cb2d3e8f34c4e80cdffd8a201031dWithResponse(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*B49cb2d3e8f34c4e80cdffd8a201031dResponse, error) {
	rsp, err := c.B49cb2d3e8f34c4e80cdffd8a201031d(ctx, uuid, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseB49cb2d3e8f34c4e80cdffd8a201031dResponse(rsp)
}

// N5ba459ed390a721711a1708760e9de3bWithBodyWithResponse request with arbitrary body returning *N5ba459ed390a721711a1708760e9de3bResponse
func (c *ClientWithResponses) N5ba459ed390a721711a1708760e9de3bWithBodyWithResponse(ctx context.Context, uuid string, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*N5ba459ed390a721711a1708760e9de3bResponse, error) {
	rsp, err := c.N5ba459ed390a721711a1708760e9de3bWithBody(ctx, uuid, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN5ba459ed390a721711a1708760e9de3bResponse(rsp)
}

func (c *ClientWithResponses) N5ba459ed390a721711a1708760e9de3bWithResponse(ctx context.Context, uuid string, body N5ba459ed390a721711a1708760e9de3bJSONRequestBody, reqEditors ...RequestEditorFn) (*N5ba459ed390a721711a1708760e9de3bResponse, error) {
	rsp, err := c.N5ba459ed390a721711a1708760e9de3b(ctx, uuid, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN5ba459ed390a721711a1708760e9de3bResponse(rsp)
}

// N04c7a5e4752b4a00036addb433f3f218WithResponse request returning *N04c7a5e4752b4a00036addb433f3f218Response
func (c *ClientWithResponses) N04c7a5e4752b4a00036addb433f3f218WithResponse(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*N04c7a5e4752b4a00036addb433f3f218Response, error) {
	rsp, err := c.N04c7a5e4752b4a00036addb433f3f218(ctx, uuid, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN04c7a5e4752b4a00036addb433f3f218Response(rsp)
}

// N4c6eb21e734d411e2b3388578761123dWithResponse request returning *N4c6eb21e734d411e2b3388578761123dResponse
func (c *ClientWithResponses) N4c6eb21e734d411e2b3388578761123dWithResponse(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*N4c6eb21e734d411e2b3388578761123dResponse, error) {
	rsp, err := c.N4c6eb21e734d411e2b3388578761123d(ctx, uuid, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN4c6eb21e734d411e2b3388578761123dResponse(rsp)
}

// Cb6d983c2679aff841c7501ce612a372WithResponse request returning *Cb6d983c2679aff841c7501ce612a372Response
func (c *ClientWithResponses) Cb6d983c2679aff841c7501ce612a372WithResponse(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*Cb6d983c2679aff841c7501ce612a372Response, error) {
	rsp, err := c.Cb6d983c2679aff841c7501ce612a372(ctx, uuid, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseCb6d983c2679aff841c7501ce612a372Response(rsp)
}

// N700eb6e51f4c9e86d722f600c65ed1d4WithResponse request returning *N700eb6e51f4c9e86d722f600c65ed1d4Response
func (c *ClientWithResponses) N700eb6e51f4c9e86d722f600c65ed1d4WithResponse(ctx context.Context, params *N700eb6e51f4c9e86d722f600c65ed1d4Params, reqEditors ...RequestEditorFn) (*N700eb6e51f4c9e86d722f600c65ed1d4Response, error) {
	rsp, err := c.N700eb6e51f4c9e86d722f600c65ed1d4(ctx, params, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN700eb6e51f4c9e86d722f600c65ed1d4Response(rsp)
}

// A2c05736269191ad0d99cadfd4708986WithResponse request returning *A2c05736269191ad0d99cadfd4708986Response
func (c *ClientWithResponses) A2c05736269191ad0d99cadfd4708986WithResponse(ctx context.Context, reqEditors ...RequestEditorFn) (*A2c05736269191ad0d99cadfd4708986Response, error) {
	rsp, err := c.A2c05736269191ad0d99cadfd4708986(ctx, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseA2c05736269191ad0d99cadfd4708986Response(rsp)
}

// Ccf9856174c115a1430d952ccbd36aeaWithResponse request returning *Ccf9856174c115a1430d952ccbd36aeaResponse
func (c *ClientWithResponses) Ccf9856174c115a1430d952ccbd36aeaWithResponse(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*Ccf9856174c115a1430d952ccbd36aeaResponse, error) {
	rsp, err := c.Ccf9856174c115a1430d952ccbd36aea(ctx, uuid, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseCcf9856174c115a1430d952ccbd36aeaResponse(rsp)
}

// N50e2486a2d196a996b24a284a283bcdbWithResponse request returning *N50e2486a2d196a996b24a284a283bcdbResponse
func (c *ClientWithResponses) N50e2486a2d196a996b24a284a283bcdbWithResponse(ctx context.Context, reqEditors ...RequestEditorFn) (*N50e2486a2d196a996b24a284a283bcdbResponse, error) {
	rsp, err := c.N50e2486a2d196a996b24a284a283bcdb(ctx, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN50e2486a2d196a996b24a284a283bcdbResponse(rsp)
}

// N595019bae03d08277def667609779ff3WithResponse request returning *N595019bae03d08277def667609779ff3Response
func (c *ClientWithResponses) N595019bae03d08277def667609779ff3WithResponse(ctx context.Context, reqEditors ...RequestEditorFn) (*N595019bae03d08277def667609779ff3Response, error) {
	rsp, err := c.N595019bae03d08277def667609779ff3(ctx, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN595019bae03d08277def667609779ff3Response(rsp)
}

// N64db893135e686704bb88c3c238022c1WithResponse request returning *N64db893135e686704bb88c3c238022c1Response
func (c *ClientWithResponses) N64db893135e686704bb88c3c238022c1WithResponse(ctx context.Context, reqEditors ...RequestEditorFn) (*N64db893135e686704bb88c3c238022c1Response, error) {
	rsp, err := c.N64db893135e686704bb88c3c238022c1(ctx, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN64db893135e686704bb88c3c238022c1Response(rsp)
}

// N762788f00f2dabb981df9adbc948d3f6WithResponse request returning *N762788f00f2dabb981df9adbc948d3f6Response
func (c *ClientWithResponses) N762788f00f2dabb981df9adbc948d3f6WithResponse(ctx context.Context, reqEditors ...RequestEditorFn) (*N762788f00f2dabb981df9adbc948d3f6Response, error) {
	rsp, err := c.N762788f00f2dabb981df9adbc948d3f6(ctx, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN762788f00f2dabb981df9adbc948d3f6Response(rsp)
}

// Cf067eb7cf18216cda3239329a2eeadbWithBodyWithResponse request with arbitrary body returning *Cf067eb7cf18216cda3239329a2eeadbResponse
func (c *ClientWithResponses) Cf067eb7cf18216cda3239329a2eeadbWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*Cf067eb7cf18216cda3239329a2eeadbResponse, error) {
	rsp, err := c.Cf067eb7cf18216cda3239329a2eeadbWithBody(ctx, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseCf067eb7cf18216cda3239329a2eeadbResponse(rsp)
}

func (c *ClientWithResponses) Cf067eb7cf18216cda3239329a2eeadbWithResponse(ctx context.Context, body Cf067eb7cf18216cda3239329a2eeadbJSONRequestBody, reqEditors ...RequestEditorFn) (*Cf067eb7cf18216cda3239329a2eeadbResponse, error) {
	rsp, err := c.Cf067eb7cf18216cda3239329a2eeadb(ctx, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseCf067eb7cf18216cda3239329a2eeadbResponse(rsp)
}

// F668a936f505b4401948c74b6a663029WithResponse request returning *F668a936f505b4401948c74b6a663029Response
func (c *ClientWithResponses) F668a936f505b4401948c74b6a663029WithResponse(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*F668a936f505b4401948c74b6a663029Response, error) {
	rsp, err := c.F668a936f505b4401948c74b6a663029(ctx, uuid, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseF668a936f505b4401948c74b6a663029Response(rsp)
}

// N63bf8b6a68fbb757f09ab519331f6298WithResponse request returning *N63bf8b6a68fbb757f09ab519331f6298Response
func (c *ClientWithResponses) N63bf8b6a68fbb757f09ab519331f6298WithResponse(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*N63bf8b6a68fbb757f09ab519331f6298Response, error) {
	rsp, err := c.N63bf8b6a68fbb757f09ab519331f6298(ctx, uuid, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN63bf8b6a68fbb757f09ab519331f6298Response(rsp)
}

// N2db343bd6fc14c658cb51a2b73b2f842WithBodyWithResponse request with arbitrary body returning *N2db343bd6fc14c658cb51a2b73b2f842Response
func (c *ClientWithResponses) N2db343bd6fc14c658cb51a2b73b2f842WithBodyWithResponse(ctx context.Context, uuid string, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*N2db343bd6fc14c658cb51a2b73b2f842Response, error) {
	rsp, err := c.N2db343bd6fc14c658cb51a2b73b2f842WithBody(ctx, uuid, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN2db343bd6fc14c658cb51a2b73b2f842Response(rsp)
}

func (c *ClientWithResponses) N2db343bd6fc14c658cb51a2b73b2f842WithResponse(ctx context.Context, uuid string, body N2db343bd6fc14c658cb51a2b73b2f842JSONRequestBody, reqEditors ...RequestEditorFn) (*N2db343bd6fc14c658cb51a2b73b2f842Response, error) {
	rsp, err := c.N2db343bd6fc14c658cb51a2b73b2f842(ctx, uuid, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN2db343bd6fc14c658cb51a2b73b2f842Response(rsp)
}

// N7e44845dce5aa47ed7b0daf5595ad2e1WithResponse request returning *N7e44845dce5aa47ed7b0daf5595ad2e1Response
func (c *ClientWithResponses) N7e44845dce5aa47ed7b0daf5595ad2e1WithResponse(ctx context.Context, uuid string, environmentName string, reqEditors ...RequestEditorFn) (*N7e44845dce5aa47ed7b0daf5595ad2e1Response, error) {
	rsp, err := c.N7e44845dce5aa47ed7b0daf5595ad2e1(ctx, uuid, environmentName, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN7e44845dce5aa47ed7b0daf5595ad2e1Response(rsp)
}

// C399903694eb1314596832e49f7c66d7WithResponse request returning *C399903694eb1314596832e49f7c66d7Response
func (c *ClientWithResponses) C399903694eb1314596832e49f7c66d7WithResponse(ctx context.Context, reqEditors ...RequestEditorFn) (*C399903694eb1314596832e49f7c66d7Response, error) {
	rsp, err := c.C399903694eb1314596832e49f7c66d7(ctx, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseC399903694eb1314596832e49f7c66d7Response(rsp)
}

// N8a5d8d3ccbbcef54ed0e913a27faea9dWithResponse request returning *N8a5d8d3ccbbcef54ed0e913a27faea9dResponse
func (c *ClientWithResponses) N8a5d8d3ccbbcef54ed0e913a27faea9dWithResponse(ctx context.Context, reqEditors ...RequestEditorFn) (*N8a5d8d3ccbbcef54ed0e913a27faea9dResponse, error) {
	rsp, err := c.N8a5d8d3ccbbcef54ed0e913a27faea9d(ctx, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN8a5d8d3ccbbcef54ed0e913a27faea9dResponse(rsp)
}

// Eb4780acaa990c594cdbe8ffa80b4fb0WithBodyWithResponse request with arbitrary body returning *Eb4780acaa990c594cdbe8ffa80b4fb0Response
func (c *ClientWithResponses) Eb4780acaa990c594cdbe8ffa80b4fb0WithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*Eb4780acaa990c594cdbe8ffa80b4fb0Response, error) {
	rsp, err := c.Eb4780acaa990c594cdbe8ffa80b4fb0WithBody(ctx, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseEb4780acaa990c594cdbe8ffa80b4fb0Response(rsp)
}

func (c *ClientWithResponses) Eb4780acaa990c594cdbe8ffa80b4fb0WithResponse(ctx context.Context, body Eb4780acaa990c594cdbe8ffa80b4fb0JSONRequestBody, reqEditors ...RequestEditorFn) (*Eb4780acaa990c594cdbe8ffa80b4fb0Response, error) {
	rsp, err := c.Eb4780acaa990c594cdbe8ffa80b4fb0(ctx, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseEb4780acaa990c594cdbe8ffa80b4fb0Response(rsp)
}

// N8faa0bb399142f0084dfc3e003c42cf6WithResponse request returning *N8faa0bb399142f0084dfc3e003c42cf6Response
func (c *ClientWithResponses) N8faa0bb399142f0084dfc3e003c42cf6WithResponse(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*N8faa0bb399142f0084dfc3e003c42cf6Response, error) {
	rsp, err := c.N8faa0bb399142f0084dfc3e003c42cf6(ctx, uuid, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN8faa0bb399142f0084dfc3e003c42cf6Response(rsp)
}

// N2f743a85eb65d5ddb8cd5b362bb3d26aWithResponse request returning *N2f743a85eb65d5ddb8cd5b362bb3d26aResponse
func (c *ClientWithResponses) N2f743a85eb65d5ddb8cd5b362bb3d26aWithResponse(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*N2f743a85eb65d5ddb8cd5b362bb3d26aResponse, error) {
	rsp, err := c.N2f743a85eb65d5ddb8cd5b362bb3d26a(ctx, uuid, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN2f743a85eb65d5ddb8cd5b362bb3d26aResponse(rsp)
}

// N9feff464b78c24957ed3173324c9cd14WithBodyWithResponse request with arbitrary body returning *N9feff464b78c24957ed3173324c9cd14Response
func (c *ClientWithResponses) N9feff464b78c24957ed3173324c9cd14WithBodyWithResponse(ctx context.Context, uuid string, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*N9feff464b78c24957ed3173324c9cd14Response, error) {
	rsp, err := c.N9feff464b78c24957ed3173324c9cd14WithBody(ctx, uuid, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN9feff464b78c24957ed3173324c9cd14Response(rsp)
}

func (c *ClientWithResponses) N9feff464b78c24957ed3173324c9cd14WithResponse(ctx context.Context, uuid string, body N9feff464b78c24957ed3173324c9cd14JSONRequestBody, reqEditors ...RequestEditorFn) (*N9feff464b78c24957ed3173324c9cd14Response, error) {
	rsp, err := c.N9feff464b78c24957ed3173324c9cd14(ctx, uuid, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN9feff464b78c24957ed3173324c9cd14Response(rsp)
}

// N787448df856cefd2d9a313566be30d34WithResponse request returning *N787448df856cefd2d9a313566be30d34Response
func (c *ClientWithResponses) N787448df856cefd2d9a313566be30d34WithResponse(ctx context.Context, reqEditors ...RequestEditorFn) (*N787448df856cefd2d9a313566be30d34Response, error) {
	rsp, err := c.N787448df856cefd2d9a313566be30d34(ctx, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN787448df856cefd2d9a313566be30d34Response(rsp)
}

// Fa44b42490379e428ba5b8747716a8d9WithBodyWithResponse request with arbitrary body returning *Fa44b42490379e428ba5b8747716a8d9Response
func (c *ClientWithResponses) Fa44b42490379e428ba5b8747716a8d9WithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*Fa44b42490379e428ba5b8747716a8d9Response, error) {
	rsp, err := c.Fa44b42490379e428ba5b8747716a8d9WithBody(ctx, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseFa44b42490379e428ba5b8747716a8d9Response(rsp)
}

func (c *ClientWithResponses) Fa44b42490379e428ba5b8747716a8d9WithResponse(ctx context.Context, body Fa44b42490379e428ba5b8747716a8d9JSONRequestBody, reqEditors ...RequestEditorFn) (*Fa44b42490379e428ba5b8747716a8d9Response, error) {
	rsp, err := c.Fa44b42490379e428ba5b8747716a8d9(ctx, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseFa44b42490379e428ba5b8747716a8d9Response(rsp)
}

// N0231fe0134f0306b21f006ce51b0a3dcWithResponse request returning *N0231fe0134f0306b21f006ce51b0a3dcResponse
func (c *ClientWithResponses) N0231fe0134f0306b21f006ce51b0a3dcWithResponse(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*N0231fe0134f0306b21f006ce51b0a3dcResponse, error) {
	rsp, err := c.N0231fe0134f0306b21f006ce51b0a3dc(ctx, uuid, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN0231fe0134f0306b21f006ce51b0a3dcResponse(rsp)
}

// N5baf04bddb8302c7e07f5b4c41aad10cWithResponse request returning *N5baf04bddb8302c7e07f5b4c41aad10cResponse
func (c *ClientWithResponses) N5baf04bddb8302c7e07f5b4c41aad10cWithResponse(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*N5baf04bddb8302c7e07f5b4c41aad10cResponse, error) {
	rsp, err := c.N5baf04bddb8302c7e07f5b4c41aad10c(ctx, uuid, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN5baf04bddb8302c7e07f5b4c41aad10cResponse(rsp)
}

// N41bbdaf79eb1938592494fc5494442a0WithBodyWithResponse request with arbitrary body returning *N41bbdaf79eb1938592494fc5494442a0Response
func (c *ClientWithResponses) N41bbdaf79eb1938592494fc5494442a0WithBodyWithResponse(ctx context.Context, uuid string, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*N41bbdaf79eb1938592494fc5494442a0Response, error) {
	rsp, err := c.N41bbdaf79eb1938592494fc5494442a0WithBody(ctx, uuid, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN41bbdaf79eb1938592494fc5494442a0Response(rsp)
}

func (c *ClientWithResponses) N41bbdaf79eb1938592494fc5494442a0WithResponse(ctx context.Context, uuid string, body N41bbdaf79eb1938592494fc5494442a0JSONRequestBody, reqEditors ...RequestEditorFn) (*N41bbdaf79eb1938592494fc5494442a0Response, error) {
	rsp, err := c.N41bbdaf79eb1938592494fc5494442a0(ctx, uuid, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN41bbdaf79eb1938592494fc5494442a0Response(rsp)
}

// N1ee227755be848d572f412272f53dd93WithResponse request returning *N1ee227755be848d572f412272f53dd93Response
func (c *ClientWithResponses) N1ee227755be848d572f412272f53dd93WithResponse(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*N1ee227755be848d572f412272f53dd93Response, error) {
	rsp, err := c.N1ee227755be848d572f412272f53dd93(ctx, uuid, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN1ee227755be848d572f412272f53dd93Response(rsp)
}

// Cef26c059941b44fbd8de3a7a58c10a5WithResponse request returning *Cef26c059941b44fbd8de3a7a58c10a5Response
func (c *ClientWithResponses) Cef26c059941b44fbd8de3a7a58c10a5WithResponse(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*Cef26c059941b44fbd8de3a7a58c10a5Response, error) {
	rsp, err := c.Cef26c059941b44fbd8de3a7a58c10a5(ctx, uuid, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseCef26c059941b44fbd8de3a7a58c10a5Response(rsp)
}

// A543a12ef2cbc7a3dd22c3dbe6cbee89WithResponse request returning *A543a12ef2cbc7a3dd22c3dbe6cbee89Response
func (c *ClientWithResponses) A543a12ef2cbc7a3dd22c3dbe6cbee89WithResponse(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*A543a12ef2cbc7a3dd22c3dbe6cbee89Response, error) {
	rsp, err := c.A543a12ef2cbc7a3dd22c3dbe6cbee89(ctx, uuid, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseA543a12ef2cbc7a3dd22c3dbe6cbee89Response(rsp)
}

// N5d014ac25d33391b8f4c2316060ba452WithResponse request returning *N5d014ac25d33391b8f4c2316060ba452Response
func (c *ClientWithResponses) N5d014ac25d33391b8f4c2316060ba452WithResponse(ctx context.Context, reqEditors ...RequestEditorFn) (*N5d014ac25d33391b8f4c2316060ba452Response, error) {
	rsp, err := c.N5d014ac25d33391b8f4c2316060ba452(ctx, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN5d014ac25d33391b8f4c2316060ba452Response(rsp)
}

// N3d6cbfb54d919b53ba3984a113e837d7WithBodyWithResponse request with arbitrary body returning *N3d6cbfb54d919b53ba3984a113e837d7Response
func (c *ClientWithResponses) N3d6cbfb54d919b53ba3984a113e837d7WithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*N3d6cbfb54d919b53ba3984a113e837d7Response, error) {
	rsp, err := c.N3d6cbfb54d919b53ba3984a113e837d7WithBody(ctx, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN3d6cbfb54d919b53ba3984a113e837d7Response(rsp)
}

func (c *ClientWithResponses) N3d6cbfb54d919b53ba3984a113e837d7WithResponse(ctx context.Context, body N3d6cbfb54d919b53ba3984a113e837d7JSONRequestBody, reqEditors ...RequestEditorFn) (*N3d6cbfb54d919b53ba3984a113e837d7Response, error) {
	rsp, err := c.N3d6cbfb54d919b53ba3984a113e837d7(ctx, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN3d6cbfb54d919b53ba3984a113e837d7Response(rsp)
}

// N6e1a61e4fddaa9d95bb9fc66dfaf0442WithResponse request returning *N6e1a61e4fddaa9d95bb9fc66dfaf0442Response
func (c *ClientWithResponses) N6e1a61e4fddaa9d95bb9fc66dfaf0442WithResponse(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*N6e1a61e4fddaa9d95bb9fc66dfaf0442Response, error) {
	rsp, err := c.N6e1a61e4fddaa9d95bb9fc66dfaf0442(ctx, uuid, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN6e1a61e4fddaa9d95bb9fc66dfaf0442Response(rsp)
}

// N895d39ee2cb3994285de57256c2d428dWithResponse request returning *N895d39ee2cb3994285de57256c2d428dResponse
func (c *ClientWithResponses) N895d39ee2cb3994285de57256c2d428dWithResponse(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*N895d39ee2cb3994285de57256c2d428dResponse, error) {
	rsp, err := c.N895d39ee2cb3994285de57256c2d428d(ctx, uuid, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN895d39ee2cb3994285de57256c2d428dResponse(rsp)
}

// N836645faa615b75052759dae78639469WithResponse request returning *N836645faa615b75052759dae78639469Response
func (c *ClientWithResponses) N836645faa615b75052759dae78639469WithResponse(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*N836645faa615b75052759dae78639469Response, error) {
	rsp, err := c.N836645faa615b75052759dae78639469(ctx, uuid, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN836645faa615b75052759dae78639469Response(rsp)
}

// D2ddd9c028d123fbdec830dc4b25b4cbWithResponse request returning *D2ddd9c028d123fbdec830dc4b25b4cbResponse
func (c *ClientWithResponses) D2ddd9c028d123fbdec830dc4b25b4cbWithResponse(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*D2ddd9c028d123fbdec830dc4b25b4cbResponse, error) {
	rsp, err := c.D2ddd9c028d123fbdec830dc4b25b4cb(ctx, uuid, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseD2ddd9c028d123fbdec830dc4b25b4cbResponse(rsp)
}

// N87399d34758ce16830740c68626614dbWithResponse request returning *N87399d34758ce16830740c68626614dbResponse
func (c *ClientWithResponses) N87399d34758ce16830740c68626614dbWithResponse(ctx context.Context, uuid string, reqEditors ...RequestEditorFn) (*N87399d34758ce16830740c68626614dbResponse, error) {
	rsp, err := c.N87399d34758ce16830740c68626614db(ctx, uuid, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN87399d34758ce16830740c68626614dbResponse(rsp)
}

// F9c530b5b25df9601cb87d6a58646f0aWithResponse request returning *F9c530b5b25df9601cb87d6a58646f0aResponse
func (c *ClientWithResponses) F9c530b5b25df9601cb87d6a58646f0aWithResponse(ctx context.Context, reqEditors ...RequestEditorFn) (*F9c530b5b25df9601cb87d6a58646f0aResponse, error) {
	rsp, err := c.F9c530b5b25df9601cb87d6a58646f0a(ctx, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseF9c530b5b25df9601cb87d6a58646f0aResponse(rsp)
}

// N6a4ec9fed1aad7b0b38356c47d7ac509WithResponse request returning *N6a4ec9fed1aad7b0b38356c47d7ac509Response
func (c *ClientWithResponses) N6a4ec9fed1aad7b0b38356c47d7ac509WithResponse(ctx context.Context, reqEditors ...RequestEditorFn) (*N6a4ec9fed1aad7b0b38356c47d7ac509Response, error) {
	rsp, err := c.N6a4ec9fed1aad7b0b38356c47d7ac509(ctx, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN6a4ec9fed1aad7b0b38356c47d7ac509Response(rsp)
}

// N97e636a5796dbe71afb0bbcf1eec6e41WithResponse request returning *N97e636a5796dbe71afb0bbcf1eec6e41Response
func (c *ClientWithResponses) N97e636a5796dbe71afb0bbcf1eec6e41WithResponse(ctx context.Context, reqEditors ...RequestEditorFn) (*N97e636a5796dbe71afb0bbcf1eec6e41Response, error) {
	rsp, err := c.N97e636a5796dbe71afb0bbcf1eec6e41(ctx, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN97e636a5796dbe71afb0bbcf1eec6e41Response(rsp)
}

// Ac57ff546c002032cef44602c46a4e76WithResponse request returning *Ac57ff546c002032cef44602c46a4e76Response
func (c *ClientWithResponses) Ac57ff546c002032cef44602c46a4e76WithResponse(ctx context.Context, id int, reqEditors ...RequestEditorFn) (*Ac57ff546c002032cef44602c46a4e76Response, error) {
	rsp, err := c.Ac57ff546c002032cef44602c46a4e76(ctx, id, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseAc57ff546c002032cef44602c46a4e76Response(rsp)
}

// N7858f5a45d9ea55184c182852a7f0f6cWithResponse request returning *N7858f5a45d9ea55184c182852a7f0f6cResponse
func (c *ClientWithResponses) N7858f5a45d9ea55184c182852a7f0f6cWithResponse(ctx context.Context, id int, reqEditors ...RequestEditorFn) (*N7858f5a45d9ea55184c182852a7f0f6cResponse, error) {
	rsp, err := c.N7858f5a45d9ea55184c182852a7f0f6c(ctx, id, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN7858f5a45d9ea55184c182852a7f0f6cResponse(rsp)
}

// N187b37139844731110757711ee71c215WithResponse request returning *N187b37139844731110757711ee71c215Response
func (c *ClientWithResponses) N187b37139844731110757711ee71c215WithResponse(ctx context.Context, reqEditors ...RequestEditorFn) (*N187b37139844731110757711ee71c215Response, error) {
	rsp, err := c.N187b37139844731110757711ee71c215(ctx, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseN187b37139844731110757711ee71c215Response(rsp)
}

// ParseN02978e79fc0b54d573b2359f2a1f7d86Response parses an HTTP response from a N02978e79fc0b54d573b2359f2a1f7d86WithResponse call
func ParseN02978e79fc0b54d573b2359f2a1f7d86Response(rsp *http.Response) (*N02978e79fc0b54d573b2359f2a1f7d86Response, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &N02978e79fc0b54d573b2359f2a1f7d86Response{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest []Application
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	}

	return response, nil
}

// ParseN3731add8226c2d664455978cac46c242Response parses an HTTP response from a N3731add8226c2d664455978cac46c242WithResponse call
func ParseN3731add8226c2d664455978cac46c242Response(rsp *http.Response) (*N3731add8226c2d664455978cac46c242Response, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &N3731add8226c2d664455978cac46c242Response{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	}

	return response, nil
}

// ParseN2b433ad6f5d259eb7f4f3b5af9913708Response parses an HTTP response from a N2b433ad6f5d259eb7f4f3b5af9913708WithResponse call
func ParseN2b433ad6f5d259eb7f4f3b5af9913708Response(rsp *http.Response) (*N2b433ad6f5d259eb7f4f3b5af9913708Response, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &N2b433ad6f5d259eb7f4f3b5af9913708Response{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	}

	return response, nil
}

// ParseE9a2d6dd9404acf880dc3053f09477fcResponse parses an HTTP response from a E9a2d6dd9404acf880dc3053f09477fcWithResponse call
func ParseE9a2d6dd9404acf880dc3053f09477fcResponse(rsp *http.Response) (*E9a2d6dd9404acf880dc3053f09477fcResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &E9a2d6dd9404acf880dc3053f09477fcResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	}

	return response, nil
}

// ParseE3eaa989ffb05366247a00cdfd551efaResponse parses an HTTP response from a E3eaa989ffb05366247a00cdfd551efaWithResponse call
func ParseE3eaa989ffb05366247a00cdfd551efaResponse(rsp *http.Response) (*E3eaa989ffb05366247a00cdfd551efaResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &E3eaa989ffb05366247a00cdfd551efaResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	}

	return response, nil
}

// ParseN4d46c84bda4f1a411f6dda15fce4061fResponse parses an HTTP response from a N4d46c84bda4f1a411f6dda15fce4061fWithResponse call
func ParseN4d46c84bda4f1a411f6dda15fce4061fResponse(rsp *http.Response) (*N4d46c84bda4f1a411f6dda15fce4061fResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &N4d46c84bda4f1a411f6dda15fce4061fResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	}

	return response, nil
}

// ParseCb56324ad19693469b4461d3f6065a5bResponse parses an HTTP response from a Cb56324ad19693469b4461d3f6065a5bWithResponse call
func ParseCb56324ad19693469b4461d3f6065a5bResponse(rsp *http.Response) (*Cb56324ad19693469b4461d3f6065a5bResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &Cb56324ad19693469b4461d3f6065a5bResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	}

	return response, nil
}

// ParseN1e110b190a1045d34f3e1c61608a8702Response parses an HTTP response from a N1e110b190a1045d34f3e1c61608a8702WithResponse call
func ParseN1e110b190a1045d34f3e1c61608a8702Response(rsp *http.Response) (*N1e110b190a1045d34f3e1c61608a8702Response, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &N1e110b190a1045d34f3e1c61608a8702Response{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			Message *string `json:"message,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest N404
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON404 = &dest

	}

	return response, nil
}

// ParseN3630b62c28e7358e7f0087c1d8fe1845Response parses an HTTP response from a N3630b62c28e7358e7f0087c1d8fe1845WithResponse call
func ParseN3630b62c28e7358e7f0087c1d8fe1845Response(rsp *http.Response) (*N3630b62c28e7358e7f0087c1d8fe1845Response, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &N3630b62c28e7358e7f0087c1d8fe1845Response{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest Application
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest N404
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON404 = &dest

	}

	return response, nil
}

// ParseN62a3b1775e8cba5d39a236ebb69830b7Response parses an HTTP response from a N62a3b1775e8cba5d39a236ebb69830b7WithResponse call
func ParseN62a3b1775e8cba5d39a236ebb69830b7Response(rsp *http.Response) (*N62a3b1775e8cba5d39a236ebb69830b7Response, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &N62a3b1775e8cba5d39a236ebb69830b7Response{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			Uuid *string `json:"uuid,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest N404
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON404 = &dest

	}

	return response, nil
}

// ParseN7c8e0c286870e23294a075cc0584df2fResponse parses an HTTP response from a N7c8e0c286870e23294a075cc0584df2fWithResponse call
func ParseN7c8e0c286870e23294a075cc0584df2fResponse(rsp *http.Response) (*N7c8e0c286870e23294a075cc0584df2fResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &N7c8e0c286870e23294a075cc0584df2fResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest []EnvironmentVariable
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest N404
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON404 = &dest

	}

	return response, nil
}

// ParseN3d70a2d569f395be220b3f09ad36674bResponse parses an HTTP response from a N3d70a2d569f395be220b3f09ad36674bWithResponse call
func ParseN3d70a2d569f395be220b3f09ad36674bResponse(rsp *http.Response) (*N3d70a2d569f395be220b3f09ad36674bResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &N3d70a2d569f395be220b3f09ad36674bResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 201:
		var dest struct {
			Message *string `json:"message,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON201 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest N404
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON404 = &dest

	}

	return response, nil
}

// ParseN4699ffbb7d6e58581fd0b0a14f36ffc2Response parses an HTTP response from a N4699ffbb7d6e58581fd0b0a14f36ffc2WithResponse call
func ParseN4699ffbb7d6e58581fd0b0a14f36ffc2Response(rsp *http.Response) (*N4699ffbb7d6e58581fd0b0a14f36ffc2Response, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &N4699ffbb7d6e58581fd0b0a14f36ffc2Response{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 201:
		var dest struct {
			Uuid *string `json:"uuid,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON201 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest N404
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON404 = &dest

	}

	return response, nil
}

// ParseAe96f0f585ed158b2abd2d9ba40f3cf9Response parses an HTTP response from a Ae96f0f585ed158b2abd2d9ba40f3cf9WithResponse call
func ParseAe96f0f585ed158b2abd2d9ba40f3cf9Response(rsp *http.Response) (*Ae96f0f585ed158b2abd2d9ba40f3cf9Response, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &Ae96f0f585ed158b2abd2d9ba40f3cf9Response{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 201:
		var dest struct {
			Message *string `json:"message,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON201 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest N404
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON404 = &dest

	}

	return response, nil
}

// ParseN96097c5cfc7dc0e7a3de229645f630c7Response parses an HTTP response from a N96097c5cfc7dc0e7a3de229645f630c7WithResponse call
func ParseN96097c5cfc7dc0e7a3de229645f630c7Response(rsp *http.Response) (*N96097c5cfc7dc0e7a3de229645f630c7Response, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &N96097c5cfc7dc0e7a3de229645f630c7Response{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			Message *string `json:"message,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest N404
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON404 = &dest

	}

	return response, nil
}

// ParseB231ae7baab9ef47f0627be820e735bcResponse parses an HTTP response from a B231ae7baab9ef47f0627be820e735bcWithResponse call
func ParseB231ae7baab9ef47f0627be820e735bcResponse(rsp *http.Response) (*B231ae7baab9ef47f0627be820e735bcResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &B231ae7baab9ef47f0627be820e735bcResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			// DeploymentUuid UUID of the deployment.
			DeploymentUuid *string `json:"deployment_uuid,omitempty"`
			Message        *string `json:"message,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest N404
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON404 = &dest

	}

	return response, nil
}

// ParseDc87c2061ab303757a0e061f87900c4cResponse parses an HTTP response from a Dc87c2061ab303757a0e061f87900c4cWithResponse call
func ParseDc87c2061ab303757a0e061f87900c4cResponse(rsp *http.Response) (*Dc87c2061ab303757a0e061f87900c4cResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &Dc87c2061ab303757a0e061f87900c4cResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			// DeploymentUuid UUID of the deployment.
			DeploymentUuid *string `json:"deployment_uuid,omitempty"`

			// Message Message.
			Message *string `json:"message,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest N404
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON404 = &dest

	}

	return response, nil
}

// ParseN133ef3c7bd5043901f24bb5002a536ebResponse parses an HTTP response from a N133ef3c7bd5043901f24bb5002a536ebWithResponse call
func ParseN133ef3c7bd5043901f24bb5002a536ebResponse(rsp *http.Response) (*N133ef3c7bd5043901f24bb5002a536ebResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &N133ef3c7bd5043901f24bb5002a536ebResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			Message *string `json:"message,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest N404
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON404 = &dest

	}

	return response, nil
}

// ParseEcd0ee1e46e4c854c18e6c9daa3d37f3Response parses an HTTP response from a Ecd0ee1e46e4c854c18e6c9daa3d37f3WithResponse call
func ParseEcd0ee1e46e4c854c18e6c9daa3d37f3Response(rsp *http.Response) (*Ecd0ee1e46e4c854c18e6c9daa3d37f3Response, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &Ecd0ee1e46e4c854c18e6c9daa3d37f3Response{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest string
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	}

	return response, nil
}

// ParseA1189fa7f956f238f0e95c9150ff57f6Response parses an HTTP response from a A1189fa7f956f238f0e95c9150ff57f6WithResponse call
func ParseA1189fa7f956f238f0e95c9150ff57f6Response(rsp *http.Response) (*A1189fa7f956f238f0e95c9150ff57f6Response, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &A1189fa7f956f238f0e95c9150ff57f6Response{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	}

	return response, nil
}

// ParseE73f7de1c8eee4219e5ec98c4b9b7efeResponse parses an HTTP response from a E73f7de1c8eee4219e5ec98c4b9b7efeWithResponse call
func ParseE73f7de1c8eee4219e5ec98c4b9b7efeResponse(rsp *http.Response) (*E73f7de1c8eee4219e5ec98c4b9b7efeResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &E73f7de1c8eee4219e5ec98c4b9b7efeResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	}

	return response, nil
}

// ParseB908f3929c371c217d489638e0a21ff6Response parses an HTTP response from a B908f3929c371c217d489638e0a21ff6WithResponse call
func ParseB908f3929c371c217d489638e0a21ff6Response(rsp *http.Response) (*B908f3929c371c217d489638e0a21ff6Response, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &B908f3929c371c217d489638e0a21ff6Response{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	}

	return response, nil
}

// ParseN6bea521ddcd738dcbb5f3783a7308acfResponse parses an HTTP response from a N6bea521ddcd738dcbb5f3783a7308acfWithResponse call
func ParseN6bea521ddcd738dcbb5f3783a7308acfResponse(rsp *http.Response) (*N6bea521ddcd738dcbb5f3783a7308acfResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &N6bea521ddcd738dcbb5f3783a7308acfResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	}

	return response, nil
}

// ParseFdba3de84d02519bb37599fea34b115dResponse parses an HTTP response from a Fdba3de84d02519bb37599fea34b115dWithResponse call
func ParseFdba3de84d02519bb37599fea34b115dResponse(rsp *http.Response) (*Fdba3de84d02519bb37599fea34b115dResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &Fdba3de84d02519bb37599fea34b115dResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	}

	return response, nil
}

// ParseN0a1158cf759c4493cbb1e30024c60623Response parses an HTTP response from a N0a1158cf759c4493cbb1e30024c60623WithResponse call
func ParseN0a1158cf759c4493cbb1e30024c60623Response(rsp *http.Response) (*N0a1158cf759c4493cbb1e30024c60623Response, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &N0a1158cf759c4493cbb1e30024c60623Response{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	}

	return response, nil
}

// ParseN8f7f491ddc46a9fa065b4424512231cdResponse parses an HTTP response from a N8f7f491ddc46a9fa065b4424512231cdWithResponse call
func ParseN8f7f491ddc46a9fa065b4424512231cdResponse(rsp *http.Response) (*N8f7f491ddc46a9fa065b4424512231cdResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &N8f7f491ddc46a9fa065b4424512231cdResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	}

	return response, nil
}

// ParseN4d352d13544ee2953fd48ad7b0651098Response parses an HTTP response from a N4d352d13544ee2953fd48ad7b0651098WithResponse call
func ParseN4d352d13544ee2953fd48ad7b0651098Response(rsp *http.Response) (*N4d352d13544ee2953fd48ad7b0651098Response, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &N4d352d13544ee2953fd48ad7b0651098Response{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	}

	return response, nil
}

// ParseN20610931b2bae8aba34eee68624ab673Response parses an HTTP response from a N20610931b2bae8aba34eee68624ab673WithResponse call
func ParseN20610931b2bae8aba34eee68624ab673Response(rsp *http.Response) (*N20610931b2bae8aba34eee68624ab673Response, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &N20610931b2bae8aba34eee68624ab673Response{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			Message *string `json:"message,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest N404
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON404 = &dest

	}

	return response, nil
}

// ParseB49cb2d3e8f34c4e80cdffd8a201031dResponse parses an HTTP response from a B49cb2d3e8f34c4e80cdffd8a201031dWithResponse call
func ParseB49cb2d3e8f34c4e80cdffd8a201031dResponse(rsp *http.Response) (*B49cb2d3e8f34c4e80cdffd8a201031dResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &B49cb2d3e8f34c4e80cdffd8a201031dResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest string
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest N404
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON404 = &dest

	}

	return response, nil
}

// ParseN5ba459ed390a721711a1708760e9de3bResponse parses an HTTP response from a N5ba459ed390a721711a1708760e9de3bWithResponse call
func ParseN5ba459ed390a721711a1708760e9de3bResponse(rsp *http.Response) (*N5ba459ed390a721711a1708760e9de3bResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &N5ba459ed390a721711a1708760e9de3bResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest N404
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON404 = &dest

	}

	return response, nil
}

// ParseN04c7a5e4752b4a00036addb433f3f218Response parses an HTTP response from a N04c7a5e4752b4a00036addb433f3f218WithResponse call
func ParseN04c7a5e4752b4a00036addb433f3f218Response(rsp *http.Response) (*N04c7a5e4752b4a00036addb433f3f218Response, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &N04c7a5e4752b4a00036addb433f3f218Response{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			Message *string `json:"message,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest N404
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON404 = &dest

	}

	return response, nil
}

// ParseN4c6eb21e734d411e2b3388578761123dResponse parses an HTTP response from a N4c6eb21e734d411e2b3388578761123dWithResponse call
func ParseN4c6eb21e734d411e2b3388578761123dResponse(rsp *http.Response) (*N4c6eb21e734d411e2b3388578761123dResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &N4c6eb21e734d411e2b3388578761123dResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			Message *string `json:"message,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest N404
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON404 = &dest

	}

	return response, nil
}

// ParseCb6d983c2679aff841c7501ce612a372Response parses an HTTP response from a Cb6d983c2679aff841c7501ce612a372WithResponse call
func ParseCb6d983c2679aff841c7501ce612a372Response(rsp *http.Response) (*Cb6d983c2679aff841c7501ce612a372Response, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &Cb6d983c2679aff841c7501ce612a372Response{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			Message *string `json:"message,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest N404
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON404 = &dest

	}

	return response, nil
}

// ParseN700eb6e51f4c9e86d722f600c65ed1d4Response parses an HTTP response from a N700eb6e51f4c9e86d722f600c65ed1d4WithResponse call
func ParseN700eb6e51f4c9e86d722f600c65ed1d4Response(rsp *http.Response) (*N700eb6e51f4c9e86d722f600c65ed1d4Response, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &N700eb6e51f4c9e86d722f600c65ed1d4Response{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			Deployments *[]struct {
				DeploymentUuid *string `json:"deployment_uuid,omitempty"`
				Message        *string `json:"message,omitempty"`
				ResourceUuid   *string `json:"resource_uuid,omitempty"`
			} `json:"deployments,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	}

	return response, nil
}

// ParseA2c05736269191ad0d99cadfd4708986Response parses an HTTP response from a A2c05736269191ad0d99cadfd4708986WithResponse call
func ParseA2c05736269191ad0d99cadfd4708986Response(rsp *http.Response) (*A2c05736269191ad0d99cadfd4708986Response, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &A2c05736269191ad0d99cadfd4708986Response{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest []ApplicationDeploymentQueue
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	}

	return response, nil
}

// ParseCcf9856174c115a1430d952ccbd36aeaResponse parses an HTTP response from a Ccf9856174c115a1430d952ccbd36aeaWithResponse call
func ParseCcf9856174c115a1430d952ccbd36aeaResponse(rsp *http.Response) (*Ccf9856174c115a1430d952ccbd36aeaResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &Ccf9856174c115a1430d952ccbd36aeaResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest ApplicationDeploymentQueue
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest N404
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON404 = &dest

	}

	return response, nil
}

// ParseN50e2486a2d196a996b24a284a283bcdbResponse parses an HTTP response from a N50e2486a2d196a996b24a284a283bcdbWithResponse call
func ParseN50e2486a2d196a996b24a284a283bcdbResponse(rsp *http.Response) (*N50e2486a2d196a996b24a284a283bcdbResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &N50e2486a2d196a996b24a284a283bcdbResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			Message *string `json:"message,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest struct {
			Message *string `json:"message,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON403 = &dest

	}

	return response, nil
}

// ParseN595019bae03d08277def667609779ff3Response parses an HTTP response from a N595019bae03d08277def667609779ff3WithResponse call
func ParseN595019bae03d08277def667609779ff3Response(rsp *http.Response) (*N595019bae03d08277def667609779ff3Response, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &N595019bae03d08277def667609779ff3Response{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			Message *string `json:"message,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest struct {
			Message *string `json:"message,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON403 = &dest

	}

	return response, nil
}

// ParseN64db893135e686704bb88c3c238022c1Response parses an HTTP response from a N64db893135e686704bb88c3c238022c1WithResponse call
func ParseN64db893135e686704bb88c3c238022c1Response(rsp *http.Response) (*N64db893135e686704bb88c3c238022c1Response, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &N64db893135e686704bb88c3c238022c1Response{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest string
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	}

	return response, nil
}

// ParseN762788f00f2dabb981df9adbc948d3f6Response parses an HTTP response from a N762788f00f2dabb981df9adbc948d3f6WithResponse call
func ParseN762788f00f2dabb981df9adbc948d3f6Response(rsp *http.Response) (*N762788f00f2dabb981df9adbc948d3f6Response, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &N762788f00f2dabb981df9adbc948d3f6Response{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest []Project
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	}

	return response, nil
}

// ParseCf067eb7cf18216cda3239329a2eeadbResponse parses an HTTP response from a Cf067eb7cf18216cda3239329a2eeadbWithResponse call
func ParseCf067eb7cf18216cda3239329a2eeadbResponse(rsp *http.Response) (*Cf067eb7cf18216cda3239329a2eeadbResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &Cf067eb7cf18216cda3239329a2eeadbResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 201:
		var dest struct {
			// Uuid The UUID of the project.
			Uuid *string `json:"uuid,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON201 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest N404
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON404 = &dest

	}

	return response, nil
}

// ParseF668a936f505b4401948c74b6a663029Response parses an HTTP response from a F668a936f505b4401948c74b6a663029WithResponse call
func ParseF668a936f505b4401948c74b6a663029Response(rsp *http.Response) (*F668a936f505b4401948c74b6a663029Response, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &F668a936f505b4401948c74b6a663029Response{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			Message *string `json:"message,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest N404
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON404 = &dest

	}

	return response, nil
}

// ParseN63bf8b6a68fbb757f09ab519331f6298Response parses an HTTP response from a N63bf8b6a68fbb757f09ab519331f6298WithResponse call
func ParseN63bf8b6a68fbb757f09ab519331f6298Response(rsp *http.Response) (*N63bf8b6a68fbb757f09ab519331f6298Response, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &N63bf8b6a68fbb757f09ab519331f6298Response{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest Project
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	}

	return response, nil
}

// ParseN2db343bd6fc14c658cb51a2b73b2f842Response parses an HTTP response from a N2db343bd6fc14c658cb51a2b73b2f842WithResponse call
func ParseN2db343bd6fc14c658cb51a2b73b2f842Response(rsp *http.Response) (*N2db343bd6fc14c658cb51a2b73b2f842Response, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &N2db343bd6fc14c658cb51a2b73b2f842Response{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 201:
		var dest struct {
			Description *string `json:"description,omitempty"`
			Name        *string `json:"name,omitempty"`
			Uuid        *string `json:"uuid,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON201 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest N404
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON404 = &dest

	}

	return response, nil
}

// ParseN7e44845dce5aa47ed7b0daf5595ad2e1Response parses an HTTP response from a N7e44845dce5aa47ed7b0daf5595ad2e1WithResponse call
func ParseN7e44845dce5aa47ed7b0daf5595ad2e1Response(rsp *http.Response) (*N7e44845dce5aa47ed7b0daf5595ad2e1Response, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &N7e44845dce5aa47ed7b0daf5595ad2e1Response{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest Environment
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest N404
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON404 = &dest

	}

	return response, nil
}

// ParseC399903694eb1314596832e49f7c66d7Response parses an HTTP response from a C399903694eb1314596832e49f7c66d7WithResponse call
func ParseC399903694eb1314596832e49f7c66d7Response(rsp *http.Response) (*C399903694eb1314596832e49f7c66d7Response, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &C399903694eb1314596832e49f7c66d7Response{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest string
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	}

	return response, nil
}

// ParseN8a5d8d3ccbbcef54ed0e913a27faea9dResponse parses an HTTP response from a N8a5d8d3ccbbcef54ed0e913a27faea9dWithResponse call
func ParseN8a5d8d3ccbbcef54ed0e913a27faea9dResponse(rsp *http.Response) (*N8a5d8d3ccbbcef54ed0e913a27faea9dResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &N8a5d8d3ccbbcef54ed0e913a27faea9dResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest []PrivateKey
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	}

	return response, nil
}

// ParseEb4780acaa990c594cdbe8ffa80b4fb0Response parses an HTTP response from a Eb4780acaa990c594cdbe8ffa80b4fb0WithResponse call
func ParseEb4780acaa990c594cdbe8ffa80b4fb0Response(rsp *http.Response) (*Eb4780acaa990c594cdbe8ffa80b4fb0Response, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &Eb4780acaa990c594cdbe8ffa80b4fb0Response{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 201:
		var dest struct {
			Uuid *string `json:"uuid,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON201 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	}

	return response, nil
}

// ParseN8faa0bb399142f0084dfc3e003c42cf6Response parses an HTTP response from a N8faa0bb399142f0084dfc3e003c42cf6WithResponse call
func ParseN8faa0bb399142f0084dfc3e003c42cf6Response(rsp *http.Response) (*N8faa0bb399142f0084dfc3e003c42cf6Response, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &N8faa0bb399142f0084dfc3e003c42cf6Response{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			Message *string `json:"message,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	}

	return response, nil
}

// ParseN2f743a85eb65d5ddb8cd5b362bb3d26aResponse parses an HTTP response from a N2f743a85eb65d5ddb8cd5b362bb3d26aWithResponse call
func ParseN2f743a85eb65d5ddb8cd5b362bb3d26aResponse(rsp *http.Response) (*N2f743a85eb65d5ddb8cd5b362bb3d26aResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &N2f743a85eb65d5ddb8cd5b362bb3d26aResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest PrivateKey
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	}

	return response, nil
}

// ParseN9feff464b78c24957ed3173324c9cd14Response parses an HTTP response from a N9feff464b78c24957ed3173324c9cd14WithResponse call
func ParseN9feff464b78c24957ed3173324c9cd14Response(rsp *http.Response) (*N9feff464b78c24957ed3173324c9cd14Response, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &N9feff464b78c24957ed3173324c9cd14Response{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 201:
		var dest struct {
			Uuid *string `json:"uuid,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON201 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	}

	return response, nil
}

// ParseN787448df856cefd2d9a313566be30d34Response parses an HTTP response from a N787448df856cefd2d9a313566be30d34WithResponse call
func ParseN787448df856cefd2d9a313566be30d34Response(rsp *http.Response) (*N787448df856cefd2d9a313566be30d34Response, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &N787448df856cefd2d9a313566be30d34Response{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest []Server
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	}

	return response, nil
}

// ParseFa44b42490379e428ba5b8747716a8d9Response parses an HTTP response from a Fa44b42490379e428ba5b8747716a8d9WithResponse call
func ParseFa44b42490379e428ba5b8747716a8d9Response(rsp *http.Response) (*Fa44b42490379e428ba5b8747716a8d9Response, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &Fa44b42490379e428ba5b8747716a8d9Response{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 201:
		var dest struct {
			// Uuid The UUID of the server.
			Uuid *string `json:"uuid,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON201 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest N404
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON404 = &dest

	}

	return response, nil
}

// ParseN0231fe0134f0306b21f006ce51b0a3dcResponse parses an HTTP response from a N0231fe0134f0306b21f006ce51b0a3dcWithResponse call
func ParseN0231fe0134f0306b21f006ce51b0a3dcResponse(rsp *http.Response) (*N0231fe0134f0306b21f006ce51b0a3dcResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &N0231fe0134f0306b21f006ce51b0a3dcResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			Message *string `json:"message,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest N404
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON404 = &dest

	}

	return response, nil
}

// ParseN5baf04bddb8302c7e07f5b4c41aad10cResponse parses an HTTP response from a N5baf04bddb8302c7e07f5b4c41aad10cWithResponse call
func ParseN5baf04bddb8302c7e07f5b4c41aad10cResponse(rsp *http.Response) (*N5baf04bddb8302c7e07f5b4c41aad10cResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &N5baf04bddb8302c7e07f5b4c41aad10cResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest Server
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest N404
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON404 = &dest

	}

	return response, nil
}

// ParseN41bbdaf79eb1938592494fc5494442a0Response parses an HTTP response from a N41bbdaf79eb1938592494fc5494442a0WithResponse call
func ParseN41bbdaf79eb1938592494fc5494442a0Response(rsp *http.Response) (*N41bbdaf79eb1938592494fc5494442a0Response, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &N41bbdaf79eb1938592494fc5494442a0Response{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 201:
		var dest []Server
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON201 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest N404
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON404 = &dest

	}

	return response, nil
}

// ParseN1ee227755be848d572f412272f53dd93Response parses an HTTP response from a N1ee227755be848d572f412272f53dd93WithResponse call
func ParseN1ee227755be848d572f412272f53dd93Response(rsp *http.Response) (*N1ee227755be848d572f412272f53dd93Response, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &N1ee227755be848d572f412272f53dd93Response{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest []struct {
			Domains *[]string `json:"domains,omitempty"`
			Ip      *string   `json:"ip,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	}

	return response, nil
}

// ParseCef26c059941b44fbd8de3a7a58c10a5Response parses an HTTP response from a Cef26c059941b44fbd8de3a7a58c10a5WithResponse call
func ParseCef26c059941b44fbd8de3a7a58c10a5Response(rsp *http.Response) (*Cef26c059941b44fbd8de3a7a58c10a5Response, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &Cef26c059941b44fbd8de3a7a58c10a5Response{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest []struct {
			CreatedAt *string `json:"created_at,omitempty"`
			Id        *int    `json:"id,omitempty"`
			Name      *string `json:"name,omitempty"`
			Status    *string `json:"status,omitempty"`
			Type      *string `json:"type,omitempty"`
			UpdatedAt *string `json:"updated_at,omitempty"`
			Uuid      *string `json:"uuid,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	}

	return response, nil
}

// ParseA543a12ef2cbc7a3dd22c3dbe6cbee89Response parses an HTTP response from a A543a12ef2cbc7a3dd22c3dbe6cbee89WithResponse call
func ParseA543a12ef2cbc7a3dd22c3dbe6cbee89Response(rsp *http.Response) (*A543a12ef2cbc7a3dd22c3dbe6cbee89Response, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &A543a12ef2cbc7a3dd22c3dbe6cbee89Response{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 201:
		var dest struct {
			Message *string `json:"message,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON201 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest N404
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON404 = &dest

	}

	return response, nil
}

// ParseN5d014ac25d33391b8f4c2316060ba452Response parses an HTTP response from a N5d014ac25d33391b8f4c2316060ba452WithResponse call
func ParseN5d014ac25d33391b8f4c2316060ba452Response(rsp *http.Response) (*N5d014ac25d33391b8f4c2316060ba452Response, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &N5d014ac25d33391b8f4c2316060ba452Response{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest []Service
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	}

	return response, nil
}

// ParseN3d6cbfb54d919b53ba3984a113e837d7Response parses an HTTP response from a N3d6cbfb54d919b53ba3984a113e837d7WithResponse call
func ParseN3d6cbfb54d919b53ba3984a113e837d7Response(rsp *http.Response) (*N3d6cbfb54d919b53ba3984a113e837d7Response, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &N3d6cbfb54d919b53ba3984a113e837d7Response{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 201:
		var dest struct {
			// Domains Service domains.
			Domains *[]string `json:"domains,omitempty"`

			// Uuid Service UUID.
			Uuid *string `json:"uuid,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON201 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	}

	return response, nil
}

// ParseN6e1a61e4fddaa9d95bb9fc66dfaf0442Response parses an HTTP response from a N6e1a61e4fddaa9d95bb9fc66dfaf0442WithResponse call
func ParseN6e1a61e4fddaa9d95bb9fc66dfaf0442Response(rsp *http.Response) (*N6e1a61e4fddaa9d95bb9fc66dfaf0442Response, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &N6e1a61e4fddaa9d95bb9fc66dfaf0442Response{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			Message *string `json:"message,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest N404
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON404 = &dest

	}

	return response, nil
}

// ParseN895d39ee2cb3994285de57256c2d428dResponse parses an HTTP response from a N895d39ee2cb3994285de57256c2d428dWithResponse call
func ParseN895d39ee2cb3994285de57256c2d428dResponse(rsp *http.Response) (*N895d39ee2cb3994285de57256c2d428dResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &N895d39ee2cb3994285de57256c2d428dResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest Service
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest N404
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON404 = &dest

	}

	return response, nil
}

// ParseN836645faa615b75052759dae78639469Response parses an HTTP response from a N836645faa615b75052759dae78639469WithResponse call
func ParseN836645faa615b75052759dae78639469Response(rsp *http.Response) (*N836645faa615b75052759dae78639469Response, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &N836645faa615b75052759dae78639469Response{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			Message *string `json:"message,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest N404
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON404 = &dest

	}

	return response, nil
}

// ParseD2ddd9c028d123fbdec830dc4b25b4cbResponse parses an HTTP response from a D2ddd9c028d123fbdec830dc4b25b4cbWithResponse call
func ParseD2ddd9c028d123fbdec830dc4b25b4cbResponse(rsp *http.Response) (*D2ddd9c028d123fbdec830dc4b25b4cbResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &D2ddd9c028d123fbdec830dc4b25b4cbResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			Message *string `json:"message,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest N404
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON404 = &dest

	}

	return response, nil
}

// ParseN87399d34758ce16830740c68626614dbResponse parses an HTTP response from a N87399d34758ce16830740c68626614dbWithResponse call
func ParseN87399d34758ce16830740c68626614dbResponse(rsp *http.Response) (*N87399d34758ce16830740c68626614dbResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &N87399d34758ce16830740c68626614dbResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			Message *string `json:"message,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest N404
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON404 = &dest

	}

	return response, nil
}

// ParseF9c530b5b25df9601cb87d6a58646f0aResponse parses an HTTP response from a F9c530b5b25df9601cb87d6a58646f0aWithResponse call
func ParseF9c530b5b25df9601cb87d6a58646f0aResponse(rsp *http.Response) (*F9c530b5b25df9601cb87d6a58646f0aResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &F9c530b5b25df9601cb87d6a58646f0aResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest []Team
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	}

	return response, nil
}

// ParseN6a4ec9fed1aad7b0b38356c47d7ac509Response parses an HTTP response from a N6a4ec9fed1aad7b0b38356c47d7ac509WithResponse call
func ParseN6a4ec9fed1aad7b0b38356c47d7ac509Response(rsp *http.Response) (*N6a4ec9fed1aad7b0b38356c47d7ac509Response, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &N6a4ec9fed1aad7b0b38356c47d7ac509Response{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest Team
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	}

	return response, nil
}

// ParseN97e636a5796dbe71afb0bbcf1eec6e41Response parses an HTTP response from a N97e636a5796dbe71afb0bbcf1eec6e41WithResponse call
func ParseN97e636a5796dbe71afb0bbcf1eec6e41Response(rsp *http.Response) (*N97e636a5796dbe71afb0bbcf1eec6e41Response, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &N97e636a5796dbe71afb0bbcf1eec6e41Response{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest []User
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	}

	return response, nil
}

// ParseAc57ff546c002032cef44602c46a4e76Response parses an HTTP response from a Ac57ff546c002032cef44602c46a4e76WithResponse call
func ParseAc57ff546c002032cef44602c46a4e76Response(rsp *http.Response) (*Ac57ff546c002032cef44602c46a4e76Response, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &Ac57ff546c002032cef44602c46a4e76Response{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest Team
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest N404
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON404 = &dest

	}

	return response, nil
}

// ParseN7858f5a45d9ea55184c182852a7f0f6cResponse parses an HTTP response from a N7858f5a45d9ea55184c182852a7f0f6cWithResponse call
func ParseN7858f5a45d9ea55184c182852a7f0f6cResponse(rsp *http.Response) (*N7858f5a45d9ea55184c182852a7f0f6cResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &N7858f5a45d9ea55184c182852a7f0f6cResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest []User
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest N404
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON404 = &dest

	}

	return response, nil
}

// ParseN187b37139844731110757711ee71c215Response parses an HTTP response from a N187b37139844731110757711ee71c215WithResponse call
func ParseN187b37139844731110757711ee71c215Response(rsp *http.Response) (*N187b37139844731110757711ee71c215Response, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &N187b37139844731110757711ee71c215Response{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest string
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest N400
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest N401
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON401 = &dest

	}

	return response, nil
}
